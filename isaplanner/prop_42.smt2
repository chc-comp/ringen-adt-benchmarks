(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_2 ) (Z_3 (unS_0 Nat_1)))))
(declare-fun diseqNat_1 (Nat_1 Nat_1) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_37 Nat_1))
	(diseqNat_1 Z_2 (Z_3 x_37))))
(assert (forall ((x_38 Nat_1))
	(diseqNat_1 (Z_3 x_38) Z_2)))
(assert (forall ((x_39 Nat_1) (x_40 Nat_1))
	(=> (diseqNat_1 x_39 x_40) (diseqNat_1 (Z_3 x_39) (Z_3 x_40)))))
(assert (forall ((x_17 Nat_1) (x_18 list_0))
	(diseqlist_0 nil_0 (cons_0 x_17 x_18))))
(assert (forall ((x_19 Nat_1) (x_20 list_0))
	(diseqlist_0 (cons_0 x_19 x_20) nil_0)))
(assert (forall ((x_21 Nat_1) (x_22 list_0) (x_23 Nat_1) (x_24 list_0))
	(=> (diseqNat_1 x_21 x_23) (diseqlist_0 (cons_0 x_21 x_22) (cons_0 x_23 x_24)))))
(assert (forall ((x_21 Nat_1) (x_22 list_0) (x_23 Nat_1) (x_24 list_0))
	(=> (diseqlist_0 x_22 x_24) (diseqlist_0 (cons_0 x_21 x_22) (cons_0 x_23 x_24)))))
(assert (forall ((x_5 list_0) (x_1 Nat_1) (x_2 list_0) (z_1 Nat_0))
	(=> (take_0 x_5 z_1 x_2) (take_0 (cons_0 x_1 x_5) (S_0 z_1) (cons_0 x_1 x_2)))))
(assert (forall ((z_1 Nat_0))
	(take_0 nil_0 (S_0 z_1) nil_0)))
(assert (forall ((y_0 list_0))
	(take_0 nil_0 Z_0 y_0)))
(assert (forall ((x_8 list_0) (x_9 list_0) (n_0 Nat_0) (x_3 Nat_1) (xs_0 list_0))
	(=> (and (diseqlist_0 x_8 (cons_0 x_3 x_9)) (take_0 x_8 (S_0 n_0) (cons_0 x_3 xs_0)) (take_0 x_9 n_0 xs_0)) false)))
(check-sat)
(get-model)
