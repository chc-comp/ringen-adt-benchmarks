(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_4 ) (Z_5 (unS_0 Nat_1)))))
(declare-fun diseqNat_1 (Nat_1 Nat_1) Bool)
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_1) (projpair_1 Nat_1)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 pair_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun zip_0 (list_1 list_0 list_0) Bool)
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(declare-fun take_1 (list_1 Nat_0 list_1) Bool)
(assert (forall ((x_77 Nat_1))
	(diseqNat_1 Z_4 (Z_5 x_77))))
(assert (forall ((x_78 Nat_1))
	(diseqNat_1 (Z_5 x_78) Z_4)))
(assert (forall ((x_79 Nat_1) (x_80 Nat_1))
	(=> (diseqNat_1 x_79 x_80) (diseqNat_1 (Z_5 x_79) (Z_5 x_80)))))
(assert (forall ((x_33 Nat_1) (x_34 Nat_1) (x_35 Nat_1) (x_36 Nat_1))
	(=> (diseqNat_1 x_33 x_35) (diseqpair_0 (pair_1 x_33 x_34) (pair_1 x_35 x_36)))))
(assert (forall ((x_33 Nat_1) (x_34 Nat_1) (x_35 Nat_1) (x_36 Nat_1))
	(=> (diseqNat_1 x_34 x_36) (diseqpair_0 (pair_1 x_33 x_34) (pair_1 x_35 x_36)))))
(assert (forall ((x_57 pair_0) (x_58 list_1))
	(diseqlist_1 nil_1 (cons_1 x_57 x_58))))
(assert (forall ((x_59 pair_0) (x_60 list_1))
	(diseqlist_1 (cons_1 x_59 x_60) nil_1)))
(assert (forall ((x_61 pair_0) (x_62 list_1) (x_63 pair_0) (x_64 list_1))
	(=> (diseqpair_0 x_61 x_63) (diseqlist_1 (cons_1 x_61 x_62) (cons_1 x_63 x_64)))))
(assert (forall ((x_61 pair_0) (x_62 list_1) (x_63 pair_0) (x_64 list_1))
	(=> (diseqlist_1 x_62 x_64) (diseqlist_1 (cons_1 x_61 x_62) (cons_1 x_63 x_64)))))
(assert (forall ((x_11 list_1) (x_2 Nat_1) (x_3 list_0) (z_1 Nat_1) (x_1 list_0))
	(=> (zip_0 x_11 x_1 x_3) (zip_0 (cons_1 (pair_1 z_1 x_2) x_11) (cons_0 z_1 x_1) (cons_0 x_2 x_3)))))
(assert (forall ((z_1 Nat_1) (x_1 list_0))
	(zip_0 nil_1 (cons_0 z_1 x_1) nil_0)))
(assert (forall ((y_0 list_0))
	(zip_0 nil_1 nil_0 y_0)))
(assert (forall ((x_15 list_0) (x_5 Nat_1) (x_6 list_0) (z_2 Nat_0))
	(=> (take_0 x_15 z_2 x_6) (take_0 (cons_0 x_5 x_15) (S_0 z_2) (cons_0 x_5 x_6)))))
(assert (forall ((z_2 Nat_0))
	(take_0 nil_0 (S_0 z_2) nil_0)))
(assert (forall ((y_1 list_0))
	(take_0 nil_0 Z_0 y_1)))
(assert (forall ((x_19 list_1) (x_8 pair_0) (x_9 list_1) (z_3 Nat_0))
	(=> (take_1 x_19 z_3 x_9) (take_1 (cons_1 x_8 x_19) (S_0 z_3) (cons_1 x_8 x_9)))))
(assert (forall ((z_3 Nat_0))
	(take_1 nil_1 (S_0 z_3) nil_1)))
(assert (forall ((y_2 list_1))
	(take_1 nil_1 Z_0 y_2)))
(assert (forall ((x_22 list_1) (x_23 list_1) (x_24 list_0) (x_25 list_0) (x_26 list_1) (n_0 Nat_0) (xs_0 list_0) (ys_0 list_0))
	(=> (and (diseqlist_1 x_23 x_26) (zip_0 x_22 xs_0 ys_0) (take_1 x_23 n_0 x_22) (take_0 x_24 n_0 xs_0) (take_0 x_25 n_0 ys_0) (zip_0 x_26 x_24 x_25)) false)))
(check-sat)
(get-model)
