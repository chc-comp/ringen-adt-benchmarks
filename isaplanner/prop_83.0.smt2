(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_1 ) (S_1 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_48 Nat_1) (x_47 Nat_1))
	(=> (= x_48 (S_1 x_47))
	    (unS_1 x_47 x_48))))
(assert (isZ_0 Z_1))
(assert (forall ((x_49 Nat_1))
	(isS_0 (S_1 x_49))))
(assert (forall ((x_50 Nat_1))
	(diseqNat_0 Z_1 (S_1 x_50))))
(assert (forall ((x_51 Nat_1))
	(diseqNat_0 (S_1 x_51) Z_1)))
(assert (forall ((x_52 Nat_1) (x_53 Nat_1))
	(=> (diseqNat_0 x_52 x_53)
	    (diseqNat_0 (S_1 x_52) (S_1 x_53)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_6 Nat_1))
	(add_0 y_6 Z_1 y_6)))
(assert (forall ((x_45 Nat_1) (y_6 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_45 y_6)
	    (add_0 (S_1 r_0) (S_1 x_45) y_6))))
(assert (forall ((y_6 Nat_1))
	(minus_0 Z_1 Z_1 y_6)))
(assert (forall ((x_45 Nat_1) (y_6 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_45 y_6)
	    (minus_0 (S_1 r_0) (S_1 x_45) y_6))))
(assert (forall ((y_6 Nat_1))
	(le_0 Z_1 y_6)))
(assert (forall ((x_45 Nat_1) (y_6 Nat_1))
	(=> (le_0 x_45 y_6)
	    (le_0 (S_1 x_45) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(ge_0 y_6 Z_1)))
(assert (forall ((x_45 Nat_1) (y_6 Nat_1))
	(=> (ge_0 x_45 y_6)
	    (ge_0 (S_1 x_45) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(lt_0 Z_1 (S_1 y_6))))
(assert (forall ((x_45 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_45 y_6)
	    (lt_0 (S_1 x_45) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(gt_0 (S_1 y_6) Z_1)))
(assert (forall ((x_45 Nat_1) (y_6 Nat_1))
	(=> (gt_0 x_45 y_6)
	    (gt_0 (S_1 x_45) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(mult_0 Z_1 Z_1 y_6)))
(assert (forall ((x_45 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_5 Nat_1))
	(=>	(and (mult_0 r_0 x_45 y_6)
			(add_0 z_5 r_0 y_6))
		(mult_0 z_5 (S_1 x_45) y_6))))
(assert (forall ((x_45 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_45 y_6)
	    (div_0 Z_1 x_45 y_6))))
(assert (forall ((x_45 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_5 Nat_1))
	(=>	(and (ge_0 x_45 y_6)
			(minus_0 z_5 x_45 y_6)
			(div_0 r_0 z_5 y_6))
		(div_0 (S_1 r_0) x_45 y_6))))
(assert (forall ((x_45 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_45 y_6)
	    (mod_0 x_45 x_45 y_6))))
(assert (forall ((x_45 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_5 Nat_1))
	(=>	(and (ge_0 x_45 y_6)
			(minus_0 z_5 x_45 y_6)
			(mod_0 r_0 z_5 y_6))
		(mod_0 r_0 x_45 y_6))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_1) (projpair_1 Nat_1)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (Nat_1 pair_0) Bool)
(declare-fun projpair_3 (Nat_1 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_56 pair_0) (x_54 Nat_1) (x_55 Nat_1))
	(=> (= x_56 (pair_1 x_54 x_55))
	    (projpair_2 x_54 x_56))))
(assert (forall ((x_56 pair_0) (x_54 Nat_1) (x_55 Nat_1))
	(=> (= x_56 (pair_1 x_54 x_55))
	    (projpair_3 x_55 x_56))))
(assert (forall ((x_57 Nat_1) (x_58 Nat_1))
	(ispair_0 (pair_1 x_57 x_58))))
(assert (forall ((x_59 Nat_1) (x_60 Nat_1) (x_61 Nat_1) (x_62 Nat_1))
	(=> (diseqNat_0 x_59 x_61)
	    (diseqpair_0 (pair_1 x_59 x_60) (pair_1 x_61 x_62)))))
(assert (forall ((x_59 Nat_1) (x_60 Nat_1) (x_61 Nat_1) (x_62 Nat_1))
	(=> (diseqNat_0 x_60 x_62)
	    (diseqpair_0 (pair_1 x_59 x_60) (pair_1 x_61 x_62)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_2 (Nat_1 list_0) Bool)
(declare-fun tail_2 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_66 list_0) (x_64 Nat_1) (x_65 list_0))
	(=> (= x_66 (cons_0 x_64 x_65))
	    (head_2 x_64 x_66))))
(assert (forall ((x_66 list_0) (x_64 Nat_1) (x_65 list_0))
	(=> (= x_66 (cons_0 x_64 x_65))
	    (tail_2 x_65 x_66))))
(assert (isnil_0 nil_0))
(assert (forall ((x_67 Nat_1) (x_68 list_0))
	(iscons_0 (cons_0 x_67 x_68))))
(assert (forall ((x_69 Nat_1) (x_70 list_0))
	(diseqlist_0 nil_0 (cons_0 x_69 x_70))))
(assert (forall ((x_71 Nat_1) (x_72 list_0))
	(diseqlist_0 (cons_0 x_71 x_72) nil_0)))
(assert (forall ((x_73 Nat_1) (x_74 list_0) (x_75 Nat_1) (x_76 list_0))
	(=> (diseqNat_0 x_73 x_75)
	    (diseqlist_0 (cons_0 x_73 x_74) (cons_0 x_75 x_76)))))
(assert (forall ((x_73 Nat_1) (x_74 list_0) (x_75 Nat_1) (x_76 list_0))
	(=> (diseqlist_0 x_74 x_76)
	    (diseqlist_0 (cons_0 x_73 x_74) (cons_0 x_75 x_76)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 pair_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_3 (pair_0 list_1) Bool)
(declare-fun tail_3 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_80 list_1) (x_78 pair_0) (x_79 list_1))
	(=> (= x_80 (cons_1 x_78 x_79))
	    (head_3 x_78 x_80))))
(assert (forall ((x_80 list_1) (x_78 pair_0) (x_79 list_1))
	(=> (= x_80 (cons_1 x_78 x_79))
	    (tail_3 x_79 x_80))))
(assert (isnil_1 nil_1))
(assert (forall ((x_81 pair_0) (x_82 list_1))
	(iscons_1 (cons_1 x_81 x_82))))
(assert (forall ((x_83 pair_0) (x_84 list_1))
	(diseqlist_1 nil_1 (cons_1 x_83 x_84))))
(assert (forall ((x_85 pair_0) (x_86 list_1))
	(diseqlist_1 (cons_1 x_85 x_86) nil_1)))
(assert (forall ((x_87 pair_0) (x_88 list_1) (x_89 pair_0) (x_90 list_1))
	(=> (diseqpair_0 x_87 x_89)
	    (diseqlist_1 (cons_1 x_87 x_88) (cons_1 x_89 x_90)))))
(assert (forall ((x_87 pair_0) (x_88 list_1) (x_89 pair_0) (x_90 list_1))
	(=> (diseqlist_1 x_88 x_90)
	    (diseqlist_1 (cons_1 x_87 x_88) (cons_1 x_89 x_90)))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_1 (Nat_0) Bool)
(declare-fun isS_1 (Nat_0) Bool)
(assert (forall ((x_93 Nat_0) (x_92 Nat_0))
	(=> (= x_93 (S_0 x_92))
	    (projS_1 x_92 x_93))))
(assert (isZ_1 Z_0))
(assert (forall ((x_94 Nat_0))
	(isS_1 (S_0 x_94))))
(assert (forall ((x_95 Nat_0))
	(diseqNat_1 Z_0 (S_0 x_95))))
(assert (forall ((x_96 Nat_0))
	(diseqNat_1 (S_0 x_96) Z_0)))
(assert (forall ((x_97 Nat_0) (x_98 Nat_0))
	(=> (diseqNat_1 x_97 x_98)
	    (diseqNat_1 (S_0 x_97) (S_0 x_98)))))
(declare-fun zip_0 (list_1 list_0 list_0) Bool)
(assert (forall ((x_0 list_0) (y_0 list_0) (z_0 Nat_1) (x_1 list_0) (x_2 Nat_1) (x_3 list_0) (x_15 list_1) (x_16 list_1))
	(=>	(and (= x_15 (cons_1 (pair_1 z_0 x_2) x_16))
			(zip_0 x_16 x_1 x_3)
			(= x_0 (cons_0 z_0 x_1))
			(= y_0 (cons_0 x_2 x_3)))
		(zip_0 x_15 x_0 y_0))))
(assert (forall ((x_0 list_0) (y_0 list_0) (z_0 Nat_1) (x_1 list_0) (x_17 list_1))
	(=>	(and (= x_17 nil_1)
			(= x_0 (cons_0 z_0 x_1))
			(= y_0 nil_0))
		(zip_0 x_17 x_0 y_0))))
(assert (forall ((x_0 list_0) (y_0 list_0) (x_18 list_1))
	(=>	(and (= x_18 nil_1)
			(= x_0 nil_0))
		(zip_0 x_18 x_0 y_0))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_4 Nat_0) (y_1 list_0) (z_1 Nat_0) (x_5 Nat_1) (x_6 list_0) (x_19 list_0) (x_20 list_0))
	(=>	(and (= x_19 (cons_0 x_5 x_20))
			(take_0 x_20 z_1 x_6)
			(= x_4 (S_0 z_1))
			(= y_1 (cons_0 x_5 x_6)))
		(take_0 x_19 x_4 y_1))))
(assert (forall ((x_4 Nat_0) (y_1 list_0) (z_1 Nat_0) (x_21 list_0))
	(=>	(and (= x_21 nil_0)
			(= x_4 (S_0 z_1))
			(= y_1 nil_0))
		(take_0 x_21 x_4 y_1))))
(assert (forall ((x_4 Nat_0) (y_1 list_0) (x_22 list_0))
	(=>	(and (= x_22 nil_0)
			(= x_4 Z_0))
		(take_0 x_22 x_4 y_1))))
(declare-fun len_0 (Nat_0 list_0) Bool)
(assert (forall ((x_7 list_0) (y_2 Nat_1) (xs_0 list_0) (x_23 Nat_0) (x_24 Nat_0))
	(=>	(and (= x_23 (S_0 x_24))
			(len_0 x_24 xs_0)
			(= x_7 (cons_0 y_2 xs_0)))
		(len_0 x_23 x_7))))
(assert (forall ((x_7 list_0) (x_25 Nat_0))
	(=>	(and (= x_25 Z_0)
			(= x_7 nil_0))
		(len_0 x_25 x_7))))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_8 Nat_0) (y_3 list_0) (z_2 Nat_0) (x_9 Nat_1) (x_10 list_0) (x_26 list_0) (x_27 list_0))
	(=>	(and (= x_26 x_27)
			(drop_0 x_27 z_2 x_10)
			(= x_8 (S_0 z_2))
			(= y_3 (cons_0 x_9 x_10)))
		(drop_0 x_26 x_8 y_3))))
(assert (forall ((x_8 Nat_0) (y_3 list_0) (z_2 Nat_0) (x_28 list_0))
	(=>	(and (= x_28 nil_0)
			(= x_8 (S_0 z_2))
			(= y_3 nil_0))
		(drop_0 x_28 x_8 y_3))))
(assert (forall ((x_8 Nat_0) (y_3 list_0) (x_29 list_0))
	(=>	(and (= x_29 y_3)
			(= x_8 Z_0))
		(drop_0 x_29 x_8 y_3))))
(declare-fun x_11 (list_0 list_0 list_0) Bool)
(assert (forall ((x_12 list_0) (y_4 list_0) (z_3 Nat_1) (xs_1 list_0) (x_30 list_0) (x_31 list_0))
	(=>	(and (= x_30 (cons_0 z_3 x_31))
			(x_11 x_31 xs_1 y_4)
			(= x_12 (cons_0 z_3 xs_1)))
		(x_11 x_30 x_12 y_4))))
(assert (forall ((x_12 list_0) (y_4 list_0) (x_32 list_0))
	(=>	(and (= x_32 y_4)
			(= x_12 nil_0))
		(x_11 x_32 x_12 y_4))))
(declare-fun x_13 (list_1 list_1 list_1) Bool)
(assert (forall ((x_14 list_1) (y_5 list_1) (z_4 pair_0) (xs_2 list_1) (x_33 list_1) (x_34 list_1))
	(=>	(and (= x_33 (cons_1 z_4 x_34))
			(x_13 x_34 xs_2 y_5)
			(= x_14 (cons_1 z_4 xs_2)))
		(x_13 x_33 x_14 y_5))))
(assert (forall ((x_14 list_1) (y_5 list_1) (x_35 list_1))
	(=>	(and (= x_35 y_5)
			(= x_14 nil_1))
		(x_13 x_35 x_14 y_5))))
(assert (forall ((xs_3 list_0) (ys_0 list_0) (zs_0 list_0) (x_36 list_0) (x_37 list_1) (x_38 Nat_0) (x_39 list_0) (x_40 list_1) (x_41 Nat_0) (x_42 list_0) (x_43 list_1) (x_44 list_1))
	(=>	(and (diseqlist_1 x_37 x_44)
			(x_11 x_36 xs_3 ys_0)
			(zip_0 x_37 x_36 zs_0)
			(len_0 x_38 xs_3)
			(take_0 x_39 x_38 zs_0)
			(zip_0 x_40 xs_3 x_39)
			(len_0 x_41 xs_3)
			(drop_0 x_42 x_41 zs_0)
			(zip_0 x_43 ys_0 x_42)
			(x_13 x_44 x_40 x_43))
		false)))
(check-sat)
