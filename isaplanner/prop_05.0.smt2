(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_1 ) (S_1 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_22 Nat_1) (x_21 Nat_1))
	(=> (= x_22 (S_1 x_21))
	    (unS_1 x_21 x_22))))
(assert (isZ_0 Z_1))
(assert (forall ((x_23 Nat_1))
	(isS_0 (S_1 x_23))))
(assert (forall ((x_24 Nat_1))
	(diseqNat_0 Z_1 (S_1 x_24))))
(assert (forall ((x_25 Nat_1))
	(diseqNat_0 (S_1 x_25) Z_1)))
(assert (forall ((x_26 Nat_1) (x_27 Nat_1))
	(=> (diseqNat_0 x_26 x_27)
	    (diseqNat_0 (S_1 x_26) (S_1 x_27)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_3 Nat_1))
	(add_0 y_3 Z_1 y_3)))
(assert (forall ((x_19 Nat_1) (y_3 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_19 y_3)
	    (add_0 (S_1 r_0) (S_1 x_19) y_3))))
(assert (forall ((y_3 Nat_1))
	(minus_0 Z_1 Z_1 y_3)))
(assert (forall ((x_19 Nat_1) (y_3 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_19 y_3)
	    (minus_0 (S_1 r_0) (S_1 x_19) y_3))))
(assert (forall ((y_3 Nat_1))
	(le_0 Z_1 y_3)))
(assert (forall ((x_19 Nat_1) (y_3 Nat_1))
	(=> (le_0 x_19 y_3)
	    (le_0 (S_1 x_19) (S_1 y_3)))))
(assert (forall ((y_3 Nat_1))
	(ge_0 y_3 Z_1)))
(assert (forall ((x_19 Nat_1) (y_3 Nat_1))
	(=> (ge_0 x_19 y_3)
	    (ge_0 (S_1 x_19) (S_1 y_3)))))
(assert (forall ((y_3 Nat_1))
	(lt_0 Z_1 (S_1 y_3))))
(assert (forall ((x_19 Nat_1) (y_3 Nat_1))
	(=> (lt_0 x_19 y_3)
	    (lt_0 (S_1 x_19) (S_1 y_3)))))
(assert (forall ((y_3 Nat_1))
	(gt_0 (S_1 y_3) Z_1)))
(assert (forall ((x_19 Nat_1) (y_3 Nat_1))
	(=> (gt_0 x_19 y_3)
	    (gt_0 (S_1 x_19) (S_1 y_3)))))
(assert (forall ((y_3 Nat_1))
	(mult_0 Z_1 Z_1 y_3)))
(assert (forall ((x_19 Nat_1) (y_3 Nat_1) (r_0 Nat_1) (z_2 Nat_1))
	(=>	(and (mult_0 r_0 x_19 y_3)
			(add_0 z_2 r_0 y_3))
		(mult_0 z_2 (S_1 x_19) y_3))))
(assert (forall ((x_19 Nat_1) (y_3 Nat_1))
	(=> (lt_0 x_19 y_3)
	    (div_0 Z_1 x_19 y_3))))
(assert (forall ((x_19 Nat_1) (y_3 Nat_1) (r_0 Nat_1) (z_2 Nat_1))
	(=>	(and (ge_0 x_19 y_3)
			(minus_0 z_2 x_19 y_3)
			(div_0 r_0 z_2 y_3))
		(div_0 (S_1 r_0) x_19 y_3))))
(assert (forall ((x_19 Nat_1) (y_3 Nat_1))
	(=> (lt_0 x_19 y_3)
	    (mod_0 x_19 x_19 y_3))))
(assert (forall ((x_19 Nat_1) (y_3 Nat_1) (r_0 Nat_1) (z_2 Nat_1))
	(=>	(and (ge_0 x_19 y_3)
			(minus_0 z_2 x_19 y_3)
			(mod_0 r_0 z_2 y_3))
		(mod_0 r_0 x_19 y_3))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_1 (Nat_0) Bool)
(declare-fun isS_1 (Nat_0) Bool)
(assert (forall ((x_30 Nat_0) (x_29 Nat_0))
	(=> (= x_30 (S_0 x_29))
	    (projS_1 x_29 x_30))))
(assert (isZ_1 Z_0))
(assert (forall ((x_31 Nat_0))
	(isS_1 (S_0 x_31))))
(assert (forall ((x_32 Nat_0))
	(diseqNat_1 Z_0 (S_0 x_32))))
(assert (forall ((x_33 Nat_0))
	(diseqNat_1 (S_0 x_33) Z_0)))
(assert (forall ((x_34 Nat_0) (x_35 Nat_0))
	(=> (diseqNat_1 x_34 x_35)
	    (diseqNat_1 (S_0 x_34) (S_0 x_35)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_39 list_0) (x_37 Nat_0) (x_38 list_0))
	(=> (= x_39 (cons_0 x_37 x_38))
	    (head_1 x_37 x_39))))
(assert (forall ((x_39 list_0) (x_37 Nat_0) (x_38 list_0))
	(=> (= x_39 (cons_0 x_37 x_38))
	    (tail_1 x_38 x_39))))
(assert (isnil_0 nil_0))
(assert (forall ((x_40 Nat_0) (x_41 list_0))
	(iscons_0 (cons_0 x_40 x_41))))
(assert (forall ((x_42 Nat_0) (x_43 list_0))
	(diseqlist_0 nil_0 (cons_0 x_42 x_43))))
(assert (forall ((x_44 Nat_0) (x_45 list_0))
	(diseqlist_0 (cons_0 x_44 x_45) nil_0)))
(assert (forall ((x_46 Nat_0) (x_47 list_0) (x_48 Nat_0) (x_49 list_0))
	(=> (diseqNat_1 x_46 x_48)
	    (diseqlist_0 (cons_0 x_46 x_47) (cons_0 x_48 x_49)))))
(assert (forall ((x_46 Nat_0) (x_47 list_0) (x_48 Nat_0) (x_49 list_0))
	(=> (diseqlist_0 x_47 x_49)
	    (diseqlist_0 (cons_0 x_46 x_47) (cons_0 x_48 x_49)))))
(declare-fun x_0 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (x_2 Nat_0) (y_1 Nat_0) (x_5 Bool) (x_6 Bool))
	(=>	(and (= x_5 x_6)
			(x_0 x_6 x_2 y_1)
			(= x_1 (S_0 x_2))
			(= y_0 (S_0 y_1)))
		(x_0 x_5 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (x_2 Nat_0) (x_7 Bool))
	(=>	(and (= x_7 false)
			(= x_1 (S_0 x_2))
			(= y_0 Z_0))
		(x_0 x_7 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_8 Bool))
	(=>	(and (= x_8 false)
			(= x_1 Z_0)
			(= y_0 (S_0 z_0)))
		(x_0 x_8 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (x_9 Bool))
	(=>	(and (= x_9 true)
			(= x_1 Z_0)
			(= y_0 Z_0))
		(x_0 x_9 x_1 y_0))))
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_3 Nat_0) (y_2 list_0) (z_1 Nat_0) (ys_0 list_0) (x_11 Nat_0) (x_12 Nat_0) (x_10 Bool))
	(=>	(and (= x_11 (S_0 x_12))
			(count_0 x_12 x_3 ys_0)
			(= y_2 (cons_0 z_1 ys_0))
			(= x_10 true)
			(x_0 x_10 x_3 z_1))
		(count_0 x_11 x_3 y_2))))
(assert (forall ((x_3 Nat_0) (y_2 list_0) (z_1 Nat_0) (ys_0 list_0) (x_14 Nat_0) (x_15 Nat_0) (x_13 Bool))
	(=>	(and (= x_14 x_15)
			(count_0 x_15 x_3 ys_0)
			(= y_2 (cons_0 z_1 ys_0))
			(= x_13 false)
			(x_0 x_13 x_3 z_1))
		(count_0 x_14 x_3 y_2))))
(assert (forall ((x_3 Nat_0) (y_2 list_0) (x_16 Nat_0))
	(=>	(and (= x_16 Z_0)
			(= y_2 nil_0))
		(count_0 x_16 x_3 y_2))))
(assert (forall ((n_0 Nat_0) (x_4 Nat_0) (xs_0 list_0) (x_17 Nat_0) (x_18 Nat_0))
	(=>	(and (diseqNat_1 (S_0 x_17) x_18)
			(= n_0 x_4)
			(count_0 x_17 n_0 xs_0)
			(count_0 x_18 n_0 (cons_0 x_4 xs_0)))
		false)))
(check-sat)
