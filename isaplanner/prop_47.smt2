(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_2 ) (Z_3 (unS_0 Nat_1)))))
(declare-datatypes ((Tree_0 0)) (((Leaf_0 ) (Node_0 (projNode_0 Tree_0) (projNode_1 Nat_1) (projNode_2 Tree_0)))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun mirror_0 (Tree_0 Tree_0) Bool)
(declare-fun max_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun height_0 (Nat_0 Tree_0) Bool)
(assert (forall ((x_45 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_45))))
(assert (forall ((x_46 Nat_0))
	(diseqNat_0 (S_0 x_46) Z_0)))
(assert (forall ((x_47 Nat_0) (x_48 Nat_0))
	(=> (diseqNat_0 x_47 x_48) (diseqNat_0 (S_0 x_47) (S_0 x_48)))))
(assert (forall ((x_5 Tree_0) (x_6 Tree_0) (l_0 Tree_0) (y_0 Nat_1) (r_0 Tree_0))
	(=> (and (mirror_0 x_5 r_0) (mirror_0 x_6 l_0)) (mirror_0 (Node_0 x_5 y_0 x_6) (Node_0 l_0 y_0 r_0)))))
(assert (mirror_0 Leaf_0 Leaf_0))
(assert (forall ((x_9 Nat_0) (x_2 Nat_0) (z_1 Nat_0))
	(=> (max_0 x_9 z_1 x_2) (max_0 (S_0 x_9) (S_0 z_1) (S_0 x_2)))))
(assert (forall ((z_1 Nat_0))
	(max_0 (S_0 z_1) (S_0 z_1) Z_0)))
(assert (forall ((x_11 Nat_0))
	(max_0 x_11 Z_0 x_11)))
(assert (forall ((x_13 Nat_0) (x_14 Nat_0) (x_15 Nat_0) (l_1 Tree_0) (y_2 Nat_1) (r_1 Tree_0))
	(=> (and (height_0 x_13 l_1) (height_0 x_14 r_1) (max_0 x_15 x_13 x_14)) (height_0 (S_0 x_15) (Node_0 l_1 y_2 r_1)))))
(assert (height_0 Z_0 Leaf_0))
(assert (forall ((x_17 Tree_0) (x_18 Nat_0) (x_19 Nat_0) (a_0 Tree_0))
	(=> (and (diseqNat_0 x_18 x_19) (mirror_0 x_17 a_0) (height_0 x_18 x_17) (height_0 x_19 a_0)) false)))
(check-sat)
(get-model)
