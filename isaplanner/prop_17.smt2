(set-logic HORN)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun x_0 (Bool_0 Nat_0 Nat_0) Bool)
(declare-fun x_3 (Bool_0 Nat_0 Nat_0) Bool)
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(assert (forall ((x_6 Bool_0) (y_1 Nat_0) (x_2 Nat_0))
	(=> (x_0 x_6 x_2 y_1) (x_0 x_6 (S_0 x_2) (S_0 y_1)))))
(assert (forall ((x_2 Nat_0))
	(x_0 false_0 (S_0 x_2) Z_0)))
(assert (forall ((z_1 Nat_0))
	(x_0 false_0 Z_0 (S_0 z_1))))
(assert (x_0 true_0 Z_0 Z_0))
(assert (forall ((x_11 Bool_0) (x_5 Nat_0) (z_2 Nat_0))
	(=> (x_3 x_11 z_2 x_5) (x_3 x_11 (S_0 z_2) (S_0 x_5)))))
(assert (forall ((z_2 Nat_0))
	(x_3 false_0 (S_0 z_2) Z_0)))
(assert (forall ((y_2 Nat_0))
	(x_3 true_0 Z_0 y_2)))
(assert (forall ((x_15 Bool_0) (x_16 Bool_0) (n_0 Nat_0))
	(=> (and (diseqBool_0 x_15 x_16) (x_3 x_15 n_0 Z_0) (x_0 x_16 n_0 Z_0)) false)))
(check-sat)
(get-model)
