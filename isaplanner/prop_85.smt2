(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_4 ) (Z_5 (unS_0 Nat_1)))))
(declare-fun diseqNat_1 (Nat_1 Nat_1) Bool)
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_1) (projpair_1 Nat_1)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 pair_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun zip_0 (list_1 list_0 list_0) Bool)
(declare-fun len_0 (Nat_0 list_0) Bool)
(declare-fun x_5 (list_0 list_0 list_0) Bool)
(declare-fun rev_0 (list_0 list_0) Bool)
(declare-fun x_8 (list_1 list_1 list_1) Bool)
(declare-fun rev_1 (list_1 list_1) Bool)
(assert (forall ((x_89 Nat_1))
	(diseqNat_1 Z_4 (Z_5 x_89))))
(assert (forall ((x_90 Nat_1))
	(diseqNat_1 (Z_5 x_90) Z_4)))
(assert (forall ((x_91 Nat_1) (x_92 Nat_1))
	(=> (diseqNat_1 x_91 x_92) (diseqNat_1 (Z_5 x_91) (Z_5 x_92)))))
(assert (forall ((x_45 Nat_1) (x_46 Nat_1) (x_47 Nat_1) (x_48 Nat_1))
	(=> (diseqNat_1 x_45 x_47) (diseqpair_0 (pair_1 x_45 x_46) (pair_1 x_47 x_48)))))
(assert (forall ((x_45 Nat_1) (x_46 Nat_1) (x_47 Nat_1) (x_48 Nat_1))
	(=> (diseqNat_1 x_46 x_48) (diseqpair_0 (pair_1 x_45 x_46) (pair_1 x_47 x_48)))))
(assert (forall ((x_69 pair_0) (x_70 list_1))
	(diseqlist_1 nil_1 (cons_1 x_69 x_70))))
(assert (forall ((x_71 pair_0) (x_72 list_1))
	(diseqlist_1 (cons_1 x_71 x_72) nil_1)))
(assert (forall ((x_73 pair_0) (x_74 list_1) (x_75 pair_0) (x_76 list_1))
	(=> (diseqpair_0 x_73 x_75) (diseqlist_1 (cons_1 x_73 x_74) (cons_1 x_75 x_76)))))
(assert (forall ((x_73 pair_0) (x_74 list_1) (x_75 pair_0) (x_76 list_1))
	(=> (diseqlist_1 x_74 x_76) (diseqlist_1 (cons_1 x_73 x_74) (cons_1 x_75 x_76)))))
(assert (forall ((x_12 list_1) (x_2 Nat_1) (x_3 list_0) (z_1 Nat_1) (x_1 list_0))
	(=> (zip_0 x_12 x_1 x_3) (zip_0 (cons_1 (pair_1 z_1 x_2) x_12) (cons_0 z_1 x_1) (cons_0 x_2 x_3)))))
(assert (forall ((z_1 Nat_1) (x_1 list_0))
	(zip_0 nil_1 (cons_0 z_1 x_1) nil_0)))
(assert (forall ((y_0 list_0))
	(zip_0 nil_1 nil_0 y_0)))
(assert (forall ((x_16 Nat_0) (y_1 Nat_1) (xs_0 list_0))
	(=> (len_0 x_16 xs_0) (len_0 (S_0 x_16) (cons_0 y_1 xs_0)))))
(assert (len_0 Z_0 nil_0))
(assert (forall ((x_19 list_0) (z_2 Nat_1) (xs_1 list_0) (y_2 list_0))
	(=> (x_5 x_19 xs_1 y_2) (x_5 (cons_0 z_2 x_19) (cons_0 z_2 xs_1) y_2))))
(assert (forall ((x_20 list_0))
	(x_5 x_20 nil_0 x_20)))
(assert (forall ((x_21 list_0) (x_22 list_0) (y_3 Nat_1) (xs_2 list_0))
	(=> (and (rev_0 x_22 xs_2) (x_5 x_21 x_22 (cons_0 y_3 nil_0))) (rev_0 x_21 (cons_0 y_3 xs_2)))))
(assert (rev_0 nil_0 nil_0))
(assert (forall ((x_26 list_1) (z_3 pair_0) (xs_3 list_1) (y_4 list_1))
	(=> (x_8 x_26 xs_3 y_4) (x_8 (cons_1 z_3 x_26) (cons_1 z_3 xs_3) y_4))))
(assert (forall ((x_27 list_1))
	(x_8 x_27 nil_1 x_27)))
(assert (forall ((x_28 list_1) (x_29 list_1) (y_5 pair_0) (xs_4 list_1))
	(=> (and (rev_1 x_29 xs_4) (x_8 x_28 x_29 (cons_1 y_5 nil_1))) (rev_1 x_28 (cons_1 y_5 xs_4)))))
(assert (rev_1 nil_1 nil_1))
(assert (forall ((x_37 Nat_0) (x_32 list_0) (x_33 list_0) (x_34 list_1) (x_35 list_1) (x_36 list_1) (xs_5 list_0) (ys_0 list_0))
	(=> (and (diseqlist_1 x_34 x_36) (len_0 x_37 xs_5) (len_0 x_37 ys_0) (rev_0 x_32 xs_5) (rev_0 x_33 ys_0) (zip_0 x_34 x_32 x_33) (zip_0 x_35 xs_5 ys_0) (rev_1 x_36 x_35)) false)))
(check-sat)
(get-model)
