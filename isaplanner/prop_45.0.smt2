(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_14 Nat_0) (x_13 Nat_0))
	(=> (= x_14 (S_0 x_13))
	    (unS_1 x_13 x_14))))
(assert (isZ_0 Z_0))
(assert (forall ((x_15 Nat_0))
	(isS_0 (S_0 x_15))))
(assert (forall ((x_16 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_16))))
(assert (forall ((x_17 Nat_0))
	(diseqNat_0 (S_0 x_17) Z_0)))
(assert (forall ((x_18 Nat_0) (x_19 Nat_0))
	(=> (diseqNat_0 x_18 x_19)
	    (diseqNat_0 (S_0 x_18) (S_0 x_19)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_2 Nat_0))
	(add_0 y_2 Z_0 y_2)))
(assert (forall ((x_11 Nat_0) (y_2 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_11 y_2)
	    (add_0 (S_0 r_0) (S_0 x_11) y_2))))
(assert (forall ((y_2 Nat_0))
	(minus_0 Z_0 Z_0 y_2)))
(assert (forall ((x_11 Nat_0) (y_2 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_11 y_2)
	    (minus_0 (S_0 r_0) (S_0 x_11) y_2))))
(assert (forall ((y_2 Nat_0))
	(le_0 Z_0 y_2)))
(assert (forall ((x_11 Nat_0) (y_2 Nat_0))
	(=> (le_0 x_11 y_2)
	    (le_0 (S_0 x_11) (S_0 y_2)))))
(assert (forall ((y_2 Nat_0))
	(ge_0 y_2 Z_0)))
(assert (forall ((x_11 Nat_0) (y_2 Nat_0))
	(=> (ge_0 x_11 y_2)
	    (ge_0 (S_0 x_11) (S_0 y_2)))))
(assert (forall ((y_2 Nat_0))
	(lt_0 Z_0 (S_0 y_2))))
(assert (forall ((x_11 Nat_0) (y_2 Nat_0))
	(=> (lt_0 x_11 y_2)
	    (lt_0 (S_0 x_11) (S_0 y_2)))))
(assert (forall ((y_2 Nat_0))
	(gt_0 (S_0 y_2) Z_0)))
(assert (forall ((x_11 Nat_0) (y_2 Nat_0))
	(=> (gt_0 x_11 y_2)
	    (gt_0 (S_0 x_11) (S_0 y_2)))))
(assert (forall ((y_2 Nat_0))
	(mult_0 Z_0 Z_0 y_2)))
(assert (forall ((x_11 Nat_0) (y_2 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (mult_0 r_0 x_11 y_2)
			(add_0 z_1 r_0 y_2))
		(mult_0 z_1 (S_0 x_11) y_2))))
(assert (forall ((x_11 Nat_0) (y_2 Nat_0))
	(=> (lt_0 x_11 y_2)
	    (div_0 Z_0 x_11 y_2))))
(assert (forall ((x_11 Nat_0) (y_2 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_11 y_2)
			(minus_0 z_1 x_11 y_2)
			(div_0 r_0 z_1 y_2))
		(div_0 (S_0 r_0) x_11 y_2))))
(assert (forall ((x_11 Nat_0) (y_2 Nat_0))
	(=> (lt_0 x_11 y_2)
	    (mod_0 x_11 x_11 y_2))))
(assert (forall ((x_11 Nat_0) (y_2 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_11 y_2)
			(minus_0 z_1 x_11 y_2)
			(mod_0 r_0 z_1 y_2))
		(mod_0 r_0 x_11 y_2))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Nat_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (Nat_0 pair_0) Bool)
(declare-fun projpair_3 (Nat_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_22 pair_0) (x_20 Nat_0) (x_21 Nat_0))
	(=> (= x_22 (pair_1 x_20 x_21))
	    (projpair_2 x_20 x_22))))
(assert (forall ((x_22 pair_0) (x_20 Nat_0) (x_21 Nat_0))
	(=> (= x_22 (pair_1 x_20 x_21))
	    (projpair_3 x_21 x_22))))
(assert (forall ((x_23 Nat_0) (x_24 Nat_0))
	(ispair_0 (pair_1 x_23 x_24))))
(assert (forall ((x_25 Nat_0) (x_26 Nat_0) (x_27 Nat_0) (x_28 Nat_0))
	(=> (diseqNat_0 x_25 x_27)
	    (diseqpair_0 (pair_1 x_25 x_26) (pair_1 x_27 x_28)))))
(assert (forall ((x_25 Nat_0) (x_26 Nat_0) (x_27 Nat_0) (x_28 Nat_0))
	(=> (diseqNat_0 x_26 x_28)
	    (diseqpair_0 (pair_1 x_25 x_26) (pair_1 x_27 x_28)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_2 (Nat_0 list_0) Bool)
(declare-fun tail_2 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_32 list_0) (x_30 Nat_0) (x_31 list_0))
	(=> (= x_32 (cons_0 x_30 x_31))
	    (head_2 x_30 x_32))))
(assert (forall ((x_32 list_0) (x_30 Nat_0) (x_31 list_0))
	(=> (= x_32 (cons_0 x_30 x_31))
	    (tail_2 x_31 x_32))))
(assert (isnil_0 nil_0))
(assert (forall ((x_33 Nat_0) (x_34 list_0))
	(iscons_0 (cons_0 x_33 x_34))))
(assert (forall ((x_35 Nat_0) (x_36 list_0))
	(diseqlist_0 nil_0 (cons_0 x_35 x_36))))
(assert (forall ((x_37 Nat_0) (x_38 list_0))
	(diseqlist_0 (cons_0 x_37 x_38) nil_0)))
(assert (forall ((x_39 Nat_0) (x_40 list_0) (x_41 Nat_0) (x_42 list_0))
	(=> (diseqNat_0 x_39 x_41)
	    (diseqlist_0 (cons_0 x_39 x_40) (cons_0 x_41 x_42)))))
(assert (forall ((x_39 Nat_0) (x_40 list_0) (x_41 Nat_0) (x_42 list_0))
	(=> (diseqlist_0 x_40 x_42)
	    (diseqlist_0 (cons_0 x_39 x_40) (cons_0 x_41 x_42)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 pair_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_3 (pair_0 list_1) Bool)
(declare-fun tail_3 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_46 list_1) (x_44 pair_0) (x_45 list_1))
	(=> (= x_46 (cons_1 x_44 x_45))
	    (head_3 x_44 x_46))))
(assert (forall ((x_46 list_1) (x_44 pair_0) (x_45 list_1))
	(=> (= x_46 (cons_1 x_44 x_45))
	    (tail_3 x_45 x_46))))
(assert (isnil_1 nil_1))
(assert (forall ((x_47 pair_0) (x_48 list_1))
	(iscons_1 (cons_1 x_47 x_48))))
(assert (forall ((x_49 pair_0) (x_50 list_1))
	(diseqlist_1 nil_1 (cons_1 x_49 x_50))))
(assert (forall ((x_51 pair_0) (x_52 list_1))
	(diseqlist_1 (cons_1 x_51 x_52) nil_1)))
(assert (forall ((x_53 pair_0) (x_54 list_1) (x_55 pair_0) (x_56 list_1))
	(=> (diseqpair_0 x_53 x_55)
	    (diseqlist_1 (cons_1 x_53 x_54) (cons_1 x_55 x_56)))))
(assert (forall ((x_53 pair_0) (x_54 list_1) (x_55 pair_0) (x_56 list_1))
	(=> (diseqlist_1 x_54 x_56)
	    (diseqlist_1 (cons_1 x_53 x_54) (cons_1 x_55 x_56)))))
(declare-fun zip_0 (list_1 list_0 list_0) Bool)
(assert (forall ((x_0 list_0) (y_0 list_0) (z_0 Nat_0) (x_1 list_0) (x_2 Nat_0) (x_3 list_0) (x_5 list_1) (x_6 list_1))
	(=>	(and (= x_5 (cons_1 (pair_1 z_0 x_2) x_6))
			(zip_0 x_6 x_1 x_3)
			(= x_0 (cons_0 z_0 x_1))
			(= y_0 (cons_0 x_2 x_3)))
		(zip_0 x_5 x_0 y_0))))
(assert (forall ((x_0 list_0) (y_0 list_0) (z_0 Nat_0) (x_1 list_0) (x_7 list_1))
	(=>	(and (= x_7 nil_1)
			(= x_0 (cons_0 z_0 x_1))
			(= y_0 nil_0))
		(zip_0 x_7 x_0 y_0))))
(assert (forall ((x_0 list_0) (y_0 list_0) (x_8 list_1))
	(=>	(and (= x_8 nil_1)
			(= x_0 nil_0))
		(zip_0 x_8 x_0 y_0))))
(assert (forall ((x_4 Nat_0) (y_1 Nat_0) (xs_0 list_0) (ys_0 list_0) (x_9 list_1) (x_10 list_1))
	(=>	(and (diseqlist_1 x_9 (cons_1 (pair_1 x_4 y_1) x_10))
			(zip_0 x_9 (cons_0 x_4 xs_0) (cons_0 y_1 ys_0))
			(zip_0 x_10 xs_0 ys_0))
		false)))
(check-sat)
