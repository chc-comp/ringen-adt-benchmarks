(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_1 ) (S_1 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_42 Nat_1) (x_41 Nat_1))
	(=> (= x_42 (S_1 x_41))
	    (unS_1 x_41 x_42))))
(assert (isZ_0 Z_1))
(assert (forall ((x_43 Nat_1))
	(isS_0 (S_1 x_43))))
(assert (forall ((x_44 Nat_1))
	(diseqNat_0 Z_1 (S_1 x_44))))
(assert (forall ((x_45 Nat_1))
	(diseqNat_0 (S_1 x_45) Z_1)))
(assert (forall ((x_46 Nat_1) (x_47 Nat_1))
	(=> (diseqNat_0 x_46 x_47)
	    (diseqNat_0 (S_1 x_46) (S_1 x_47)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_6 Nat_1))
	(add_0 y_6 Z_1 y_6)))
(assert (forall ((x_39 Nat_1) (y_6 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_39 y_6)
	    (add_0 (S_1 r_0) (S_1 x_39) y_6))))
(assert (forall ((y_6 Nat_1))
	(minus_0 Z_1 Z_1 y_6)))
(assert (forall ((x_39 Nat_1) (y_6 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_39 y_6)
	    (minus_0 (S_1 r_0) (S_1 x_39) y_6))))
(assert (forall ((y_6 Nat_1))
	(le_0 Z_1 y_6)))
(assert (forall ((x_39 Nat_1) (y_6 Nat_1))
	(=> (le_0 x_39 y_6)
	    (le_0 (S_1 x_39) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(ge_0 y_6 Z_1)))
(assert (forall ((x_39 Nat_1) (y_6 Nat_1))
	(=> (ge_0 x_39 y_6)
	    (ge_0 (S_1 x_39) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(lt_0 Z_1 (S_1 y_6))))
(assert (forall ((x_39 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_39 y_6)
	    (lt_0 (S_1 x_39) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(gt_0 (S_1 y_6) Z_1)))
(assert (forall ((x_39 Nat_1) (y_6 Nat_1))
	(=> (gt_0 x_39 y_6)
	    (gt_0 (S_1 x_39) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(mult_0 Z_1 Z_1 y_6)))
(assert (forall ((x_39 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (mult_0 r_0 x_39 y_6)
			(add_0 z_3 r_0 y_6))
		(mult_0 z_3 (S_1 x_39) y_6))))
(assert (forall ((x_39 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_39 y_6)
	    (div_0 Z_1 x_39 y_6))))
(assert (forall ((x_39 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_39 y_6)
			(minus_0 z_3 x_39 y_6)
			(div_0 r_0 z_3 y_6))
		(div_0 (S_1 r_0) x_39 y_6))))
(assert (forall ((x_39 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_39 y_6)
	    (mod_0 x_39 x_39 y_6))))
(assert (forall ((x_39 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_39 y_6)
			(minus_0 z_3 x_39 y_6)
			(mod_0 r_0 z_3 y_6))
		(mod_0 r_0 x_39 y_6))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_1) (projpair_1 Nat_1)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (Nat_1 pair_0) Bool)
(declare-fun projpair_3 (Nat_1 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_50 pair_0) (x_48 Nat_1) (x_49 Nat_1))
	(=> (= x_50 (pair_1 x_48 x_49))
	    (projpair_2 x_48 x_50))))
(assert (forall ((x_50 pair_0) (x_48 Nat_1) (x_49 Nat_1))
	(=> (= x_50 (pair_1 x_48 x_49))
	    (projpair_3 x_49 x_50))))
(assert (forall ((x_51 Nat_1) (x_52 Nat_1))
	(ispair_0 (pair_1 x_51 x_52))))
(assert (forall ((x_53 Nat_1) (x_54 Nat_1) (x_55 Nat_1) (x_56 Nat_1))
	(=> (diseqNat_0 x_53 x_55)
	    (diseqpair_0 (pair_1 x_53 x_54) (pair_1 x_55 x_56)))))
(assert (forall ((x_53 Nat_1) (x_54 Nat_1) (x_55 Nat_1) (x_56 Nat_1))
	(=> (diseqNat_0 x_54 x_56)
	    (diseqpair_0 (pair_1 x_53 x_54) (pair_1 x_55 x_56)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_2 (Nat_1 list_0) Bool)
(declare-fun tail_2 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_60 list_0) (x_58 Nat_1) (x_59 list_0))
	(=> (= x_60 (cons_0 x_58 x_59))
	    (head_2 x_58 x_60))))
(assert (forall ((x_60 list_0) (x_58 Nat_1) (x_59 list_0))
	(=> (= x_60 (cons_0 x_58 x_59))
	    (tail_2 x_59 x_60))))
(assert (isnil_0 nil_0))
(assert (forall ((x_61 Nat_1) (x_62 list_0))
	(iscons_0 (cons_0 x_61 x_62))))
(assert (forall ((x_63 Nat_1) (x_64 list_0))
	(diseqlist_0 nil_0 (cons_0 x_63 x_64))))
(assert (forall ((x_65 Nat_1) (x_66 list_0))
	(diseqlist_0 (cons_0 x_65 x_66) nil_0)))
(assert (forall ((x_67 Nat_1) (x_68 list_0) (x_69 Nat_1) (x_70 list_0))
	(=> (diseqNat_0 x_67 x_69)
	    (diseqlist_0 (cons_0 x_67 x_68) (cons_0 x_69 x_70)))))
(assert (forall ((x_67 Nat_1) (x_68 list_0) (x_69 Nat_1) (x_70 list_0))
	(=> (diseqlist_0 x_68 x_70)
	    (diseqlist_0 (cons_0 x_67 x_68) (cons_0 x_69 x_70)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 pair_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_3 (pair_0 list_1) Bool)
(declare-fun tail_3 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_74 list_1) (x_72 pair_0) (x_73 list_1))
	(=> (= x_74 (cons_1 x_72 x_73))
	    (head_3 x_72 x_74))))
(assert (forall ((x_74 list_1) (x_72 pair_0) (x_73 list_1))
	(=> (= x_74 (cons_1 x_72 x_73))
	    (tail_3 x_73 x_74))))
(assert (isnil_1 nil_1))
(assert (forall ((x_75 pair_0) (x_76 list_1))
	(iscons_1 (cons_1 x_75 x_76))))
(assert (forall ((x_77 pair_0) (x_78 list_1))
	(diseqlist_1 nil_1 (cons_1 x_77 x_78))))
(assert (forall ((x_79 pair_0) (x_80 list_1))
	(diseqlist_1 (cons_1 x_79 x_80) nil_1)))
(assert (forall ((x_81 pair_0) (x_82 list_1) (x_83 pair_0) (x_84 list_1))
	(=> (diseqpair_0 x_81 x_83)
	    (diseqlist_1 (cons_1 x_81 x_82) (cons_1 x_83 x_84)))))
(assert (forall ((x_81 pair_0) (x_82 list_1) (x_83 pair_0) (x_84 list_1))
	(=> (diseqlist_1 x_82 x_84)
	    (diseqlist_1 (cons_1 x_81 x_82) (cons_1 x_83 x_84)))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_1 (Nat_0) Bool)
(declare-fun isS_1 (Nat_0) Bool)
(assert (forall ((x_87 Nat_0) (x_86 Nat_0))
	(=> (= x_87 (S_0 x_86))
	    (projS_1 x_86 x_87))))
(assert (isZ_1 Z_0))
(assert (forall ((x_88 Nat_0))
	(isS_1 (S_0 x_88))))
(assert (forall ((x_89 Nat_0))
	(diseqNat_1 Z_0 (S_0 x_89))))
(assert (forall ((x_90 Nat_0))
	(diseqNat_1 (S_0 x_90) Z_0)))
(assert (forall ((x_91 Nat_0) (x_92 Nat_0))
	(=> (diseqNat_1 x_91 x_92)
	    (diseqNat_1 (S_0 x_91) (S_0 x_92)))))
(declare-fun zip_0 (list_1 list_0 list_0) Bool)
(assert (forall ((x_0 list_0) (y_0 list_0) (z_0 Nat_1) (x_1 list_0) (x_2 Nat_1) (x_3 list_0) (x_11 list_1) (x_12 list_1))
	(=>	(and (= x_11 (cons_1 (pair_1 z_0 x_2) x_12))
			(zip_0 x_12 x_1 x_3)
			(= x_0 (cons_0 z_0 x_1))
			(= y_0 (cons_0 x_2 x_3)))
		(zip_0 x_11 x_0 y_0))))
(assert (forall ((x_0 list_0) (y_0 list_0) (z_0 Nat_1) (x_1 list_0) (x_13 list_1))
	(=>	(and (= x_13 nil_1)
			(= x_0 (cons_0 z_0 x_1))
			(= y_0 nil_0))
		(zip_0 x_13 x_0 y_0))))
(assert (forall ((x_0 list_0) (y_0 list_0) (x_14 list_1))
	(=>	(and (= x_14 nil_1)
			(= x_0 nil_0))
		(zip_0 x_14 x_0 y_0))))
(declare-fun len_0 (Nat_0 list_0) Bool)
(assert (forall ((x_4 list_0) (y_1 Nat_1) (xs_0 list_0) (x_15 Nat_0) (x_16 Nat_0))
	(=>	(and (= x_15 (S_0 x_16))
			(len_0 x_16 xs_0)
			(= x_4 (cons_0 y_1 xs_0)))
		(len_0 x_15 x_4))))
(assert (forall ((x_4 list_0) (x_17 Nat_0))
	(=>	(and (= x_17 Z_0)
			(= x_4 nil_0))
		(len_0 x_17 x_4))))
(declare-fun x_5 (list_0 list_0 list_0) Bool)
(assert (forall ((x_6 list_0) (y_2 list_0) (z_1 Nat_1) (xs_1 list_0) (x_18 list_0) (x_19 list_0))
	(=>	(and (= x_18 (cons_0 z_1 x_19))
			(x_5 x_19 xs_1 y_2)
			(= x_6 (cons_0 z_1 xs_1)))
		(x_5 x_18 x_6 y_2))))
(assert (forall ((x_6 list_0) (y_2 list_0) (x_20 list_0))
	(=>	(and (= x_20 y_2)
			(= x_6 nil_0))
		(x_5 x_20 x_6 y_2))))
(declare-fun rev_0 (list_0 list_0) Bool)
(assert (forall ((x_7 list_0) (y_3 Nat_1) (xs_2 list_0) (x_21 list_0) (x_22 list_0) (x_23 list_0))
	(=>	(and (= x_21 x_23)
			(rev_0 x_22 xs_2)
			(x_5 x_23 x_22 (cons_0 y_3 nil_0))
			(= x_7 (cons_0 y_3 xs_2)))
		(rev_0 x_21 x_7))))
(assert (forall ((x_7 list_0) (x_24 list_0))
	(=>	(and (= x_24 nil_0)
			(= x_7 nil_0))
		(rev_0 x_24 x_7))))
(declare-fun x_8 (list_1 list_1 list_1) Bool)
(assert (forall ((x_9 list_1) (y_4 list_1) (z_2 pair_0) (xs_3 list_1) (x_25 list_1) (x_26 list_1))
	(=>	(and (= x_25 (cons_1 z_2 x_26))
			(x_8 x_26 xs_3 y_4)
			(= x_9 (cons_1 z_2 xs_3)))
		(x_8 x_25 x_9 y_4))))
(assert (forall ((x_9 list_1) (y_4 list_1) (x_27 list_1))
	(=>	(and (= x_27 y_4)
			(= x_9 nil_1))
		(x_8 x_27 x_9 y_4))))
(declare-fun rev_1 (list_1 list_1) Bool)
(assert (forall ((x_10 list_1) (y_5 pair_0) (xs_4 list_1) (x_28 list_1) (x_29 list_1) (x_30 list_1))
	(=>	(and (= x_28 x_30)
			(rev_1 x_29 xs_4)
			(x_8 x_30 x_29 (cons_1 y_5 nil_1))
			(= x_10 (cons_1 y_5 xs_4)))
		(rev_1 x_28 x_10))))
(assert (forall ((x_10 list_1) (x_31 list_1))
	(=>	(and (= x_31 nil_1)
			(= x_10 nil_1))
		(rev_1 x_31 x_10))))
(assert (forall ((xs_5 list_0) (ys_0 list_0) (x_32 list_0) (x_33 list_0) (x_34 list_1) (x_35 list_1) (x_36 list_1) (x_37 Nat_0) (x_38 Nat_0))
	(=>	(and (diseqlist_1 x_34 x_36)
			(= x_37 x_38)
			(rev_0 x_32 xs_5)
			(rev_0 x_33 ys_0)
			(zip_0 x_34 x_32 x_33)
			(zip_0 x_35 xs_5 ys_0)
			(rev_1 x_36 x_35)
			(len_0 x_37 xs_5)
			(len_0 x_38 ys_0))
		false)))
(check-sat)
