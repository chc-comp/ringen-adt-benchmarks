(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_1 ) (S_1 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_27 Nat_1) (x_26 Nat_1))
	(=> (= x_27 (S_1 x_26))
	    (unS_1 x_26 x_27))))
(assert (isZ_0 Z_1))
(assert (forall ((x_28 Nat_1))
	(isS_0 (S_1 x_28))))
(assert (forall ((x_29 Nat_1))
	(diseqNat_0 Z_1 (S_1 x_29))))
(assert (forall ((x_30 Nat_1))
	(diseqNat_0 (S_1 x_30) Z_1)))
(assert (forall ((x_31 Nat_1) (x_32 Nat_1))
	(=> (diseqNat_0 x_31 x_32)
	    (diseqNat_0 (S_1 x_31) (S_1 x_32)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_4 Nat_1))
	(add_0 y_4 Z_1 y_4)))
(assert (forall ((x_24 Nat_1) (y_4 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_24 y_4)
	    (add_0 (S_1 r_0) (S_1 x_24) y_4))))
(assert (forall ((y_4 Nat_1))
	(minus_0 Z_1 Z_1 y_4)))
(assert (forall ((x_24 Nat_1) (y_4 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_24 y_4)
	    (minus_0 (S_1 r_0) (S_1 x_24) y_4))))
(assert (forall ((y_4 Nat_1))
	(le_0 Z_1 y_4)))
(assert (forall ((x_24 Nat_1) (y_4 Nat_1))
	(=> (le_0 x_24 y_4)
	    (le_0 (S_1 x_24) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(ge_0 y_4 Z_1)))
(assert (forall ((x_24 Nat_1) (y_4 Nat_1))
	(=> (ge_0 x_24 y_4)
	    (ge_0 (S_1 x_24) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(lt_0 Z_1 (S_1 y_4))))
(assert (forall ((x_24 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_24 y_4)
	    (lt_0 (S_1 x_24) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(gt_0 (S_1 y_4) Z_1)))
(assert (forall ((x_24 Nat_1) (y_4 Nat_1))
	(=> (gt_0 x_24 y_4)
	    (gt_0 (S_1 x_24) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(mult_0 Z_1 Z_1 y_4)))
(assert (forall ((x_24 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (mult_0 r_0 x_24 y_4)
			(add_0 z_3 r_0 y_4))
		(mult_0 z_3 (S_1 x_24) y_4))))
(assert (forall ((x_24 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_24 y_4)
	    (div_0 Z_1 x_24 y_4))))
(assert (forall ((x_24 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_24 y_4)
			(minus_0 z_3 x_24 y_4)
			(div_0 r_0 z_3 y_4))
		(div_0 (S_1 r_0) x_24 y_4))))
(assert (forall ((x_24 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_24 y_4)
	    (mod_0 x_24 x_24 y_4))))
(assert (forall ((x_24 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_24 y_4)
			(minus_0 z_3 x_24 y_4)
			(mod_0 r_0 z_3 y_4))
		(mod_0 r_0 x_24 y_4))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_1 (Nat_0) Bool)
(declare-fun isS_1 (Nat_0) Bool)
(assert (forall ((x_35 Nat_0) (x_34 Nat_0))
	(=> (= x_35 (S_0 x_34))
	    (projS_1 x_34 x_35))))
(assert (isZ_1 Z_0))
(assert (forall ((x_36 Nat_0))
	(isS_1 (S_0 x_36))))
(assert (forall ((x_37 Nat_0))
	(diseqNat_1 Z_0 (S_0 x_37))))
(assert (forall ((x_38 Nat_0))
	(diseqNat_1 (S_0 x_38) Z_0)))
(assert (forall ((x_39 Nat_0) (x_40 Nat_0))
	(=> (diseqNat_1 x_39 x_40)
	    (diseqNat_1 (S_0 x_39) (S_0 x_40)))))
(declare-fun max_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_1 Nat_0) (x_8 Nat_0) (x_9 Nat_0))
	(=>	(and (= x_8 (S_0 x_9))
			(max_0 x_9 z_0 x_1)
			(= x_0 (S_0 z_0))
			(= y_0 (S_0 x_1)))
		(max_0 x_8 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_10 Nat_0))
	(=>	(and (= x_10 (S_0 z_0))
			(= x_0 (S_0 z_0))
			(= y_0 Z_0))
		(max_0 x_10 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_11 Nat_0))
	(=>	(and (= x_11 y_0)
			(= x_0 Z_0))
		(max_0 x_11 x_0 y_0))))
(declare-fun x_2 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_3 Nat_0) (y_1 Nat_0) (x_4 Nat_0) (y_2 Nat_0) (x_12 Bool) (x_13 Bool))
	(=>	(and (= x_12 x_13)
			(x_2 x_13 x_4 y_2)
			(= x_3 (S_0 x_4))
			(= y_1 (S_0 y_2)))
		(x_2 x_12 x_3 y_1))))
(assert (forall ((x_3 Nat_0) (y_1 Nat_0) (x_4 Nat_0) (x_14 Bool))
	(=>	(and (= x_14 false)
			(= x_3 (S_0 x_4))
			(= y_1 Z_0))
		(x_2 x_14 x_3 y_1))))
(assert (forall ((x_3 Nat_0) (y_1 Nat_0) (z_1 Nat_0) (x_15 Bool))
	(=>	(and (= x_15 false)
			(= x_3 Z_0)
			(= y_1 (S_0 z_1)))
		(x_2 x_15 x_3 y_1))))
(assert (forall ((x_3 Nat_0) (y_1 Nat_0) (x_16 Bool))
	(=>	(and (= x_16 true)
			(= x_3 Z_0)
			(= y_1 Z_0))
		(x_2 x_16 x_3 y_1))))
(declare-fun x_5 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_6 Nat_0) (y_3 Nat_0) (z_2 Nat_0) (x_7 Nat_0) (x_17 Bool) (x_18 Bool))
	(=>	(and (= x_17 x_18)
			(x_5 x_18 z_2 x_7)
			(= x_6 (S_0 z_2))
			(= y_3 (S_0 x_7)))
		(x_5 x_17 x_6 y_3))))
(assert (forall ((x_6 Nat_0) (y_3 Nat_0) (z_2 Nat_0) (x_19 Bool))
	(=>	(and (= x_19 false)
			(= x_6 (S_0 z_2))
			(= y_3 Z_0))
		(x_5 x_19 x_6 y_3))))
(assert (forall ((x_6 Nat_0) (y_3 Nat_0) (x_20 Bool))
	(=>	(and (= x_20 true)
			(= x_6 Z_0))
		(x_5 x_20 x_6 y_3))))
(assert (forall ((a_0 Nat_0) (b_0 Nat_0) (x_21 Nat_0) (x_22 Bool) (x_23 Bool))
	(=>	(and (not (= x_22 x_23))
			(max_0 x_21 a_0 b_0)
			(x_2 x_22 x_21 a_0)
			(x_5 x_23 b_0 a_0))
		false)))
(check-sat)
