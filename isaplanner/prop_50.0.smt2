(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_1 ) (S_1 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_32 Nat_1) (x_31 Nat_1))
	(=> (= x_32 (S_1 x_31))
	    (unS_1 x_31 x_32))))
(assert (isZ_0 Z_1))
(assert (forall ((x_33 Nat_1))
	(isS_0 (S_1 x_33))))
(assert (forall ((x_34 Nat_1))
	(diseqNat_0 Z_1 (S_1 x_34))))
(assert (forall ((x_35 Nat_1))
	(diseqNat_0 (S_1 x_35) Z_1)))
(assert (forall ((x_36 Nat_1) (x_37 Nat_1))
	(=> (diseqNat_0 x_36 x_37)
	    (diseqNat_0 (S_1 x_36) (S_1 x_37)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_4 Nat_1))
	(add_0 y_4 Z_1 y_4)))
(assert (forall ((x_29 Nat_1) (y_4 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_29 y_4)
	    (add_0 (S_1 r_0) (S_1 x_29) y_4))))
(assert (forall ((y_4 Nat_1))
	(minus_0 Z_1 Z_1 y_4)))
(assert (forall ((x_29 Nat_1) (y_4 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_29 y_4)
	    (minus_0 (S_1 r_0) (S_1 x_29) y_4))))
(assert (forall ((y_4 Nat_1))
	(le_0 Z_1 y_4)))
(assert (forall ((x_29 Nat_1) (y_4 Nat_1))
	(=> (le_0 x_29 y_4)
	    (le_0 (S_1 x_29) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(ge_0 y_4 Z_1)))
(assert (forall ((x_29 Nat_1) (y_4 Nat_1))
	(=> (ge_0 x_29 y_4)
	    (ge_0 (S_1 x_29) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(lt_0 Z_1 (S_1 y_4))))
(assert (forall ((x_29 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_29 y_4)
	    (lt_0 (S_1 x_29) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(gt_0 (S_1 y_4) Z_1)))
(assert (forall ((x_29 Nat_1) (y_4 Nat_1))
	(=> (gt_0 x_29 y_4)
	    (gt_0 (S_1 x_29) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(mult_0 Z_1 Z_1 y_4)))
(assert (forall ((x_29 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (mult_0 r_0 x_29 y_4)
			(add_0 z_3 r_0 y_4))
		(mult_0 z_3 (S_1 x_29) y_4))))
(assert (forall ((x_29 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_29 y_4)
	    (div_0 Z_1 x_29 y_4))))
(assert (forall ((x_29 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_29 y_4)
			(minus_0 z_3 x_29 y_4)
			(div_0 r_0 z_3 y_4))
		(div_0 (S_1 r_0) x_29 y_4))))
(assert (forall ((x_29 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_29 y_4)
	    (mod_0 x_29 x_29 y_4))))
(assert (forall ((x_29 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_29 y_4)
			(minus_0 z_3 x_29 y_4)
			(mod_0 r_0 z_3 y_4))
		(mod_0 r_0 x_29 y_4))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_1 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_41 list_0) (x_39 Nat_1) (x_40 list_0))
	(=> (= x_41 (cons_0 x_39 x_40))
	    (head_1 x_39 x_41))))
(assert (forall ((x_41 list_0) (x_39 Nat_1) (x_40 list_0))
	(=> (= x_41 (cons_0 x_39 x_40))
	    (tail_1 x_40 x_41))))
(assert (isnil_0 nil_0))
(assert (forall ((x_42 Nat_1) (x_43 list_0))
	(iscons_0 (cons_0 x_42 x_43))))
(assert (forall ((x_44 Nat_1) (x_45 list_0))
	(diseqlist_0 nil_0 (cons_0 x_44 x_45))))
(assert (forall ((x_46 Nat_1) (x_47 list_0))
	(diseqlist_0 (cons_0 x_46 x_47) nil_0)))
(assert (forall ((x_48 Nat_1) (x_49 list_0) (x_50 Nat_1) (x_51 list_0))
	(=> (diseqNat_0 x_48 x_50)
	    (diseqlist_0 (cons_0 x_48 x_49) (cons_0 x_50 x_51)))))
(assert (forall ((x_48 Nat_1) (x_49 list_0) (x_50 Nat_1) (x_51 list_0))
	(=> (diseqlist_0 x_49 x_51)
	    (diseqlist_0 (cons_0 x_48 x_49) (cons_0 x_50 x_51)))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_1 (Nat_0) Bool)
(declare-fun isS_1 (Nat_0) Bool)
(assert (forall ((x_54 Nat_0) (x_53 Nat_0))
	(=> (= x_54 (S_0 x_53))
	    (projS_1 x_53 x_54))))
(assert (isZ_1 Z_0))
(assert (forall ((x_55 Nat_0))
	(isS_1 (S_0 x_55))))
(assert (forall ((x_56 Nat_0))
	(diseqNat_1 Z_0 (S_0 x_56))))
(assert (forall ((x_57 Nat_0))
	(diseqNat_1 (S_0 x_57) Z_0)))
(assert (forall ((x_58 Nat_0) (x_59 Nat_0))
	(=> (diseqNat_1 x_58 x_59)
	    (diseqNat_1 (S_0 x_58) (S_0 x_59)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (x_1 Nat_1) (x_2 list_0) (x_10 list_0) (x_11 list_0))
	(=>	(and (= x_10 (cons_0 x_1 x_11))
			(take_0 x_11 z_0 x_2)
			(= x_0 (S_0 z_0))
			(= y_0 (cons_0 x_1 x_2)))
		(take_0 x_10 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (x_12 list_0))
	(=>	(and (= x_12 nil_0)
			(= x_0 (S_0 z_0))
			(= y_0 nil_0))
		(take_0 x_12 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_13 list_0))
	(=>	(and (= x_13 nil_0)
			(= x_0 Z_0))
		(take_0 x_13 x_0 y_0))))
(declare-fun len_0 (Nat_0 list_0) Bool)
(assert (forall ((x_3 list_0) (y_1 Nat_1) (xs_0 list_0) (x_14 Nat_0) (x_15 Nat_0))
	(=>	(and (= x_14 (S_0 x_15))
			(len_0 x_15 xs_0)
			(= x_3 (cons_0 y_1 xs_0)))
		(len_0 x_14 x_3))))
(assert (forall ((x_3 list_0) (x_16 Nat_0))
	(=>	(and (= x_16 Z_0)
			(= x_3 nil_0))
		(len_0 x_16 x_3))))
(declare-fun butlast_0 (list_0 list_0) Bool)
(assert (forall ((x_4 list_0) (y_2 Nat_1) (z_1 list_0) (x_5 Nat_1) (x_6 list_0) (x_17 list_0) (x_18 list_0))
	(=>	(and (= x_17 (cons_0 y_2 x_18))
			(butlast_0 x_18 (cons_0 x_5 x_6))
			(= x_4 (cons_0 y_2 z_1))
			(= z_1 (cons_0 x_5 x_6)))
		(butlast_0 x_17 x_4))))
(assert (forall ((x_4 list_0) (y_2 Nat_1) (z_1 list_0) (x_19 list_0))
	(=>	(and (= x_19 nil_0)
			(= x_4 (cons_0 y_2 z_1))
			(= z_1 nil_0))
		(butlast_0 x_19 x_4))))
(assert (forall ((x_4 list_0) (x_20 list_0))
	(=>	(and (= x_20 nil_0)
			(= x_4 nil_0))
		(butlast_0 x_20 x_4))))
(declare-fun x_7 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_8 Nat_0) (y_3 Nat_0) (z_2 Nat_0) (x_9 Nat_0) (x_21 Nat_0) (x_22 Nat_0))
	(=>	(and (= x_21 x_22)
			(x_7 x_22 z_2 x_9)
			(= x_8 (S_0 z_2))
			(= y_3 (S_0 x_9)))
		(x_7 x_21 x_8 y_3))))
(assert (forall ((x_8 Nat_0) (y_3 Nat_0) (z_2 Nat_0) (x_23 Nat_0))
	(=>	(and (= x_23 (S_0 z_2))
			(= x_8 (S_0 z_2))
			(= y_3 Z_0))
		(x_7 x_23 x_8 y_3))))
(assert (forall ((x_8 Nat_0) (y_3 Nat_0) (x_24 Nat_0))
	(=>	(and (= x_24 Z_0)
			(= x_8 Z_0))
		(x_7 x_24 x_8 y_3))))
(assert (forall ((xs_1 list_0) (x_25 list_0) (x_26 Nat_0) (x_27 Nat_0) (x_28 list_0))
	(=>	(and (diseqlist_0 x_25 x_28)
			(butlast_0 x_25 xs_1)
			(len_0 x_26 xs_1)
			(x_7 x_27 x_26 (S_0 Z_0))
			(take_0 x_28 x_27 xs_1))
		false)))
(check-sat)
