(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_6 ) (Z_7 (unS_0 Nat_1)))))
(declare-fun diseqNat_1 (Nat_1 Nat_1) Bool)
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_1) (projpair_1 Nat_1)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 pair_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun zip_0 (list_1 list_0 list_0) Bool)
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(declare-fun len_0 (Nat_0 list_0) Bool)
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(declare-fun x_11 (list_0 list_0 list_0) Bool)
(declare-fun x_13 (list_1 list_1 list_1) Bool)
(assert (forall ((x_95 Nat_1))
	(diseqNat_1 Z_6 (Z_7 x_95))))
(assert (forall ((x_96 Nat_1))
	(diseqNat_1 (Z_7 x_96) Z_6)))
(assert (forall ((x_97 Nat_1) (x_98 Nat_1))
	(=> (diseqNat_1 x_97 x_98) (diseqNat_1 (Z_7 x_97) (Z_7 x_98)))))
(assert (forall ((x_51 Nat_1) (x_52 Nat_1) (x_53 Nat_1) (x_54 Nat_1))
	(=> (diseqNat_1 x_51 x_53) (diseqpair_0 (pair_1 x_51 x_52) (pair_1 x_53 x_54)))))
(assert (forall ((x_51 Nat_1) (x_52 Nat_1) (x_53 Nat_1) (x_54 Nat_1))
	(=> (diseqNat_1 x_52 x_54) (diseqpair_0 (pair_1 x_51 x_52) (pair_1 x_53 x_54)))))
(assert (forall ((x_75 pair_0) (x_76 list_1))
	(diseqlist_1 nil_1 (cons_1 x_75 x_76))))
(assert (forall ((x_77 pair_0) (x_78 list_1))
	(diseqlist_1 (cons_1 x_77 x_78) nil_1)))
(assert (forall ((x_79 pair_0) (x_80 list_1) (x_81 pair_0) (x_82 list_1))
	(=> (diseqpair_0 x_79 x_81) (diseqlist_1 (cons_1 x_79 x_80) (cons_1 x_81 x_82)))))
(assert (forall ((x_79 pair_0) (x_80 list_1) (x_81 pair_0) (x_82 list_1))
	(=> (diseqlist_1 x_80 x_82) (diseqlist_1 (cons_1 x_79 x_80) (cons_1 x_81 x_82)))))
(assert (forall ((x_16 list_1) (x_2 Nat_1) (x_3 list_0) (z_1 Nat_1) (x_1 list_0))
	(=> (zip_0 x_16 x_1 x_3) (zip_0 (cons_1 (pair_1 z_1 x_2) x_16) (cons_0 z_1 x_1) (cons_0 x_2 x_3)))))
(assert (forall ((z_1 Nat_1) (x_1 list_0))
	(zip_0 nil_1 (cons_0 z_1 x_1) nil_0)))
(assert (forall ((y_0 list_0))
	(zip_0 nil_1 nil_0 y_0)))
(assert (forall ((x_20 list_0) (x_5 Nat_1) (x_6 list_0) (z_2 Nat_0))
	(=> (take_0 x_20 z_2 x_6) (take_0 (cons_0 x_5 x_20) (S_0 z_2) (cons_0 x_5 x_6)))))
(assert (forall ((z_2 Nat_0))
	(take_0 nil_0 (S_0 z_2) nil_0)))
(assert (forall ((y_1 list_0))
	(take_0 nil_0 Z_0 y_1)))
(assert (forall ((x_24 Nat_0) (y_2 Nat_1) (xs_0 list_0))
	(=> (len_0 x_24 xs_0) (len_0 (S_0 x_24) (cons_0 y_2 xs_0)))))
(assert (len_0 Z_0 nil_0))
(assert (forall ((x_26 list_0) (x_9 Nat_1) (x_10 list_0) (z_3 Nat_0))
	(=> (drop_0 x_26 z_3 x_10) (drop_0 x_26 (S_0 z_3) (cons_0 x_9 x_10)))))
(assert (forall ((z_3 Nat_0))
	(drop_0 nil_0 (S_0 z_3) nil_0)))
(assert (forall ((x_29 list_0))
	(drop_0 x_29 Z_0 x_29)))
(assert (forall ((x_31 list_0) (z_4 Nat_1) (xs_1 list_0) (y_4 list_0))
	(=> (x_11 x_31 xs_1 y_4) (x_11 (cons_0 z_4 x_31) (cons_0 z_4 xs_1) y_4))))
(assert (forall ((x_32 list_0))
	(x_11 x_32 nil_0 x_32)))
(assert (forall ((x_34 list_1) (z_5 pair_0) (xs_2 list_1) (y_5 list_1))
	(=> (x_13 x_34 xs_2 y_5) (x_13 (cons_1 z_5 x_34) (cons_1 z_5 xs_2) y_5))))
(assert (forall ((x_35 list_1))
	(x_13 x_35 nil_1 x_35)))
(assert (forall ((x_36 list_0) (x_37 list_1) (x_38 Nat_0) (x_39 list_0) (x_40 list_1) (x_41 Nat_0) (x_42 list_0) (x_43 list_1) (x_44 list_1) (xs_3 list_0) (ys_0 list_0) (zs_0 list_0))
	(=> (and (diseqlist_1 x_37 x_44) (x_11 x_36 xs_3 ys_0) (zip_0 x_37 x_36 zs_0) (len_0 x_38 xs_3) (take_0 x_39 x_38 zs_0) (zip_0 x_40 xs_3 x_39) (len_0 x_41 xs_3) (drop_0 x_42 x_41 zs_0) (zip_0 x_43 ys_0 x_42) (x_13 x_44 x_40 x_43)) false)))
(check-sat)
(get-model)
