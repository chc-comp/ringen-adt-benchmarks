(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_2 ) (Z_3 (unS_0 Nat_1)))))
(declare-fun diseqNat_1 (Nat_1 Nat_1) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_35 Nat_1))
	(diseqNat_1 Z_2 (Z_3 x_35))))
(assert (forall ((x_36 Nat_1))
	(diseqNat_1 (Z_3 x_36) Z_2)))
(assert (forall ((x_37 Nat_1) (x_38 Nat_1))
	(=> (diseqNat_1 x_37 x_38) (diseqNat_1 (Z_3 x_37) (Z_3 x_38)))))
(assert (forall ((x_15 Nat_1) (x_16 list_0))
	(diseqlist_0 nil_0 (cons_0 x_15 x_16))))
(assert (forall ((x_17 Nat_1) (x_18 list_0))
	(diseqlist_0 (cons_0 x_17 x_18) nil_0)))
(assert (forall ((x_19 Nat_1) (x_20 list_0) (x_21 Nat_1) (x_22 list_0))
	(=> (diseqNat_1 x_19 x_21) (diseqlist_0 (cons_0 x_19 x_20) (cons_0 x_21 x_22)))))
(assert (forall ((x_19 Nat_1) (x_20 list_0) (x_21 Nat_1) (x_22 list_0))
	(=> (diseqlist_0 x_20 x_22) (diseqlist_0 (cons_0 x_19 x_20) (cons_0 x_21 x_22)))))
(assert (forall ((x_4 list_0) (x_1 Nat_1) (x_2 list_0) (z_1 Nat_0))
	(=> (take_0 x_4 z_1 x_2) (take_0 (cons_0 x_1 x_4) (S_0 z_1) (cons_0 x_1 x_2)))))
(assert (forall ((z_1 Nat_0))
	(take_0 nil_0 (S_0 z_1) nil_0)))
(assert (forall ((y_0 list_0))
	(take_0 nil_0 Z_0 y_0)))
(assert (forall ((x_7 list_0) (xs_0 list_0))
	(=> (and (diseqlist_0 x_7 nil_0) (take_0 x_7 Z_0 xs_0)) false)))
(check-sat)
(get-model)
