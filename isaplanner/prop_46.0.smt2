(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_20 Nat_0) (x_19 Nat_0))
	(=> (= x_20 (S_0 x_19))
	    (unS_1 x_19 x_20))))
(assert (isZ_0 Z_0))
(assert (forall ((x_21 Nat_0))
	(isS_0 (S_0 x_21))))
(assert (forall ((x_22 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_22))))
(assert (forall ((x_23 Nat_0))
	(diseqNat_0 (S_0 x_23) Z_0)))
(assert (forall ((x_24 Nat_0) (x_25 Nat_0))
	(=> (diseqNat_0 x_24 x_25)
	    (diseqNat_0 (S_0 x_24) (S_0 x_25)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_2 Nat_0))
	(add_0 y_2 Z_0 y_2)))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_17 y_2)
	    (add_0 (S_0 r_0) (S_0 x_17) y_2))))
(assert (forall ((y_2 Nat_0))
	(minus_0 Z_0 Z_0 y_2)))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_17 y_2)
	    (minus_0 (S_0 r_0) (S_0 x_17) y_2))))
(assert (forall ((y_2 Nat_0))
	(le_0 Z_0 y_2)))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0))
	(=> (le_0 x_17 y_2)
	    (le_0 (S_0 x_17) (S_0 y_2)))))
(assert (forall ((y_2 Nat_0))
	(ge_0 y_2 Z_0)))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0))
	(=> (ge_0 x_17 y_2)
	    (ge_0 (S_0 x_17) (S_0 y_2)))))
(assert (forall ((y_2 Nat_0))
	(lt_0 Z_0 (S_0 y_2))))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0))
	(=> (lt_0 x_17 y_2)
	    (lt_0 (S_0 x_17) (S_0 y_2)))))
(assert (forall ((y_2 Nat_0))
	(gt_0 (S_0 y_2) Z_0)))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0))
	(=> (gt_0 x_17 y_2)
	    (gt_0 (S_0 x_17) (S_0 y_2)))))
(assert (forall ((y_2 Nat_0))
	(mult_0 Z_0 Z_0 y_2)))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (mult_0 r_0 x_17 y_2)
			(add_0 z_2 r_0 y_2))
		(mult_0 z_2 (S_0 x_17) y_2))))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0))
	(=> (lt_0 x_17 y_2)
	    (div_0 Z_0 x_17 y_2))))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (ge_0 x_17 y_2)
			(minus_0 z_2 x_17 y_2)
			(div_0 r_0 z_2 y_2))
		(div_0 (S_0 r_0) x_17 y_2))))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0))
	(=> (lt_0 x_17 y_2)
	    (mod_0 x_17 x_17 y_2))))
(assert (forall ((x_17 Nat_0) (y_2 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (ge_0 x_17 y_2)
			(minus_0 z_2 x_17 y_2)
			(mod_0 r_0 z_2 y_2))
		(mod_0 r_0 x_17 y_2))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Nat_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_4 (Nat_0 pair_0) Bool)
(declare-fun projpair_5 (Nat_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_28 pair_0) (x_26 Nat_0) (x_27 Nat_0))
	(=> (= x_28 (pair_1 x_26 x_27))
	    (projpair_4 x_26 x_28))))
(assert (forall ((x_28 pair_0) (x_26 Nat_0) (x_27 Nat_0))
	(=> (= x_28 (pair_1 x_26 x_27))
	    (projpair_5 x_27 x_28))))
(assert (forall ((x_29 Nat_0) (x_30 Nat_0))
	(ispair_0 (pair_1 x_29 x_30))))
(assert (forall ((x_31 Nat_0) (x_32 Nat_0) (x_33 Nat_0) (x_34 Nat_0))
	(=> (diseqNat_0 x_31 x_33)
	    (diseqpair_0 (pair_1 x_31 x_32) (pair_1 x_33 x_34)))))
(assert (forall ((x_31 Nat_0) (x_32 Nat_0) (x_33 Nat_0) (x_34 Nat_0))
	(=> (diseqNat_0 x_32 x_34)
	    (diseqpair_0 (pair_1 x_31 x_32) (pair_1 x_33 x_34)))))
(declare-datatypes ((pair_2 0)) (((pair_3 (projpair_2 Nat_0) (projpair_3 Nat_0)))))
(declare-fun diseqpair_1 (pair_2 pair_2) Bool)
(declare-fun projpair_6 (Nat_0 pair_2) Bool)
(declare-fun projpair_7 (Nat_0 pair_2) Bool)
(declare-fun ispair_1 (pair_2) Bool)
(assert (forall ((x_37 pair_2) (x_35 Nat_0) (x_36 Nat_0))
	(=> (= x_37 (pair_3 x_35 x_36))
	    (projpair_6 x_35 x_37))))
(assert (forall ((x_37 pair_2) (x_35 Nat_0) (x_36 Nat_0))
	(=> (= x_37 (pair_3 x_35 x_36))
	    (projpair_7 x_36 x_37))))
(assert (forall ((x_38 Nat_0) (x_39 Nat_0))
	(ispair_1 (pair_3 x_38 x_39))))
(assert (forall ((x_40 Nat_0) (x_41 Nat_0) (x_42 Nat_0) (x_43 Nat_0))
	(=> (diseqNat_0 x_40 x_42)
	    (diseqpair_1 (pair_3 x_40 x_41) (pair_3 x_42 x_43)))))
(assert (forall ((x_40 Nat_0) (x_41 Nat_0) (x_42 Nat_0) (x_43 Nat_0))
	(=> (diseqNat_0 x_41 x_43)
	    (diseqpair_1 (pair_3 x_40 x_41) (pair_3 x_42 x_43)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_4 (Nat_0 list_0) Bool)
(declare-fun tail_4 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_47 list_0) (x_45 Nat_0) (x_46 list_0))
	(=> (= x_47 (cons_0 x_45 x_46))
	    (head_4 x_45 x_47))))
(assert (forall ((x_47 list_0) (x_45 Nat_0) (x_46 list_0))
	(=> (= x_47 (cons_0 x_45 x_46))
	    (tail_4 x_46 x_47))))
(assert (isnil_0 nil_0))
(assert (forall ((x_48 Nat_0) (x_49 list_0))
	(iscons_0 (cons_0 x_48 x_49))))
(assert (forall ((x_50 Nat_0) (x_51 list_0))
	(diseqlist_0 nil_0 (cons_0 x_50 x_51))))
(assert (forall ((x_52 Nat_0) (x_53 list_0))
	(diseqlist_0 (cons_0 x_52 x_53) nil_0)))
(assert (forall ((x_54 Nat_0) (x_55 list_0) (x_56 Nat_0) (x_57 list_0))
	(=> (diseqNat_0 x_54 x_56)
	    (diseqlist_0 (cons_0 x_54 x_55) (cons_0 x_56 x_57)))))
(assert (forall ((x_54 Nat_0) (x_55 list_0) (x_56 Nat_0) (x_57 list_0))
	(=> (diseqlist_0 x_55 x_57)
	    (diseqlist_0 (cons_0 x_54 x_55) (cons_0 x_56 x_57)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 pair_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_5 (pair_0 list_1) Bool)
(declare-fun tail_5 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_61 list_1) (x_59 pair_0) (x_60 list_1))
	(=> (= x_61 (cons_1 x_59 x_60))
	    (head_5 x_59 x_61))))
(assert (forall ((x_61 list_1) (x_59 pair_0) (x_60 list_1))
	(=> (= x_61 (cons_1 x_59 x_60))
	    (tail_5 x_60 x_61))))
(assert (isnil_1 nil_1))
(assert (forall ((x_62 pair_0) (x_63 list_1))
	(iscons_1 (cons_1 x_62 x_63))))
(assert (forall ((x_64 pair_0) (x_65 list_1))
	(diseqlist_1 nil_1 (cons_1 x_64 x_65))))
(assert (forall ((x_66 pair_0) (x_67 list_1))
	(diseqlist_1 (cons_1 x_66 x_67) nil_1)))
(assert (forall ((x_68 pair_0) (x_69 list_1) (x_70 pair_0) (x_71 list_1))
	(=> (diseqpair_0 x_68 x_70)
	    (diseqlist_1 (cons_1 x_68 x_69) (cons_1 x_70 x_71)))))
(assert (forall ((x_68 pair_0) (x_69 list_1) (x_70 pair_0) (x_71 list_1))
	(=> (diseqlist_1 x_69 x_71)
	    (diseqlist_1 (cons_1 x_68 x_69) (cons_1 x_70 x_71)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 pair_2) (tail_2 list_2)))))
(declare-fun diseqlist_2 (list_2 list_2) Bool)
(declare-fun head_6 (pair_2 list_2) Bool)
(declare-fun tail_6 (list_2 list_2) Bool)
(declare-fun isnil_2 (list_2) Bool)
(declare-fun iscons_2 (list_2) Bool)
(assert (forall ((x_75 list_2) (x_73 pair_2) (x_74 list_2))
	(=> (= x_75 (cons_2 x_73 x_74))
	    (head_6 x_73 x_75))))
(assert (forall ((x_75 list_2) (x_73 pair_2) (x_74 list_2))
	(=> (= x_75 (cons_2 x_73 x_74))
	    (tail_6 x_74 x_75))))
(assert (isnil_2 nil_2))
(assert (forall ((x_76 pair_2) (x_77 list_2))
	(iscons_2 (cons_2 x_76 x_77))))
(assert (forall ((x_78 pair_2) (x_79 list_2))
	(diseqlist_2 nil_2 (cons_2 x_78 x_79))))
(assert (forall ((x_80 pair_2) (x_81 list_2))
	(diseqlist_2 (cons_2 x_80 x_81) nil_2)))
(assert (forall ((x_82 pair_2) (x_83 list_2) (x_84 pair_2) (x_85 list_2))
	(=> (diseqpair_1 x_82 x_84)
	    (diseqlist_2 (cons_2 x_82 x_83) (cons_2 x_84 x_85)))))
(assert (forall ((x_82 pair_2) (x_83 list_2) (x_84 pair_2) (x_85 list_2))
	(=> (diseqlist_2 x_83 x_85)
	    (diseqlist_2 (cons_2 x_82 x_83) (cons_2 x_84 x_85)))))
(declare-datatypes ((list_3 0)) (((nil_3 ) (cons_3 (head_3 Nat_0) (tail_3 list_3)))))
(declare-fun diseqlist_3 (list_3 list_3) Bool)
(declare-fun head_7 (Nat_0 list_3) Bool)
(declare-fun tail_7 (list_3 list_3) Bool)
(declare-fun isnil_3 (list_3) Bool)
(declare-fun iscons_3 (list_3) Bool)
(assert (forall ((x_89 list_3) (x_87 Nat_0) (x_88 list_3))
	(=> (= x_89 (cons_3 x_87 x_88))
	    (head_7 x_87 x_89))))
(assert (forall ((x_89 list_3) (x_87 Nat_0) (x_88 list_3))
	(=> (= x_89 (cons_3 x_87 x_88))
	    (tail_7 x_88 x_89))))
(assert (isnil_3 nil_3))
(assert (forall ((x_90 Nat_0) (x_91 list_3))
	(iscons_3 (cons_3 x_90 x_91))))
(assert (forall ((x_92 Nat_0) (x_93 list_3))
	(diseqlist_3 nil_3 (cons_3 x_92 x_93))))
(assert (forall ((x_94 Nat_0) (x_95 list_3))
	(diseqlist_3 (cons_3 x_94 x_95) nil_3)))
(assert (forall ((x_96 Nat_0) (x_97 list_3) (x_98 Nat_0) (x_99 list_3))
	(=> (diseqNat_0 x_96 x_98)
	    (diseqlist_3 (cons_3 x_96 x_97) (cons_3 x_98 x_99)))))
(assert (forall ((x_96 Nat_0) (x_97 list_3) (x_98 Nat_0) (x_99 list_3))
	(=> (diseqlist_3 x_97 x_99)
	    (diseqlist_3 (cons_3 x_96 x_97) (cons_3 x_98 x_99)))))
(declare-fun zip_0 (list_1 list_0 list_0) Bool)
(assert (forall ((x_0 list_0) (y_0 list_0) (z_0 Nat_0) (x_1 list_0) (x_2 Nat_0) (x_3 list_0) (x_8 list_1) (x_9 list_1))
	(=>	(and (= x_8 (cons_1 (pair_1 z_0 x_2) x_9))
			(zip_0 x_9 x_1 x_3)
			(= x_0 (cons_0 z_0 x_1))
			(= y_0 (cons_0 x_2 x_3)))
		(zip_0 x_8 x_0 y_0))))
(assert (forall ((x_0 list_0) (y_0 list_0) (z_0 Nat_0) (x_1 list_0) (x_10 list_1))
	(=>	(and (= x_10 nil_1)
			(= x_0 (cons_0 z_0 x_1))
			(= y_0 nil_0))
		(zip_0 x_10 x_0 y_0))))
(assert (forall ((x_0 list_0) (y_0 list_0) (x_11 list_1))
	(=>	(and (= x_11 nil_1)
			(= x_0 nil_0))
		(zip_0 x_11 x_0 y_0))))
(declare-fun zip_1 (list_2 list_3 list_0) Bool)
(assert (forall ((x_4 list_3) (y_1 list_0) (z_1 Nat_0) (x_5 list_3) (x_6 Nat_0) (x_7 list_0) (x_12 list_2) (x_13 list_2))
	(=>	(and (= x_12 (cons_2 (pair_3 z_1 x_6) x_13))
			(zip_1 x_13 x_5 x_7)
			(= x_4 (cons_3 z_1 x_5))
			(= y_1 (cons_0 x_6 x_7)))
		(zip_1 x_12 x_4 y_1))))
(assert (forall ((x_4 list_3) (y_1 list_0) (z_1 Nat_0) (x_5 list_3) (x_14 list_2))
	(=>	(and (= x_14 nil_2)
			(= x_4 (cons_3 z_1 x_5))
			(= y_1 nil_0))
		(zip_1 x_14 x_4 y_1))))
(assert (forall ((x_4 list_3) (y_1 list_0) (x_15 list_2))
	(=>	(and (= x_15 nil_2)
			(= x_4 nil_3))
		(zip_1 x_15 x_4 y_1))))
(assert (forall ((xs_0 list_0) (x_16 list_2))
	(=>	(and (diseqlist_2 x_16 nil_2)
			(zip_1 x_16 nil_3 xs_0))
		false)))
(check-sat)
