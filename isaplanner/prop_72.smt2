(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_5 ) (Z_6 (unS_0 Nat_1)))))
(declare-fun diseqNat_1 (Nat_1 Nat_1) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(declare-fun len_0 (Nat_0 list_0) Bool)
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(declare-fun x_7 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun x_10 (list_0 list_0 list_0) Bool)
(declare-fun rev_0 (list_0 list_0) Bool)
(assert (forall ((x_68 Nat_1))
	(diseqNat_1 Z_5 (Z_6 x_68))))
(assert (forall ((x_69 Nat_1))
	(diseqNat_1 (Z_6 x_69) Z_5)))
(assert (forall ((x_70 Nat_1) (x_71 Nat_1))
	(=> (diseqNat_1 x_70 x_71) (diseqNat_1 (Z_6 x_70) (Z_6 x_71)))))
(assert (forall ((x_48 Nat_1) (x_49 list_0))
	(diseqlist_0 nil_0 (cons_0 x_48 x_49))))
(assert (forall ((x_50 Nat_1) (x_51 list_0))
	(diseqlist_0 (cons_0 x_50 x_51) nil_0)))
(assert (forall ((x_52 Nat_1) (x_53 list_0) (x_54 Nat_1) (x_55 list_0))
	(=> (diseqNat_1 x_52 x_54) (diseqlist_0 (cons_0 x_52 x_53) (cons_0 x_54 x_55)))))
(assert (forall ((x_52 Nat_1) (x_53 list_0) (x_54 Nat_1) (x_55 list_0))
	(=> (diseqlist_0 x_53 x_55) (diseqlist_0 (cons_0 x_52 x_53) (cons_0 x_54 x_55)))))
(assert (forall ((x_14 list_0) (x_1 Nat_1) (x_2 list_0) (z_1 Nat_0))
	(=> (take_0 x_14 z_1 x_2) (take_0 (cons_0 x_1 x_14) (S_0 z_1) (cons_0 x_1 x_2)))))
(assert (forall ((z_1 Nat_0))
	(take_0 nil_0 (S_0 z_1) nil_0)))
(assert (forall ((y_0 list_0))
	(take_0 nil_0 Z_0 y_0)))
(assert (forall ((x_18 Nat_0) (y_1 Nat_1) (xs_0 list_0))
	(=> (len_0 x_18 xs_0) (len_0 (S_0 x_18) (cons_0 y_1 xs_0)))))
(assert (len_0 Z_0 nil_0))
(assert (forall ((x_20 list_0) (x_5 Nat_1) (x_6 list_0) (z_2 Nat_0))
	(=> (drop_0 x_20 z_2 x_6) (drop_0 x_20 (S_0 z_2) (cons_0 x_5 x_6)))))
(assert (forall ((z_2 Nat_0))
	(drop_0 nil_0 (S_0 z_2) nil_0)))
(assert (forall ((x_23 list_0))
	(drop_0 x_23 Z_0 x_23)))
(assert (forall ((x_24 Nat_0) (x_9 Nat_0) (z_3 Nat_0))
	(=> (x_7 x_24 z_3 x_9) (x_7 x_24 (S_0 z_3) (S_0 x_9)))))
(assert (forall ((z_3 Nat_0))
	(x_7 (S_0 z_3) (S_0 z_3) Z_0)))
(assert (forall ((y_3 Nat_0))
	(x_7 Z_0 Z_0 y_3)))
(assert (forall ((x_29 list_0) (z_4 Nat_1) (xs_1 list_0) (y_4 list_0))
	(=> (x_10 x_29 xs_1 y_4) (x_10 (cons_0 z_4 x_29) (cons_0 z_4 xs_1) y_4))))
(assert (forall ((x_30 list_0))
	(x_10 x_30 nil_0 x_30)))
(assert (forall ((x_31 list_0) (x_32 list_0) (y_5 Nat_1) (xs_2 list_0))
	(=> (and (rev_0 x_32 xs_2) (x_10 x_31 x_32 (cons_0 y_5 nil_0))) (rev_0 x_31 (cons_0 y_5 xs_2)))))
(assert (rev_0 nil_0 nil_0))
(assert (forall ((x_35 list_0) (x_36 list_0) (x_37 Nat_0) (x_38 Nat_0) (x_39 list_0) (x_40 list_0) (i_0 Nat_0) (xs_3 list_0))
	(=> (and (diseqlist_0 x_36 x_40) (drop_0 x_35 i_0 xs_3) (rev_0 x_36 x_35) (len_0 x_37 xs_3) (x_7 x_38 x_37 i_0) (rev_0 x_39 xs_3) (take_0 x_40 x_38 x_39)) false)))
(check-sat)
(get-model)
