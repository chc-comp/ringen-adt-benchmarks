(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_0 ) (S_0 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_39 Nat_1) (x_38 Nat_1))
	(=> (= x_39 (S_0 x_38))
	    (unS_1 x_38 x_39))))
(assert (isZ_0 Z_0))
(assert (forall ((x_40 Nat_1))
	(isS_0 (S_0 x_40))))
(assert (forall ((x_41 Nat_1))
	(diseqNat_0 Z_0 (S_0 x_41))))
(assert (forall ((x_42 Nat_1))
	(diseqNat_0 (S_0 x_42) Z_0)))
(assert (forall ((x_43 Nat_1) (x_44 Nat_1))
	(=> (diseqNat_0 x_43 x_44)
	    (diseqNat_0 (S_0 x_43) (S_0 x_44)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_3 Nat_1))
	(add_0 y_3 Z_0 y_3)))
(assert (forall ((x_36 Nat_1) (y_3 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_36 y_3)
	    (add_0 (S_0 r_0) (S_0 x_36) y_3))))
(assert (forall ((y_3 Nat_1))
	(minus_0 Z_0 Z_0 y_3)))
(assert (forall ((x_36 Nat_1) (y_3 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_36 y_3)
	    (minus_0 (S_0 r_0) (S_0 x_36) y_3))))
(assert (forall ((y_3 Nat_1))
	(le_0 Z_0 y_3)))
(assert (forall ((x_36 Nat_1) (y_3 Nat_1))
	(=> (le_0 x_36 y_3)
	    (le_0 (S_0 x_36) (S_0 y_3)))))
(assert (forall ((y_3 Nat_1))
	(ge_0 y_3 Z_0)))
(assert (forall ((x_36 Nat_1) (y_3 Nat_1))
	(=> (ge_0 x_36 y_3)
	    (ge_0 (S_0 x_36) (S_0 y_3)))))
(assert (forall ((y_3 Nat_1))
	(lt_0 Z_0 (S_0 y_3))))
(assert (forall ((x_36 Nat_1) (y_3 Nat_1))
	(=> (lt_0 x_36 y_3)
	    (lt_0 (S_0 x_36) (S_0 y_3)))))
(assert (forall ((y_3 Nat_1))
	(gt_0 (S_0 y_3) Z_0)))
(assert (forall ((x_36 Nat_1) (y_3 Nat_1))
	(=> (gt_0 x_36 y_3)
	    (gt_0 (S_0 x_36) (S_0 y_3)))))
(assert (forall ((y_3 Nat_1))
	(mult_0 Z_0 Z_0 y_3)))
(assert (forall ((x_36 Nat_1) (y_3 Nat_1) (r_0 Nat_1) (z_2 Nat_1))
	(=>	(and (mult_0 r_0 x_36 y_3)
			(add_0 z_2 r_0 y_3))
		(mult_0 z_2 (S_0 x_36) y_3))))
(assert (forall ((x_36 Nat_1) (y_3 Nat_1))
	(=> (lt_0 x_36 y_3)
	    (div_0 Z_0 x_36 y_3))))
(assert (forall ((x_36 Nat_1) (y_3 Nat_1) (r_0 Nat_1) (z_2 Nat_1))
	(=>	(and (ge_0 x_36 y_3)
			(minus_0 z_2 x_36 y_3)
			(div_0 r_0 z_2 y_3))
		(div_0 (S_0 r_0) x_36 y_3))))
(assert (forall ((x_36 Nat_1) (y_3 Nat_1))
	(=> (lt_0 x_36 y_3)
	    (mod_0 x_36 x_36 y_3))))
(assert (forall ((x_36 Nat_1) (y_3 Nat_1) (r_0 Nat_1) (z_2 Nat_1))
	(=>	(and (ge_0 x_36 y_3)
			(minus_0 z_2 x_36 y_3)
			(mod_0 r_0 z_2 y_3))
		(mod_0 r_0 x_36 y_3))))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_47 Nat_0) (x_46 Nat_0))
	(=> (= x_47 (succ_0 x_46))
	    (p_1 x_46 x_47))))
(assert (iszero_0 zero_0))
(assert (forall ((x_48 Nat_0))
	(issucc_0 (succ_0 x_48))))
(assert (forall ((x_49 Nat_0))
	(diseqNat_1 zero_0 (succ_0 x_49))))
(assert (forall ((x_50 Nat_0))
	(diseqNat_1 (succ_0 x_50) zero_0)))
(assert (forall ((x_51 Nat_0) (x_52 Nat_0))
	(=> (diseqNat_1 x_51 x_52)
	    (diseqNat_1 (succ_0 x_51) (succ_0 x_52)))))
(declare-datatypes ((Bin_0 0)) (((One_0 ) (ZeroAnd_0 (projZeroAnd_0 Bin_0)) (OneAnd_0 (projOneAnd_0 Bin_0)))))
(declare-fun diseqBin_0 (Bin_0 Bin_0) Bool)
(declare-fun projZeroAnd_1 (Bin_0 Bin_0) Bool)
(declare-fun projOneAnd_1 (Bin_0 Bin_0) Bool)
(declare-fun isOne_0 (Bin_0) Bool)
(declare-fun isZeroAnd_0 (Bin_0) Bool)
(declare-fun isOneAnd_0 (Bin_0) Bool)
(assert (forall ((x_55 Bin_0) (x_54 Bin_0))
	(=> (= x_55 (ZeroAnd_0 x_54))
	    (projZeroAnd_1 x_54 x_55))))
(assert (forall ((x_57 Bin_0) (x_56 Bin_0))
	(=> (= x_57 (OneAnd_0 x_56))
	    (projOneAnd_1 x_56 x_57))))
(assert (isOne_0 One_0))
(assert (forall ((x_58 Bin_0))
	(isZeroAnd_0 (ZeroAnd_0 x_58))))
(assert (forall ((x_59 Bin_0))
	(isOneAnd_0 (OneAnd_0 x_59))))
(assert (forall ((x_60 Bin_0))
	(diseqBin_0 One_0 (ZeroAnd_0 x_60))))
(assert (forall ((x_61 Bin_0))
	(diseqBin_0 One_0 (OneAnd_0 x_61))))
(assert (forall ((x_62 Bin_0))
	(diseqBin_0 (ZeroAnd_0 x_62) One_0)))
(assert (forall ((x_63 Bin_0))
	(diseqBin_0 (OneAnd_0 x_63) One_0)))
(assert (forall ((x_64 Bin_0) (x_65 Bin_0))
	(diseqBin_0 (ZeroAnd_0 x_64) (OneAnd_0 x_65))))
(assert (forall ((x_66 Bin_0) (x_67 Bin_0))
	(diseqBin_0 (OneAnd_0 x_66) (ZeroAnd_0 x_67))))
(assert (forall ((x_68 Bin_0) (x_69 Bin_0))
	(=> (diseqBin_0 x_68 x_69)
	    (diseqBin_0 (ZeroAnd_0 x_68) (ZeroAnd_0 x_69)))))
(assert (forall ((x_70 Bin_0) (x_71 Bin_0))
	(=> (diseqBin_0 x_70 x_71)
	    (diseqBin_0 (OneAnd_0 x_70) (OneAnd_0 x_71)))))
(declare-fun s_0 (Bin_0 Bin_0) Bool)
(assert (forall ((x_0 Bin_0) (ys_0 Bin_0) (x_7 Bin_0) (x_8 Bin_0))
	(=>	(and (= x_7 (ZeroAnd_0 x_8))
			(s_0 x_8 ys_0)
			(= x_0 (OneAnd_0 ys_0)))
		(s_0 x_7 x_0))))
(assert (forall ((x_0 Bin_0) (xs_0 Bin_0) (x_9 Bin_0))
	(=>	(and (= x_9 (OneAnd_0 xs_0))
			(= x_0 (ZeroAnd_0 xs_0)))
		(s_0 x_9 x_0))))
(assert (forall ((x_0 Bin_0) (x_10 Bin_0))
	(=>	(and (= x_10 (ZeroAnd_0 One_0))
			(= x_0 One_0))
		(s_0 x_10 x_0))))
(declare-fun plus_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_11 Nat_0) (x_12 Nat_0))
	(=>	(and (= x_11 (succ_0 x_12))
			(plus_0 x_12 z_0 y_0)
			(= x_1 (succ_0 z_0)))
		(plus_0 x_11 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (x_13 Nat_0))
	(=>	(and (= x_13 y_0)
			(= x_1 zero_0))
		(plus_0 x_13 x_1 y_0))))
(declare-fun toNat_0 (Nat_0 Bin_0) Bool)
(assert (forall ((x_2 Bin_0) (ys_1 Bin_0) (x_14 Nat_0) (x_15 Nat_0) (x_16 Nat_0) (x_17 Nat_0) (x_18 Nat_0))
	(=>	(and (= x_14 x_18)
			(toNat_0 x_15 ys_1)
			(plus_0 x_16 (succ_0 zero_0) x_15)
			(toNat_0 x_17 ys_1)
			(plus_0 x_18 x_16 x_17)
			(= x_2 (OneAnd_0 ys_1)))
		(toNat_0 x_14 x_2))))
(assert (forall ((x_2 Bin_0) (xs_1 Bin_0) (x_19 Nat_0) (x_20 Nat_0) (x_21 Nat_0) (x_22 Nat_0))
	(=>	(and (= x_19 x_22)
			(toNat_0 x_20 xs_1)
			(toNat_0 x_21 xs_1)
			(plus_0 x_22 x_20 x_21)
			(= x_2 (ZeroAnd_0 xs_1)))
		(toNat_0 x_19 x_2))))
(assert (forall ((x_2 Bin_0) (x_23 Nat_0))
	(=>	(and (= x_23 (succ_0 zero_0))
			(= x_2 One_0))
		(toNat_0 x_23 x_2))))
(assert (forall ((n_0 Bin_0) (x_24 Bin_0) (x_25 Nat_0) (x_26 Nat_0) (x_27 Nat_0))
	(=>	(and (diseqNat_1 x_25 x_27)
			(s_0 x_24 n_0)
			(toNat_0 x_25 x_24)
			(toNat_0 x_26 n_0)
			(plus_0 x_27 (succ_0 zero_0) x_26))
		false)))
(assert (forall ((x_3 Nat_0) (y_1 Nat_0) (z_1 Nat_0) (x_28 Nat_0) (x_29 Nat_0) (x_30 Nat_0) (x_31 Nat_0))
	(=>	(and (diseqNat_1 x_29 x_31)
			(plus_0 x_28 y_1 z_1)
			(plus_0 x_29 x_3 x_28)
			(plus_0 x_30 x_3 y_1)
			(plus_0 x_31 x_30 z_1))
		false)))
(assert (forall ((x_4 Nat_0) (y_2 Nat_0) (x_32 Nat_0) (x_33 Nat_0))
	(=>	(and (diseqNat_1 x_32 x_33)
			(plus_0 x_32 x_4 y_2)
			(plus_0 x_33 y_2 x_4))
		false)))
(assert (forall ((x_5 Nat_0) (x_34 Nat_0))
	(=>	(and (diseqNat_1 x_34 x_5)
			(plus_0 x_34 x_5 zero_0))
		false)))
(assert (forall ((x_6 Nat_0) (x_35 Nat_0))
	(=>	(and (diseqNat_1 x_35 x_6)
			(plus_0 x_35 zero_0 x_6))
		false)))
(check-sat)
