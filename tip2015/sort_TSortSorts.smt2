(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_3 ) (Z_4 (unS_0 Nat_0)))))
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-datatypes ((Tree_0 0)) (((TNode_0 (projTNode_0 Tree_0) (projTNode_1 Nat_0) (projTNode_2 Tree_0)) (TNil_0 ))))
(declare-fun ordered_0 (Bool_0 list_0) Bool)
(declare-fun flatten_0 (list_0 Tree_0 list_0) Bool)
(declare-fun add_0 (Tree_0 Nat_0 Tree_0) Bool)
(declare-fun toTree_0 (Tree_0 list_0) Bool)
(declare-fun tsort_0 (list_0 list_0) Bool)
(assert (forall ((y_5 Nat_0))
	(le_0 Z_3 y_5)))
(assert (forall ((x_28 Nat_0) (y_5 Nat_0))
	(=> (le_0 x_28 y_5) (le_0 (Z_4 x_28) (Z_4 y_5)))))
(assert (forall ((y_5 Nat_0))
	(gt_0 (Z_4 y_5) Z_3)))
(assert (forall ((x_28 Nat_0) (y_5 Nat_0))
	(=> (gt_0 x_28 y_5) (gt_0 (Z_4 x_28) (Z_4 y_5)))))
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(assert (forall ((x_5 Bool_0) (y_1 Nat_0) (xs_0 list_0) (y_0 Nat_0))
	(=> (and (le_0 y_0 y_1) (ordered_0 x_5 (cons_0 y_1 xs_0))) (ordered_0 x_5 (cons_0 y_0 (cons_0 y_1 xs_0))))))
(assert (forall ((y_1 Nat_0) (xs_0 list_0) (y_0 Nat_0))
	(=> (gt_0 y_0 y_1) (ordered_0 false_0 (cons_0 y_0 (cons_0 y_1 xs_0))))))
(assert (forall ((y_0 Nat_0))
	(ordered_0 true_0 (cons_0 y_0 nil_0))))
(assert (ordered_0 true_0 nil_0))
(assert (forall ((x_10 list_0))
	(flatten_0 x_10 TNil_0 x_10)))
(assert (forall ((x_11 list_0) (x_12 list_0) (p_0 Tree_0) (z_1 Nat_0) (q_0 Tree_0) (y_2 list_0))
	(=> (and (flatten_0 x_12 q_0 y_2) (flatten_0 x_11 p_0 (cons_0 z_1 x_12))) (flatten_0 x_11 (TNode_0 p_0 z_1 q_0) y_2))))
(assert (forall ((x_2 Nat_0))
	(add_0 (TNode_0 TNil_0 x_2 TNil_0) x_2 TNil_0)))
(assert (forall ((x_16 Tree_0) (p_1 Tree_0) (z_2 Nat_0) (q_1 Tree_0) (x_2 Nat_0))
	(=> (and (le_0 x_2 z_2) (add_0 x_16 x_2 p_1)) (add_0 (TNode_0 x_16 z_2 q_1) x_2 (TNode_0 p_1 z_2 q_1)))))
(assert (forall ((x_18 Tree_0) (p_1 Tree_0) (z_2 Nat_0) (q_1 Tree_0) (x_2 Nat_0))
	(=> (and (gt_0 x_2 z_2) (add_0 x_18 x_2 q_1)) (add_0 (TNode_0 p_1 z_2 x_18) x_2 (TNode_0 p_1 z_2 q_1)))))
(assert (forall ((x_19 Tree_0) (x_20 Tree_0) (y_4 Nat_0) (xs_1 list_0))
	(=> (and (toTree_0 x_20 xs_1) (add_0 x_19 y_4 x_20)) (toTree_0 x_19 (cons_0 y_4 xs_1)))))
(assert (toTree_0 TNil_0 nil_0))
(assert (forall ((x_23 list_0) (x_24 Tree_0) (x_4 list_0))
	(=> (and (toTree_0 x_24 x_4) (flatten_0 x_23 x_24 nil_0)) (tsort_0 x_23 x_4))))
(assert (forall ((x_26 list_0) (x_27 Bool_0) (xs_2 list_0))
	(=> (and (diseqBool_0 x_27 true_0) (tsort_0 x_26 xs_2) (ordered_0 x_27 x_26)) false)))
(check-sat)
(get-model)
