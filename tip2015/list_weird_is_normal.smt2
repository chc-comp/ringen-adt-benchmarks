(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_4 ) (Z_5 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 list_0) (tail_1 list_1)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 Nat_0) (tail_2 list_2)))))
(declare-fun diseqlist_2 (list_2 list_2) Bool)
(declare-datatypes ((list_3 0)) (((nil_3 ) (cons_3 (head_3 list_2) (tail_3 list_3)))))
(declare-fun weirdconcat_1 (list_2 list_3) Bool)
(declare-fun x_5 (list_2 list_2 list_2) Bool)
(declare-fun concat_1 (list_2 list_3) Bool)
(assert (forall ((x_96 Nat_0))
	(diseqNat_0 Z_4 (Z_5 x_96))))
(assert (forall ((x_97 Nat_0))
	(diseqNat_0 (Z_5 x_97) Z_4)))
(assert (forall ((x_98 Nat_0) (x_99 Nat_0))
	(=> (diseqNat_0 x_98 x_99) (diseqNat_0 (Z_5 x_98) (Z_5 x_99)))))
(assert (forall ((x_70 Nat_0) (x_71 list_2))
	(diseqlist_2 nil_2 (cons_2 x_70 x_71))))
(assert (forall ((x_72 Nat_0) (x_73 list_2))
	(diseqlist_2 (cons_2 x_72 x_73) nil_2)))
(assert (forall ((x_74 Nat_0) (x_75 list_2) (x_76 Nat_0) (x_77 list_2))
	(=> (diseqNat_0 x_74 x_76) (diseqlist_2 (cons_2 x_74 x_75) (cons_2 x_76 x_77)))))
(assert (forall ((x_74 Nat_0) (x_75 list_2) (x_76 Nat_0) (x_77 list_2))
	(=> (diseqlist_2 x_75 x_77) (diseqlist_2 (cons_2 x_74 x_75) (cons_2 x_76 x_77)))))
(assert (forall ((x_15 list_2) (z_1 Nat_0) (xs_1 list_2) (xss_1 list_3))
	(=> (weirdconcat_1 x_15 (cons_3 xs_1 xss_1)) (weirdconcat_1 (cons_2 z_1 x_15) (cons_3 (cons_2 z_1 xs_1) xss_1)))))
(assert (forall ((x_16 list_2) (xss_1 list_3))
	(=> (weirdconcat_1 x_16 xss_1) (weirdconcat_1 x_16 (cons_3 nil_2 xss_1)))))
(assert (weirdconcat_1 nil_2 nil_3))
(assert (forall ((x_27 list_2) (z_3 Nat_0) (xs_4 list_2) (y_4 list_2))
	(=> (x_5 x_27 xs_4 y_4) (x_5 (cons_2 z_3 x_27) (cons_2 z_3 xs_4) y_4))))
(assert (forall ((x_28 list_2))
	(x_5 x_28 nil_2 x_28)))
(assert (forall ((x_29 list_2) (x_30 list_2) (y_5 list_2) (xs_5 list_3))
	(=> (and (concat_1 x_30 xs_5) (x_5 x_29 y_5 x_30)) (concat_1 x_29 (cons_3 y_5 xs_5)))))
(assert (concat_1 nil_2 nil_3))
(assert (forall ((x_33 list_2) (x_34 list_2) (x_8 list_3))
	(=> (and (diseqlist_2 x_33 x_34) (concat_1 x_33 x_8) (weirdconcat_1 x_34 x_8)) false)))
(check-sat)
(get-model)
