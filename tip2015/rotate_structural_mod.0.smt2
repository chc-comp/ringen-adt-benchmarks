(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_0 ) (S_0 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_74 Nat_1) (x_73 Nat_1))
	(=> (= x_74 (S_0 x_73))
	    (unS_1 x_73 x_74))))
(assert (isZ_0 Z_0))
(assert (forall ((x_75 Nat_1))
	(isS_0 (S_0 x_75))))
(assert (forall ((x_76 Nat_1))
	(diseqNat_0 Z_0 (S_0 x_76))))
(assert (forall ((x_77 Nat_1))
	(diseqNat_0 (S_0 x_77) Z_0)))
(assert (forall ((x_78 Nat_1) (x_79 Nat_1))
	(=> (diseqNat_0 x_78 x_79)
	    (diseqNat_0 (S_0 x_78) (S_0 x_79)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_1 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_12 Nat_1))
	(add_0 y_12 Z_0 y_12)))
(assert (forall ((x_71 Nat_1) (y_12 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_71 y_12)
	    (add_0 (S_0 r_0) (S_0 x_71) y_12))))
(assert (forall ((y_12 Nat_1))
	(minus_1 Z_0 Z_0 y_12)))
(assert (forall ((x_71 Nat_1) (y_12 Nat_1) (r_0 Nat_1))
	(=> (minus_1 r_0 x_71 y_12)
	    (minus_1 (S_0 r_0) (S_0 x_71) y_12))))
(assert (forall ((y_12 Nat_1))
	(le_0 Z_0 y_12)))
(assert (forall ((x_71 Nat_1) (y_12 Nat_1))
	(=> (le_0 x_71 y_12)
	    (le_0 (S_0 x_71) (S_0 y_12)))))
(assert (forall ((y_12 Nat_1))
	(ge_0 y_12 Z_0)))
(assert (forall ((x_71 Nat_1) (y_12 Nat_1))
	(=> (ge_0 x_71 y_12)
	    (ge_0 (S_0 x_71) (S_0 y_12)))))
(assert (forall ((y_12 Nat_1))
	(lt_0 Z_0 (S_0 y_12))))
(assert (forall ((x_71 Nat_1) (y_12 Nat_1))
	(=> (lt_0 x_71 y_12)
	    (lt_0 (S_0 x_71) (S_0 y_12)))))
(assert (forall ((y_12 Nat_1))
	(gt_0 (S_0 y_12) Z_0)))
(assert (forall ((x_71 Nat_1) (y_12 Nat_1))
	(=> (gt_0 x_71 y_12)
	    (gt_0 (S_0 x_71) (S_0 y_12)))))
(assert (forall ((y_12 Nat_1))
	(mult_0 Z_0 Z_0 y_12)))
(assert (forall ((x_71 Nat_1) (y_12 Nat_1) (r_0 Nat_1) (z_11 Nat_1))
	(=>	(and (mult_0 r_0 x_71 y_12)
			(add_0 z_11 r_0 y_12))
		(mult_0 z_11 (S_0 x_71) y_12))))
(assert (forall ((x_71 Nat_1) (y_12 Nat_1))
	(=> (lt_0 x_71 y_12)
	    (div_0 Z_0 x_71 y_12))))
(assert (forall ((x_71 Nat_1) (y_12 Nat_1) (r_0 Nat_1) (z_11 Nat_1))
	(=>	(and (ge_0 x_71 y_12)
			(minus_1 z_11 x_71 y_12)
			(div_0 r_0 z_11 y_12))
		(div_0 (S_0 r_0) x_71 y_12))))
(assert (forall ((x_71 Nat_1) (y_12 Nat_1))
	(=> (lt_0 x_71 y_12)
	    (mod_0 x_71 x_71 y_12))))
(assert (forall ((x_71 Nat_1) (y_12 Nat_1) (r_0 Nat_1) (z_11 Nat_1))
	(=>	(and (ge_0 x_71 y_12)
			(minus_1 z_11 x_71 y_12)
			(mod_0 r_0 z_11 y_12))
		(mod_0 r_0 x_71 y_12))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_1 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_83 list_0) (x_81 Nat_1) (x_82 list_0))
	(=> (= x_83 (cons_0 x_81 x_82))
	    (head_1 x_81 x_83))))
(assert (forall ((x_83 list_0) (x_81 Nat_1) (x_82 list_0))
	(=> (= x_83 (cons_0 x_81 x_82))
	    (tail_1 x_82 x_83))))
(assert (isnil_0 nil_0))
(assert (forall ((x_84 Nat_1) (x_85 list_0))
	(iscons_0 (cons_0 x_84 x_85))))
(assert (forall ((x_86 Nat_1) (x_87 list_0))
	(diseqlist_0 nil_0 (cons_0 x_86 x_87))))
(assert (forall ((x_88 Nat_1) (x_89 list_0))
	(diseqlist_0 (cons_0 x_88 x_89) nil_0)))
(assert (forall ((x_90 Nat_1) (x_91 list_0) (x_92 Nat_1) (x_93 list_0))
	(=> (diseqNat_0 x_90 x_92)
	    (diseqlist_0 (cons_0 x_90 x_91) (cons_0 x_92 x_93)))))
(assert (forall ((x_90 Nat_1) (x_91 list_0) (x_92 Nat_1) (x_93 list_0))
	(=> (diseqlist_0 x_91 x_93)
	    (diseqlist_0 (cons_0 x_90 x_91) (cons_0 x_92 x_93)))))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_96 Nat_0) (x_95 Nat_0))
	(=> (= x_96 (succ_0 x_95))
	    (p_1 x_95 x_96))))
(assert (iszero_0 zero_0))
(assert (forall ((x_97 Nat_0))
	(issucc_0 (succ_0 x_97))))
(assert (forall ((x_98 Nat_0))
	(diseqNat_1 zero_0 (succ_0 x_98))))
(assert (forall ((x_99 Nat_0))
	(diseqNat_1 (succ_0 x_99) zero_0)))
(assert (forall ((x_100 Nat_0) (x_101 Nat_0))
	(=> (diseqNat_1 x_100 x_101)
	    (diseqNat_1 (succ_0 x_100) (succ_0 x_101)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (z_1 Nat_1) (xs_0 list_0) (x_18 list_0) (x_19 list_0))
	(=>	(and (= x_18 (cons_0 z_1 x_19))
			(take_0 x_19 z_0 xs_0)
			(= x_0 (succ_0 z_0))
			(= y_0 (cons_0 z_1 xs_0)))
		(take_0 x_18 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (x_20 list_0))
	(=>	(and (= x_20 nil_0)
			(= x_0 (succ_0 z_0))
			(= y_0 nil_0))
		(take_0 x_20 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_21 list_0))
	(=>	(and (= x_21 nil_0)
			(= x_0 zero_0))
		(take_0 x_21 x_0 y_0))))
(declare-fun plus_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (z_2 Nat_0) (x_22 Nat_0) (x_23 Nat_0))
	(=>	(and (= x_22 (succ_0 x_23))
			(plus_0 x_23 z_2 y_1)
			(= x_1 (succ_0 z_2)))
		(plus_0 x_22 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (x_24 Nat_0))
	(=>	(and (= x_24 y_1)
			(= x_1 zero_0))
		(plus_0 x_24 x_1 y_1))))
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_2 Nat_0) (y_2 Nat_0) (z_3 Nat_0) (y_3 Nat_0) (x_25 Nat_0) (x_26 Nat_0))
	(=>	(and (= x_25 x_26)
			(minus_0 x_26 z_3 y_3)
			(= x_2 (succ_0 z_3))
			(= y_2 (succ_0 y_3)))
		(minus_0 x_25 x_2 y_2))))
(assert (forall ((x_2 Nat_0) (y_2 Nat_0) (z_3 Nat_0) (x_27 Nat_0))
	(=>	(and (= x_27 zero_0)
			(= x_2 (succ_0 z_3))
			(= y_2 zero_0))
		(minus_0 x_27 x_2 y_2))))
(assert (forall ((x_2 Nat_0) (y_2 Nat_0) (x_28 Nat_0))
	(=>	(and (= x_28 zero_0)
			(= x_2 zero_0))
		(minus_0 x_28 x_2 y_2))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_3 list_0) (y_4 Nat_1) (l_0 list_0) (x_29 Nat_0) (x_30 Nat_0) (x_31 Nat_0))
	(=>	(and (= x_29 x_31)
			(length_0 x_30 l_0)
			(plus_0 x_31 (succ_0 zero_0) x_30)
			(= x_3 (cons_0 y_4 l_0)))
		(length_0 x_29 x_3))))
(assert (forall ((x_3 list_0) (x_32 Nat_0))
	(=>	(and (= x_32 zero_0)
			(= x_3 nil_0))
		(length_0 x_32 x_3))))
(declare-fun go_0 (Nat_0 Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_4 Nat_0) (y_5 Nat_0) (z_4 Nat_0) (x_5 Nat_0) (x_6 Nat_0) (x_7 Nat_0) (x_33 Nat_0) (x_34 Nat_0))
	(=>	(and (= x_33 x_34)
			(go_0 x_34 x_6 x_7 (succ_0 x_5))
			(= z_4 (succ_0 x_5))
			(= x_4 (succ_0 x_6))
			(= y_5 (succ_0 x_7)))
		(go_0 x_33 x_4 y_5 z_4))))
(assert (forall ((x_4 Nat_0) (y_5 Nat_0) (z_4 Nat_0) (x_5 Nat_0) (x_6 Nat_0) (x_35 Nat_0) (x_36 Nat_0))
	(=>	(and (= x_35 x_36)
			(go_0 x_36 x_6 x_5 (succ_0 x_5))
			(= z_4 (succ_0 x_5))
			(= x_4 (succ_0 x_6))
			(= y_5 zero_0))
		(go_0 x_35 x_4 y_5 z_4))))
(assert (forall ((x_4 Nat_0) (y_5 Nat_0) (z_4 Nat_0) (x_5 Nat_0) (x_8 Nat_0) (x_37 Nat_0) (x_38 Nat_0))
	(=>	(and (= x_37 x_38)
			(minus_0 x_38 (succ_0 x_5) (succ_0 x_8))
			(= z_4 (succ_0 x_5))
			(= x_4 zero_0)
			(= y_5 (succ_0 x_8)))
		(go_0 x_37 x_4 y_5 z_4))))
(assert (forall ((x_4 Nat_0) (y_5 Nat_0) (z_4 Nat_0) (x_5 Nat_0) (x_39 Nat_0))
	(=>	(and (= x_39 zero_0)
			(= z_4 (succ_0 x_5))
			(= x_4 zero_0)
			(= y_5 zero_0))
		(go_0 x_39 x_4 y_5 z_4))))
(assert (forall ((x_4 Nat_0) (y_5 Nat_0) (z_4 Nat_0) (x_40 Nat_0))
	(=>	(and (= x_40 zero_0)
			(= z_4 zero_0))
		(go_0 x_40 x_4 y_5 z_4))))
(declare-fun modstructural_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_9 Nat_0) (y_6 Nat_0) (x_41 Nat_0) (x_42 Nat_0))
	(=>	(and (= x_41 x_42)
			(go_0 x_42 x_9 zero_0 y_6))
		(modstructural_0 x_41 x_9 y_6))))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_10 Nat_0) (y_7 list_0) (z_5 Nat_0) (z_6 Nat_1) (xs_1 list_0) (x_43 list_0) (x_44 list_0))
	(=>	(and (= x_43 x_44)
			(drop_0 x_44 z_5 xs_1)
			(= x_10 (succ_0 z_5))
			(= y_7 (cons_0 z_6 xs_1)))
		(drop_0 x_43 x_10 y_7))))
(assert (forall ((x_10 Nat_0) (y_7 list_0) (z_5 Nat_0) (x_45 list_0))
	(=>	(and (= x_45 nil_0)
			(= x_10 (succ_0 z_5))
			(= y_7 nil_0))
		(drop_0 x_45 x_10 y_7))))
(assert (forall ((x_10 Nat_0) (y_7 list_0) (x_46 list_0))
	(=>	(and (= x_46 y_7)
			(= x_10 zero_0))
		(drop_0 x_46 x_10 y_7))))
(declare-fun x_11 (list_0 list_0 list_0) Bool)
(assert (forall ((x_12 list_0) (y_8 list_0) (z_7 Nat_1) (xs_2 list_0) (x_47 list_0) (x_48 list_0))
	(=>	(and (= x_47 (cons_0 z_7 x_48))
			(x_11 x_48 xs_2 y_8)
			(= x_12 (cons_0 z_7 xs_2)))
		(x_11 x_47 x_12 y_8))))
(assert (forall ((x_12 list_0) (y_8 list_0) (x_49 list_0))
	(=>	(and (= x_49 y_8)
			(= x_12 nil_0))
		(x_11 x_49 x_12 y_8))))
(declare-fun rotate_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_13 Nat_0) (y_9 list_0) (z_8 Nat_0) (z_9 Nat_1) (xs_3 list_0) (x_50 list_0) (x_51 list_0) (x_52 list_0))
	(=>	(and (= x_50 x_52)
			(x_11 x_51 xs_3 (cons_0 z_9 nil_0))
			(rotate_0 x_52 z_8 x_51)
			(= x_13 (succ_0 z_8))
			(= y_9 (cons_0 z_9 xs_3)))
		(rotate_0 x_50 x_13 y_9))))
(assert (forall ((x_13 Nat_0) (y_9 list_0) (z_8 Nat_0) (x_53 list_0))
	(=>	(and (= x_53 nil_0)
			(= x_13 (succ_0 z_8))
			(= y_9 nil_0))
		(rotate_0 x_53 x_13 y_9))))
(assert (forall ((x_13 Nat_0) (y_9 list_0) (x_54 list_0))
	(=>	(and (= x_54 y_9)
			(= x_13 zero_0))
		(rotate_0 x_54 x_13 y_9))))
(assert (forall ((x_14 Nat_0) (y_10 Nat_0) (z_10 Nat_0) (x_55 Nat_0) (x_56 Nat_0) (x_57 Nat_0) (x_58 Nat_0))
	(=>	(and (diseqNat_1 x_56 x_58)
			(plus_0 x_55 y_10 z_10)
			(plus_0 x_56 x_14 x_55)
			(plus_0 x_57 x_14 y_10)
			(plus_0 x_58 x_57 z_10))
		false)))
(assert (forall ((x_15 Nat_0) (y_11 Nat_0) (x_59 Nat_0) (x_60 Nat_0))
	(=>	(and (diseqNat_1 x_59 x_60)
			(plus_0 x_59 x_15 y_11)
			(plus_0 x_60 y_11 x_15))
		false)))
(assert (forall ((x_16 Nat_0) (x_61 Nat_0))
	(=>	(and (diseqNat_1 x_61 x_16)
			(plus_0 x_61 x_16 zero_0))
		false)))
(assert (forall ((x_17 Nat_0) (x_62 Nat_0))
	(=>	(and (diseqNat_1 x_62 x_17)
			(plus_0 x_62 zero_0 x_17))
		false)))
(assert (forall ((n_0 Nat_0) (xs_4 list_0) (x_63 list_0) (x_64 Nat_0) (x_65 Nat_0) (x_66 list_0) (x_67 Nat_0) (x_68 Nat_0) (x_69 list_0) (x_70 list_0))
	(=>	(and (diseqlist_0 x_63 x_70)
			(rotate_0 x_63 n_0 xs_4)
			(length_0 x_64 xs_4)
			(modstructural_0 x_65 n_0 x_64)
			(drop_0 x_66 x_65 xs_4)
			(length_0 x_67 xs_4)
			(modstructural_0 x_68 n_0 x_67)
			(take_0 x_69 x_68 xs_4)
			(x_11 x_70 x_66 x_69))
		false)))
(check-sat)
