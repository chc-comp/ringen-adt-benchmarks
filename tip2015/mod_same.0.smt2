(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_0 ) (S_0 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_39 Nat_1) (x_38 Nat_1))
	(=> (= x_39 (S_0 x_38))
	    (unS_1 x_38 x_39))))
(assert (isZ_0 Z_0))
(assert (forall ((x_40 Nat_1))
	(isS_0 (S_0 x_40))))
(assert (forall ((x_41 Nat_1))
	(diseqNat_0 Z_0 (S_0 x_41))))
(assert (forall ((x_42 Nat_1))
	(diseqNat_0 (S_0 x_42) Z_0)))
(assert (forall ((x_43 Nat_1) (x_44 Nat_1))
	(=> (diseqNat_0 x_43 x_44)
	    (diseqNat_0 (S_0 x_43) (S_0 x_44)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_1 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_1 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_1 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_6 Nat_1))
	(add_0 y_6 Z_0 y_6)))
(assert (forall ((x_36 Nat_1) (y_6 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_36 y_6)
	    (add_0 (S_0 r_0) (S_0 x_36) y_6))))
(assert (forall ((y_6 Nat_1))
	(minus_1 Z_0 Z_0 y_6)))
(assert (forall ((x_36 Nat_1) (y_6 Nat_1) (r_0 Nat_1))
	(=> (minus_1 r_0 x_36 y_6)
	    (minus_1 (S_0 r_0) (S_0 x_36) y_6))))
(assert (forall ((y_6 Nat_1))
	(le_0 Z_0 y_6)))
(assert (forall ((x_36 Nat_1) (y_6 Nat_1))
	(=> (le_0 x_36 y_6)
	    (le_0 (S_0 x_36) (S_0 y_6)))))
(assert (forall ((y_6 Nat_1))
	(ge_0 y_6 Z_0)))
(assert (forall ((x_36 Nat_1) (y_6 Nat_1))
	(=> (ge_0 x_36 y_6)
	    (ge_0 (S_0 x_36) (S_0 y_6)))))
(assert (forall ((y_6 Nat_1))
	(lt_1 Z_0 (S_0 y_6))))
(assert (forall ((x_36 Nat_1) (y_6 Nat_1))
	(=> (lt_1 x_36 y_6)
	    (lt_1 (S_0 x_36) (S_0 y_6)))))
(assert (forall ((y_6 Nat_1))
	(gt_0 (S_0 y_6) Z_0)))
(assert (forall ((x_36 Nat_1) (y_6 Nat_1))
	(=> (gt_0 x_36 y_6)
	    (gt_0 (S_0 x_36) (S_0 y_6)))))
(assert (forall ((y_6 Nat_1))
	(mult_0 Z_0 Z_0 y_6)))
(assert (forall ((x_36 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_4 Nat_1))
	(=>	(and (mult_0 r_0 x_36 y_6)
			(add_0 z_4 r_0 y_6))
		(mult_0 z_4 (S_0 x_36) y_6))))
(assert (forall ((x_36 Nat_1) (y_6 Nat_1))
	(=> (lt_1 x_36 y_6)
	    (div_0 Z_0 x_36 y_6))))
(assert (forall ((x_36 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_4 Nat_1))
	(=>	(and (ge_0 x_36 y_6)
			(minus_1 z_4 x_36 y_6)
			(div_0 r_0 z_4 y_6))
		(div_0 (S_0 r_0) x_36 y_6))))
(assert (forall ((x_36 Nat_1) (y_6 Nat_1))
	(=> (lt_1 x_36 y_6)
	    (mod_1 x_36 x_36 y_6))))
(assert (forall ((x_36 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_4 Nat_1))
	(=>	(and (ge_0 x_36 y_6)
			(minus_1 z_4 x_36 y_6)
			(mod_1 r_0 z_4 y_6))
		(mod_1 r_0 x_36 y_6))))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_47 Nat_0) (x_46 Nat_0))
	(=> (= x_47 (succ_0 x_46))
	    (p_1 x_46 x_47))))
(assert (iszero_0 zero_0))
(assert (forall ((x_48 Nat_0))
	(issucc_0 (succ_0 x_48))))
(assert (forall ((x_49 Nat_0))
	(diseqNat_1 zero_0 (succ_0 x_49))))
(assert (forall ((x_50 Nat_0))
	(diseqNat_1 (succ_0 x_50) zero_0)))
(assert (forall ((x_51 Nat_0) (x_52 Nat_0))
	(=> (diseqNat_1 x_51 x_52)
	    (diseqNat_1 (succ_0 x_51) (succ_0 x_52)))))
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (y_1 Nat_0) (x_9 Nat_0) (x_10 Nat_0))
	(=>	(and (= x_9 x_10)
			(minus_0 x_10 z_0 y_1)
			(= x_0 (succ_0 z_0))
			(= y_0 (succ_0 y_1)))
		(minus_0 x_9 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_11 Nat_0))
	(=>	(and (= x_11 zero_0)
			(= x_0 (succ_0 z_0))
			(= y_0 zero_0))
		(minus_0 x_11 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_12 Nat_0))
	(=>	(and (= x_12 zero_0)
			(= x_0 zero_0))
		(minus_0 x_12 x_0 y_0))))
(declare-fun lt_0 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_2 Nat_0) (z_1 Nat_0) (n_0 Nat_0) (x_13 Bool) (x_14 Bool))
	(=>	(and (= x_13 x_14)
			(lt_0 x_14 n_0 z_1)
			(= y_2 (succ_0 z_1))
			(= x_1 (succ_0 n_0)))
		(lt_0 x_13 x_1 y_2))))
(assert (forall ((x_1 Nat_0) (y_2 Nat_0) (z_1 Nat_0) (x_15 Bool))
	(=>	(and (= x_15 true)
			(= y_2 (succ_0 z_1))
			(= x_1 zero_0))
		(lt_0 x_15 x_1 y_2))))
(assert (forall ((x_1 Nat_0) (y_2 Nat_0) (x_16 Bool))
	(=>	(and (= x_16 false)
			(= y_2 zero_0))
		(lt_0 x_16 x_1 y_2))))
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_2 Nat_0) (y_3 Nat_0) (z_2 Nat_0) (x_18 Nat_0) (x_17 Bool))
	(=>	(and (= x_18 x_2)
			(= y_3 (succ_0 z_2))
			(= x_17 true)
			(lt_0 x_17 x_2 (succ_0 z_2)))
		(mod_0 x_18 x_2 y_3))))
(assert (forall ((x_2 Nat_0) (y_3 Nat_0) (z_2 Nat_0) (x_20 Nat_0) (x_21 Nat_0) (x_22 Nat_0) (x_19 Bool))
	(=>	(and (= x_20 x_22)
			(minus_0 x_21 x_2 (succ_0 z_2))
			(mod_0 x_22 x_21 (succ_0 z_2))
			(= y_3 (succ_0 z_2))
			(= x_19 false)
			(lt_0 x_19 x_2 (succ_0 z_2)))
		(mod_0 x_20 x_2 y_3))))
(assert (forall ((x_2 Nat_0) (y_3 Nat_0) (x_23 Nat_0))
	(=>	(and (= x_23 zero_0)
			(= y_3 zero_0))
		(mod_0 x_23 x_2 y_3))))
(declare-fun go_0 (Nat_0 Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_3 Nat_0) (y_4 Nat_0) (z_3 Nat_0) (x_4 Nat_0) (x_5 Nat_0) (x_6 Nat_0) (x_24 Nat_0) (x_25 Nat_0))
	(=>	(and (= x_24 x_25)
			(go_0 x_25 x_5 x_6 (succ_0 x_4))
			(= z_3 (succ_0 x_4))
			(= x_3 (succ_0 x_5))
			(= y_4 (succ_0 x_6)))
		(go_0 x_24 x_3 y_4 z_3))))
(assert (forall ((x_3 Nat_0) (y_4 Nat_0) (z_3 Nat_0) (x_4 Nat_0) (x_5 Nat_0) (x_26 Nat_0) (x_27 Nat_0))
	(=>	(and (= x_26 x_27)
			(go_0 x_27 x_5 x_4 (succ_0 x_4))
			(= z_3 (succ_0 x_4))
			(= x_3 (succ_0 x_5))
			(= y_4 zero_0))
		(go_0 x_26 x_3 y_4 z_3))))
(assert (forall ((x_3 Nat_0) (y_4 Nat_0) (z_3 Nat_0) (x_4 Nat_0) (x_7 Nat_0) (x_28 Nat_0) (x_29 Nat_0))
	(=>	(and (= x_28 x_29)
			(minus_0 x_29 (succ_0 x_4) (succ_0 x_7))
			(= z_3 (succ_0 x_4))
			(= x_3 zero_0)
			(= y_4 (succ_0 x_7)))
		(go_0 x_28 x_3 y_4 z_3))))
(assert (forall ((x_3 Nat_0) (y_4 Nat_0) (z_3 Nat_0) (x_4 Nat_0) (x_30 Nat_0))
	(=>	(and (= x_30 zero_0)
			(= z_3 (succ_0 x_4))
			(= x_3 zero_0)
			(= y_4 zero_0))
		(go_0 x_30 x_3 y_4 z_3))))
(assert (forall ((x_3 Nat_0) (y_4 Nat_0) (z_3 Nat_0) (x_31 Nat_0))
	(=>	(and (= x_31 zero_0)
			(= z_3 zero_0))
		(go_0 x_31 x_3 y_4 z_3))))
(declare-fun modstructural_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_8 Nat_0) (y_5 Nat_0) (x_32 Nat_0) (x_33 Nat_0))
	(=>	(and (= x_32 x_33)
			(go_0 x_33 x_8 zero_0 y_5))
		(modstructural_0 x_32 x_8 y_5))))
(assert (forall ((m_0 Nat_0) (n_1 Nat_0) (x_34 Nat_0) (x_35 Nat_0))
	(=>	(and (diseqNat_1 x_34 x_35)
			(mod_0 x_34 m_0 n_1)
			(modstructural_0 x_35 m_0 n_1))
		false)))
(check-sat)
