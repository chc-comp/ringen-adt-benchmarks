(set-logic HORN)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(declare-fun plus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Bool_0 Nat_0 Nat_0) Bool)
(declare-fun leq_0 (Bool_0 Nat_0 Nat_0) Bool)
(declare-fun lmerge_0 (list_0 list_0 list_0) Bool)
(declare-fun length_0 (Nat_0 list_0) Bool)
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(declare-fun isort_0 (list_0 list_0) Bool)
(declare-fun idiv_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(declare-fun msorttd_0 (list_0 list_0) Bool)
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(assert (forall ((x_100 Nat_0))
	(diseqNat_0 zero_0 (succ_0 x_100))))
(assert (forall ((x_101 Nat_0))
	(diseqNat_0 (succ_0 x_101) zero_0)))
(assert (forall ((x_102 Nat_0) (x_103 Nat_0))
	(=> (diseqNat_0 x_102 x_103) (diseqNat_0 (succ_0 x_102) (succ_0 x_103)))))
(assert (forall ((x_110 Nat_0) (x_111 list_0))
	(diseqlist_0 nil_0 (cons_0 x_110 x_111))))
(assert (forall ((x_112 Nat_0) (x_113 list_0))
	(diseqlist_0 (cons_0 x_112 x_113) nil_0)))
(assert (forall ((x_114 Nat_0) (x_115 list_0) (x_116 Nat_0) (x_117 list_0))
	(=> (diseqNat_0 x_114 x_116) (diseqlist_0 (cons_0 x_114 x_115) (cons_0 x_116 x_117)))))
(assert (forall ((x_114 Nat_0) (x_115 list_0) (x_116 Nat_0) (x_117 list_0))
	(=> (diseqlist_0 x_115 x_117) (diseqlist_0 (cons_0 x_114 x_115) (cons_0 x_116 x_117)))))
(assert (forall ((x_23 list_0) (z_1 Nat_0) (xs_0 list_0) (z_0 Nat_0))
	(=> (take_0 x_23 z_0 xs_0) (take_0 (cons_0 z_1 x_23) (succ_0 z_0) (cons_0 z_1 xs_0)))))
(assert (forall ((z_0 Nat_0))
	(take_0 nil_0 (succ_0 z_0) nil_0)))
(assert (forall ((y_0 list_0))
	(take_0 nil_0 zero_0 y_0)))
(assert (forall ((x_27 Nat_0) (z_2 Nat_0) (y_1 Nat_0))
	(=> (plus_0 x_27 z_2 y_1) (plus_0 (succ_0 x_27) (succ_0 z_2) y_1))))
(assert (forall ((x_28 Nat_0))
	(plus_0 x_28 zero_0 x_28)))
(assert (forall ((x_29 Nat_0) (y_3 Nat_0) (z_3 Nat_0))
	(=> (minus_0 x_29 z_3 y_3) (minus_0 x_29 (succ_0 z_3) (succ_0 y_3)))))
(assert (forall ((z_3 Nat_0))
	(minus_0 zero_0 (succ_0 z_3) zero_0)))
(assert (forall ((y_2 Nat_0))
	(minus_0 zero_0 zero_0 y_2)))
(assert (forall ((x_33 Bool_0) (n_0 Nat_0) (z_4 Nat_0))
	(=> (lt_0 x_33 n_0 z_4) (lt_0 x_33 (succ_0 n_0) (succ_0 z_4)))))
(assert (forall ((z_4 Nat_0))
	(lt_0 true_0 zero_0 (succ_0 z_4))))
(assert (forall ((x_3 Nat_0))
	(lt_0 false_0 x_3 zero_0)))
(assert (forall ((x_37 Bool_0) (x_5 Nat_0) (z_5 Nat_0))
	(=> (leq_0 x_37 z_5 x_5) (leq_0 x_37 (succ_0 z_5) (succ_0 x_5)))))
(assert (forall ((z_5 Nat_0))
	(leq_0 false_0 (succ_0 z_5) zero_0)))
(assert (forall ((y_5 Nat_0))
	(leq_0 true_0 zero_0 y_5)))
(assert (forall ((x_43 list_0) (x_8 Nat_0) (x_9 list_0) (z_6 Nat_0) (x_7 list_0))
	(=> (and (lmerge_0 x_43 x_7 (cons_0 x_8 x_9)) (leq_0 true_0 z_6 x_8)) (lmerge_0 (cons_0 z_6 x_43) (cons_0 z_6 x_7) (cons_0 x_8 x_9)))))
(assert (forall ((x_46 list_0) (x_44 Bool_0) (x_8 Nat_0) (x_9 list_0) (z_6 Nat_0) (x_7 list_0))
	(=> (and (diseqBool_0 x_44 true_0) (lmerge_0 x_46 (cons_0 z_6 x_7) x_9) (leq_0 x_44 z_6 x_8)) (lmerge_0 (cons_0 x_8 x_46) (cons_0 z_6 x_7) (cons_0 x_8 x_9)))))
(assert (forall ((z_6 Nat_0) (x_7 list_0))
	(lmerge_0 (cons_0 z_6 x_7) (cons_0 z_6 x_7) nil_0)))
(assert (forall ((x_48 list_0))
	(lmerge_0 x_48 nil_0 x_48)))
(assert (forall ((x_49 Nat_0) (x_50 Nat_0) (y_7 Nat_0) (l_0 list_0))
	(=> (and (length_0 x_50 l_0) (plus_0 x_49 (succ_0 zero_0) x_50)) (length_0 x_49 (cons_0 y_7 l_0)))))
(assert (length_0 zero_0 nil_0))
(assert (forall ((z_7 Nat_0) (xs_1 list_0) (x_11 Nat_0))
	(=> (leq_0 true_0 x_11 z_7) (insert_0 (cons_0 x_11 (cons_0 z_7 xs_1)) x_11 (cons_0 z_7 xs_1)))))
(assert (forall ((x_57 list_0) (x_55 Bool_0) (z_7 Nat_0) (xs_1 list_0) (x_11 Nat_0))
	(=> (and (diseqBool_0 x_55 true_0) (insert_0 x_57 x_11 xs_1) (leq_0 x_55 x_11 z_7)) (insert_0 (cons_0 z_7 x_57) x_11 (cons_0 z_7 xs_1)))))
(assert (forall ((x_11 Nat_0))
	(insert_0 (cons_0 x_11 nil_0) x_11 nil_0)))
(assert (forall ((x_59 list_0) (x_60 list_0) (y_9 Nat_0) (xs_2 list_0))
	(=> (and (isort_0 x_60 xs_2) (insert_0 x_59 y_9 x_60)) (isort_0 x_59 (cons_0 y_9 xs_2)))))
(assert (isort_0 nil_0 nil_0))
(assert (forall ((x_13 Nat_0) (y_10 Nat_0))
	(=> (lt_0 true_0 x_13 y_10) (idiv_0 zero_0 x_13 y_10))))
(assert (forall ((x_67 Nat_0) (x_68 Nat_0) (x_65 Bool_0) (x_13 Nat_0) (y_10 Nat_0))
	(=> (and (diseqBool_0 x_65 true_0) (minus_0 x_67 x_13 y_10) (idiv_0 x_68 x_67 y_10) (lt_0 x_65 x_13 y_10)) (idiv_0 (succ_0 x_68) x_13 y_10))))
(assert (forall ((x_69 list_0) (z_9 Nat_0) (xs_3 list_0) (z_8 Nat_0))
	(=> (drop_0 x_69 z_8 xs_3) (drop_0 x_69 (succ_0 z_8) (cons_0 z_9 xs_3)))))
(assert (forall ((z_8 Nat_0))
	(drop_0 nil_0 (succ_0 z_8) nil_0)))
(assert (forall ((x_72 list_0))
	(drop_0 x_72 zero_0 x_72)))
(assert (forall ((x_75 list_0) (x_76 list_0) (x_77 list_0) (x_78 list_0) (x_79 list_0) (x_73 Nat_0) (k_0 Nat_0) (x_16 Nat_0) (x_17 list_0) (y_12 Nat_0))
	(=> (and (take_0 x_76 k_0 (cons_0 y_12 (cons_0 x_16 x_17))) (msorttd_0 x_77 x_76) (drop_0 x_78 k_0 (cons_0 y_12 (cons_0 x_16 x_17))) (msorttd_0 x_79 x_78) (lmerge_0 x_75 x_77 x_79) (length_0 x_73 (cons_0 y_12 (cons_0 x_16 x_17))) (idiv_0 k_0 x_73 (succ_0 (succ_0 zero_0)))) (msorttd_0 x_75 (cons_0 y_12 (cons_0 x_16 x_17))))))
(assert (forall ((y_12 Nat_0))
	(msorttd_0 (cons_0 y_12 nil_0) (cons_0 y_12 nil_0))))
(assert (msorttd_0 nil_0 nil_0))
(assert (forall ((x_83 Nat_0) (x_84 Nat_0) (x_85 Nat_0) (x_86 Nat_0) (x_18 Nat_0) (y_13 Nat_0) (z_11 Nat_0))
	(=> (and (diseqNat_0 x_84 x_86) (plus_0 x_83 y_13 z_11) (plus_0 x_84 x_18 x_83) (plus_0 x_85 x_18 y_13) (plus_0 x_86 x_85 z_11)) false)))
(assert (forall ((x_87 Nat_0) (x_88 Nat_0) (x_19 Nat_0) (y_14 Nat_0))
	(=> (and (diseqNat_0 x_87 x_88) (plus_0 x_87 x_19 y_14) (plus_0 x_88 y_14 x_19)) false)))
(assert (forall ((x_89 Nat_0) (x_20 Nat_0))
	(=> (and (diseqNat_0 x_89 x_20) (plus_0 x_89 x_20 zero_0)) false)))
(assert (forall ((x_90 Nat_0) (x_21 Nat_0))
	(=> (and (diseqNat_0 x_90 x_21) (plus_0 x_90 zero_0 x_21)) false)))
(assert (forall ((x_91 list_0) (x_92 list_0) (xs_4 list_0))
	(=> (and (diseqlist_0 x_91 x_92) (msorttd_0 x_91 xs_4) (isort_0 x_92 xs_4)) false)))
(check-sat)
(get-model)
