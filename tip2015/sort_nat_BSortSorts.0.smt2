(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_0 ) (S_0 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_95 Nat_1) (x_94 Nat_1))
	(=> (= x_95 (S_0 x_94))
	    (unS_1 x_94 x_95))))
(assert (isZ_0 Z_0))
(assert (forall ((x_96 Nat_1))
	(isS_0 (S_0 x_96))))
(assert (forall ((x_97 Nat_1))
	(diseqNat_0 Z_0 (S_0 x_97))))
(assert (forall ((x_98 Nat_1))
	(diseqNat_0 (S_0 x_98) Z_0)))
(assert (forall ((x_99 Nat_1) (x_100 Nat_1))
	(=> (diseqNat_0 x_99 x_100)
	    (diseqNat_0 (S_0 x_99) (S_0 x_100)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_11 Nat_1))
	(add_0 y_11 Z_0 y_11)))
(assert (forall ((x_92 Nat_1) (y_11 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_92 y_11)
	    (add_0 (S_0 r_0) (S_0 x_92) y_11))))
(assert (forall ((y_11 Nat_1))
	(minus_0 Z_0 Z_0 y_11)))
(assert (forall ((x_92 Nat_1) (y_11 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_92 y_11)
	    (minus_0 (S_0 r_0) (S_0 x_92) y_11))))
(assert (forall ((y_11 Nat_1))
	(le_0 Z_0 y_11)))
(assert (forall ((x_92 Nat_1) (y_11 Nat_1))
	(=> (le_0 x_92 y_11)
	    (le_0 (S_0 x_92) (S_0 y_11)))))
(assert (forall ((y_11 Nat_1))
	(ge_0 y_11 Z_0)))
(assert (forall ((x_92 Nat_1) (y_11 Nat_1))
	(=> (ge_0 x_92 y_11)
	    (ge_0 (S_0 x_92) (S_0 y_11)))))
(assert (forall ((y_11 Nat_1))
	(lt_0 Z_0 (S_0 y_11))))
(assert (forall ((x_92 Nat_1) (y_11 Nat_1))
	(=> (lt_0 x_92 y_11)
	    (lt_0 (S_0 x_92) (S_0 y_11)))))
(assert (forall ((y_11 Nat_1))
	(gt_0 (S_0 y_11) Z_0)))
(assert (forall ((x_92 Nat_1) (y_11 Nat_1))
	(=> (gt_0 x_92 y_11)
	    (gt_0 (S_0 x_92) (S_0 y_11)))))
(assert (forall ((y_11 Nat_1))
	(mult_0 Z_0 Z_0 y_11)))
(assert (forall ((x_92 Nat_1) (y_11 Nat_1) (r_0 Nat_1) (z_7 Nat_1))
	(=>	(and (mult_0 r_0 x_92 y_11)
			(add_0 z_7 r_0 y_11))
		(mult_0 z_7 (S_0 x_92) y_11))))
(assert (forall ((x_92 Nat_1) (y_11 Nat_1))
	(=> (lt_0 x_92 y_11)
	    (div_0 Z_0 x_92 y_11))))
(assert (forall ((x_92 Nat_1) (y_11 Nat_1) (r_0 Nat_1) (z_7 Nat_1))
	(=>	(and (ge_0 x_92 y_11)
			(minus_0 z_7 x_92 y_11)
			(div_0 r_0 z_7 y_11))
		(div_0 (S_0 r_0) x_92 y_11))))
(assert (forall ((x_92 Nat_1) (y_11 Nat_1))
	(=> (lt_0 x_92 y_11)
	    (mod_0 x_92 x_92 y_11))))
(assert (forall ((x_92 Nat_1) (y_11 Nat_1) (r_0 Nat_1) (z_7 Nat_1))
	(=>	(and (ge_0 x_92 y_11)
			(minus_0 z_7 x_92 y_11)
			(mod_0 r_0 z_7 y_11))
		(mod_0 r_0 x_92 y_11))))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_103 Nat_0) (x_102 Nat_0))
	(=> (= x_103 (succ_0 x_102))
	    (p_1 x_102 x_103))))
(assert (iszero_0 zero_0))
(assert (forall ((x_104 Nat_0))
	(issucc_0 (succ_0 x_104))))
(assert (forall ((x_105 Nat_0))
	(diseqNat_1 zero_0 (succ_0 x_105))))
(assert (forall ((x_106 Nat_0))
	(diseqNat_1 (succ_0 x_106) zero_0)))
(assert (forall ((x_107 Nat_0) (x_108 Nat_0))
	(=> (diseqNat_1 x_107 x_108)
	    (diseqNat_1 (succ_0 x_107) (succ_0 x_108)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_112 list_0) (x_110 Nat_0) (x_111 list_0))
	(=> (= x_112 (cons_0 x_110 x_111))
	    (head_1 x_110 x_112))))
(assert (forall ((x_112 list_0) (x_110 Nat_0) (x_111 list_0))
	(=> (= x_112 (cons_0 x_110 x_111))
	    (tail_1 x_111 x_112))))
(assert (isnil_0 nil_0))
(assert (forall ((x_113 Nat_0) (x_114 list_0))
	(iscons_0 (cons_0 x_113 x_114))))
(assert (forall ((x_115 Nat_0) (x_116 list_0))
	(diseqlist_0 nil_0 (cons_0 x_115 x_116))))
(assert (forall ((x_117 Nat_0) (x_118 list_0))
	(diseqlist_0 (cons_0 x_117 x_118) nil_0)))
(assert (forall ((x_119 Nat_0) (x_120 list_0) (x_121 Nat_0) (x_122 list_0))
	(=> (diseqNat_1 x_119 x_121)
	    (diseqlist_0 (cons_0 x_119 x_120) (cons_0 x_121 x_122)))))
(assert (forall ((x_119 Nat_0) (x_120 list_0) (x_121 Nat_0) (x_122 list_0))
	(=> (diseqlist_0 x_120 x_122)
	    (diseqlist_0 (cons_0 x_119 x_120) (cons_0 x_121 x_122)))))
(declare-fun leq_0 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_1 Nat_0) (x_24 Bool) (x_25 Bool))
	(=>	(and (= x_24 x_25)
			(leq_0 x_25 z_0 x_1)
			(= x_0 (succ_0 z_0))
			(= y_0 (succ_0 x_1)))
		(leq_0 x_24 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_26 Bool))
	(=>	(and (= x_26 false)
			(= x_0 (succ_0 z_0))
			(= y_0 zero_0))
		(leq_0 x_26 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_27 Bool))
	(=>	(and (= x_27 true)
			(= x_0 zero_0))
		(leq_0 x_27 x_0 y_0))))
(declare-fun ordered_0 (Bool list_0) Bool)
(assert (forall ((x_2 list_0) (y_1 Nat_0) (z_1 list_0) (y_2 Nat_0) (xs_0 list_0) (x_28 Bool) (x_29 Bool) (x_30 Bool))
	(=>	(and (= x_28 (and x_29 x_30))
			(leq_0 x_29 y_1 y_2)
			(ordered_0 x_30 (cons_0 y_2 xs_0))
			(= x_2 (cons_0 y_1 z_1))
			(= z_1 (cons_0 y_2 xs_0)))
		(ordered_0 x_28 x_2))))
(assert (forall ((x_2 list_0) (y_1 Nat_0) (z_1 list_0) (x_31 Bool))
	(=>	(and (= x_31 true)
			(= x_2 (cons_0 y_1 z_1))
			(= z_1 nil_0))
		(ordered_0 x_31 x_2))))
(assert (forall ((x_2 list_0) (x_32 Bool))
	(=>	(and (= x_32 true)
			(= x_2 nil_0))
		(ordered_0 x_32 x_2))))
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_3 Nat_0) (y_3 Nat_0) (x_34 list_0) (x_33 Bool))
	(=>	(and (= x_34 (cons_0 x_3 (cons_0 y_3 nil_0)))
			(= x_33 true)
			(leq_0 x_33 x_3 y_3))
		(sort_0 x_34 x_3 y_3))))
(assert (forall ((x_3 Nat_0) (y_3 Nat_0) (x_36 list_0) (x_35 Bool))
	(=>	(and (= x_36 (cons_0 y_3 (cons_0 x_3 nil_0)))
			(= x_35 false)
			(leq_0 x_35 x_3 y_3))
		(sort_0 x_36 x_3 y_3))))
(declare-fun evens_0 (list_0 list_0) Bool)
(declare-fun odds_0 (list_0 list_0) Bool)
(assert (forall ((x_4 list_0) (y_4 Nat_0) (xs_1 list_0) (x_37 list_0) (x_38 list_0))
	(=>	(and (= x_37 (cons_0 y_4 x_38))
			(odds_0 x_38 xs_1)
			(= x_4 (cons_0 y_4 xs_1)))
		(evens_0 x_37 x_4))))
(assert (forall ((x_4 list_0) (x_39 list_0))
	(=>	(and (= x_39 nil_0)
			(= x_4 nil_0))
		(evens_0 x_39 x_4))))
(assert (forall ((x_5 list_0) (y_5 Nat_0) (xs_2 list_0) (x_40 list_0) (x_41 list_0))
	(=>	(and (= x_40 x_41)
			(evens_0 x_41 xs_2)
			(= x_5 (cons_0 y_5 xs_2)))
		(odds_0 x_40 x_5))))
(assert (forall ((x_5 list_0) (x_42 list_0))
	(=>	(and (= x_42 nil_0)
			(= x_5 nil_0))
		(odds_0 x_42 x_5))))
(declare-fun x_6 (list_0 list_0 list_0) Bool)
(assert (forall ((x_7 list_0) (y_6 list_0) (z_2 Nat_0) (xs_3 list_0) (x_43 list_0) (x_44 list_0))
	(=>	(and (= x_43 (cons_0 z_2 x_44))
			(x_6 x_44 xs_3 y_6)
			(= x_7 (cons_0 z_2 xs_3)))
		(x_6 x_43 x_7 y_6))))
(assert (forall ((x_7 list_0) (y_6 list_0) (x_45 list_0))
	(=>	(and (= x_45 y_6)
			(= x_7 nil_0))
		(x_6 x_45 x_7 y_6))))
(declare-fun pairs_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_8 list_0) (y_7 list_0) (z_3 Nat_0) (x_9 list_0) (x_10 Nat_0) (x_11 list_0) (x_46 list_0) (x_47 list_0) (x_48 list_0) (x_49 list_0))
	(=>	(and (= x_46 x_49)
			(sort_0 x_47 z_3 x_10)
			(pairs_0 x_48 x_9 x_11)
			(x_6 x_49 x_47 x_48)
			(= x_8 (cons_0 z_3 x_9))
			(= y_7 (cons_0 x_10 x_11)))
		(pairs_0 x_46 x_8 y_7))))
(assert (forall ((x_8 list_0) (y_7 list_0) (z_3 Nat_0) (x_9 list_0) (x_50 list_0))
	(=>	(and (= x_50 (cons_0 z_3 x_9))
			(= x_8 (cons_0 z_3 x_9))
			(= y_7 nil_0))
		(pairs_0 x_50 x_8 y_7))))
(assert (forall ((x_8 list_0) (y_7 list_0) (x_51 list_0))
	(=>	(and (= x_51 y_7)
			(= x_8 nil_0))
		(pairs_0 x_51 x_8 y_7))))
(declare-fun stitch_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_12 list_0) (y_8 list_0) (z_4 Nat_0) (xs_4 list_0) (x_52 list_0) (x_53 list_0))
	(=>	(and (= x_52 (cons_0 z_4 x_53))
			(pairs_0 x_53 xs_4 y_8)
			(= x_12 (cons_0 z_4 xs_4)))
		(stitch_0 x_52 x_12 y_8))))
(assert (forall ((x_12 list_0) (y_8 list_0) (x_54 list_0))
	(=>	(and (= x_54 y_8)
			(= x_12 nil_0))
		(stitch_0 x_54 x_12 y_8))))
(declare-fun bmerge_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_13 list_0) (y_9 list_0) (z_5 Nat_0) (x_14 list_0) (x_15 Nat_0) (x_16 list_0) (fail_0 list_0) (x_17 Nat_0) (x_18 list_0) (x_62 list_0) (x_55 list_0) (x_56 list_0) (x_57 list_0) (x_58 list_0) (x_59 list_0) (x_60 list_0) (x_61 list_0))
	(=>	(and (= x_62 fail_0)
			(= x_13 (cons_0 z_5 x_14))
			(= y_9 (cons_0 x_15 x_16))
			(= fail_0 x_61)
			(= x_14 (cons_0 x_17 x_18))
			(evens_0 x_55 (cons_0 z_5 x_14))
			(evens_0 x_56 (cons_0 x_15 x_16))
			(bmerge_0 x_57 x_55 x_56)
			(odds_0 x_58 (cons_0 z_5 x_14))
			(odds_0 x_59 (cons_0 x_15 x_16))
			(bmerge_0 x_60 x_58 x_59)
			(stitch_0 x_61 x_57 x_60))
		(bmerge_0 x_62 x_13 y_9))))
(assert (forall ((x_13 list_0) (y_9 list_0) (z_5 Nat_0) (x_14 list_0) (x_15 Nat_0) (x_16 list_0) (fail_0 list_0) (x_19 Nat_0) (x_20 list_0) (x_70 list_0) (x_63 list_0) (x_64 list_0) (x_65 list_0) (x_66 list_0) (x_67 list_0) (x_68 list_0) (x_69 list_0))
	(=>	(and (= x_70 fail_0)
			(= x_13 (cons_0 z_5 x_14))
			(= y_9 (cons_0 x_15 x_16))
			(= fail_0 x_69)
			(= x_14 nil_0)
			(= x_16 (cons_0 x_19 x_20))
			(evens_0 x_63 (cons_0 z_5 x_14))
			(evens_0 x_64 (cons_0 x_15 x_16))
			(bmerge_0 x_65 x_63 x_64)
			(odds_0 x_66 (cons_0 z_5 x_14))
			(odds_0 x_67 (cons_0 x_15 x_16))
			(bmerge_0 x_68 x_66 x_67)
			(stitch_0 x_69 x_65 x_68))
		(bmerge_0 x_70 x_13 y_9))))
(assert (forall ((x_13 list_0) (y_9 list_0) (z_5 Nat_0) (x_14 list_0) (x_15 Nat_0) (x_16 list_0) (fail_0 list_0) (x_78 list_0) (x_79 list_0) (x_71 list_0) (x_72 list_0) (x_73 list_0) (x_74 list_0) (x_75 list_0) (x_76 list_0) (x_77 list_0))
	(=>	(and (= x_78 x_79)
			(sort_0 x_79 z_5 x_15)
			(= x_13 (cons_0 z_5 x_14))
			(= y_9 (cons_0 x_15 x_16))
			(= fail_0 x_77)
			(= x_14 nil_0)
			(= x_16 nil_0)
			(evens_0 x_71 (cons_0 z_5 x_14))
			(evens_0 x_72 (cons_0 x_15 x_16))
			(bmerge_0 x_73 x_71 x_72)
			(odds_0 x_74 (cons_0 z_5 x_14))
			(odds_0 x_75 (cons_0 x_15 x_16))
			(bmerge_0 x_76 x_74 x_75)
			(stitch_0 x_77 x_73 x_76))
		(bmerge_0 x_78 x_13 y_9))))
(assert (forall ((x_13 list_0) (y_9 list_0) (z_5 Nat_0) (x_14 list_0) (x_80 list_0))
	(=>	(and (= x_80 (cons_0 z_5 x_14))
			(= x_13 (cons_0 z_5 x_14))
			(= y_9 nil_0))
		(bmerge_0 x_80 x_13 y_9))))
(assert (forall ((x_13 list_0) (y_9 list_0) (x_81 list_0))
	(=>	(and (= x_81 nil_0)
			(= x_13 nil_0))
		(bmerge_0 x_81 x_13 y_9))))
(declare-fun bsort_0 (list_0 list_0) Bool)
(assert (forall ((x_21 list_0) (y_10 Nat_0) (z_6 list_0) (x_22 Nat_0) (x_23 list_0) (x_82 list_0) (x_83 list_0) (x_84 list_0) (x_85 list_0) (x_86 list_0) (x_87 list_0))
	(=>	(and (= x_82 x_87)
			(evens_0 x_83 (cons_0 y_10 (cons_0 x_22 x_23)))
			(bsort_0 x_84 x_83)
			(odds_0 x_85 (cons_0 y_10 (cons_0 x_22 x_23)))
			(bsort_0 x_86 x_85)
			(bmerge_0 x_87 x_84 x_86)
			(= x_21 (cons_0 y_10 z_6))
			(= z_6 (cons_0 x_22 x_23)))
		(bsort_0 x_82 x_21))))
(assert (forall ((x_21 list_0) (y_10 Nat_0) (z_6 list_0) (x_88 list_0))
	(=>	(and (= x_88 (cons_0 y_10 nil_0))
			(= x_21 (cons_0 y_10 z_6))
			(= z_6 nil_0))
		(bsort_0 x_88 x_21))))
(assert (forall ((x_21 list_0) (x_89 list_0))
	(=>	(and (= x_89 nil_0)
			(= x_21 nil_0))
		(bsort_0 x_89 x_21))))
(assert (forall ((xs_5 list_0) (x_90 list_0) (x_91 Bool))
	(=>	(and (= x_91 false)
			(bsort_0 x_90 xs_5)
			(ordered_0 x_91 x_90))
		false)))
(check-sat)
