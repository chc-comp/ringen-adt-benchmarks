(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_5 ) (Z_6 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(declare-fun lmerge_0 (list_0 list_0 list_0) Bool)
(declare-fun length_0 (Nat_0 list_0) Bool)
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(declare-fun isort_0 (list_0 list_0) Bool)
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(declare-fun msorttd_0 (list_0 list_0) Bool)
(assert (forall ((x_59 Nat_0))
	(diseqNat_0 Z_5 (Z_6 x_59))))
(assert (forall ((x_60 Nat_0))
	(diseqNat_0 (Z_6 x_60) Z_5)))
(assert (forall ((x_61 Nat_0) (x_62 Nat_0))
	(=> (diseqNat_0 x_61 x_62) (diseqNat_0 (Z_6 x_61) (Z_6 x_62)))))
(assert (forall ((y_7 Nat_0))
	(add_0 y_7 Z_5 y_7)))
(assert (forall ((r_0 Nat_0) (x_50 Nat_0) (y_7 Nat_0))
	(=> (add_0 r_0 x_50 y_7) (add_0 (Z_6 r_0) (Z_6 x_50) y_7))))
(assert (forall ((y_7 Nat_0))
	(minus_0 Z_5 Z_5 y_7)))
(assert (forall ((r_0 Nat_0) (x_50 Nat_0) (y_7 Nat_0))
	(=> (minus_0 r_0 x_50 y_7) (minus_0 (Z_6 r_0) (Z_6 x_50) y_7))))
(assert (forall ((y_7 Nat_0))
	(le_0 Z_5 y_7)))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0))
	(=> (le_0 x_50 y_7) (le_0 (Z_6 x_50) (Z_6 y_7)))))
(assert (forall ((y_7 Nat_0))
	(ge_0 y_7 Z_5)))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0))
	(=> (ge_0 x_50 y_7) (ge_0 (Z_6 x_50) (Z_6 y_7)))))
(assert (forall ((y_7 Nat_0))
	(lt_0 Z_5 (Z_6 y_7))))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0))
	(=> (lt_0 x_50 y_7) (lt_0 (Z_6 x_50) (Z_6 y_7)))))
(assert (forall ((y_7 Nat_0))
	(gt_0 (Z_6 y_7) Z_5)))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0))
	(=> (gt_0 x_50 y_7) (gt_0 (Z_6 x_50) (Z_6 y_7)))))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0))
	(=> (lt_0 x_50 y_7) (div_0 Z_5 x_50 y_7))))
(assert (forall ((r_0 Nat_0) (x_50 Nat_0) (y_7 Nat_0) (z_7 Nat_0))
	(=> (and (ge_0 x_50 y_7) (minus_0 z_7 x_50 y_7) (div_0 r_0 z_7 y_7)) (div_0 (Z_6 r_0) x_50 y_7))))
(assert (forall ((x_69 Nat_0) (x_70 list_0))
	(diseqlist_0 nil_0 (cons_0 x_69 x_70))))
(assert (forall ((x_71 Nat_0) (x_72 list_0))
	(diseqlist_0 (cons_0 x_71 x_72) nil_0)))
(assert (forall ((x_73 Nat_0) (x_74 list_0) (x_75 Nat_0) (x_76 list_0))
	(=> (diseqNat_0 x_73 x_75) (diseqlist_0 (cons_0 x_73 x_74) (cons_0 x_75 x_76)))))
(assert (forall ((x_73 Nat_0) (x_74 list_0) (x_75 Nat_0) (x_76 list_0))
	(=> (diseqlist_0 x_74 x_76) (diseqlist_0 (cons_0 x_73 x_74) (cons_0 x_75 x_76)))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_5) (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_51 Nat_0) (x_14 list_0) (z_0 Nat_0) (xs_0 list_0) (x_0 Nat_0))
	(=> (and (gt_0 x_0 Z_5) (take_0 x_14 x_51 xs_0) (minus_0 x_51 x_0 (Z_6 Z_5))) (take_0 (cons_0 z_0 x_14) x_0 (cons_0 z_0 xs_0)))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_5) (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_0 Nat_0))
	(=> (gt_0 x_0 Z_5) (take_0 nil_0 x_0 nil_0))))
(assert (forall ((x_18 list_0) (x_3 Nat_0) (x_4 list_0) (z_1 Nat_0) (x_2 list_0))
	(=> (and (le_0 z_1 x_3) (lmerge_0 x_18 x_2 (cons_0 x_3 x_4))) (lmerge_0 (cons_0 z_1 x_18) (cons_0 z_1 x_2) (cons_0 x_3 x_4)))))
(assert (forall ((x_20 list_0) (x_3 Nat_0) (x_4 list_0) (z_1 Nat_0) (x_2 list_0))
	(=> (and (gt_0 z_1 x_3) (lmerge_0 x_20 (cons_0 z_1 x_2) x_4)) (lmerge_0 (cons_0 x_3 x_20) (cons_0 z_1 x_2) (cons_0 x_3 x_4)))))
(assert (forall ((z_1 Nat_0) (x_2 list_0))
	(lmerge_0 (cons_0 z_1 x_2) (cons_0 z_1 x_2) nil_0)))
(assert (forall ((x_22 list_0))
	(lmerge_0 x_22 nil_0 x_22)))
(assert (forall ((x_23 Nat_0) (x_24 Nat_0) (y_2 Nat_0) (l_0 list_0))
	(=> (and (length_0 x_24 l_0) (add_0 x_23 (Z_6 Z_5) x_24)) (length_0 x_23 (cons_0 y_2 l_0)))))
(assert (length_0 Z_5 nil_0))
(assert (forall ((z_2 Nat_0) (xs_1 list_0) (x_6 Nat_0))
	(=> (le_0 x_6 z_2) (insert_0 (cons_0 x_6 (cons_0 z_2 xs_1)) x_6 (cons_0 z_2 xs_1)))))
(assert (forall ((x_28 list_0) (z_2 Nat_0) (xs_1 list_0) (x_6 Nat_0))
	(=> (and (gt_0 x_6 z_2) (insert_0 x_28 x_6 xs_1)) (insert_0 (cons_0 z_2 x_28) x_6 (cons_0 z_2 xs_1)))))
(assert (forall ((x_6 Nat_0))
	(insert_0 (cons_0 x_6 nil_0) x_6 nil_0)))
(assert (forall ((x_30 list_0) (x_31 list_0) (y_4 Nat_0) (xs_2 list_0))
	(=> (and (isort_0 x_31 xs_2) (insert_0 x_30 y_4 x_31)) (isort_0 x_30 (cons_0 y_4 xs_2)))))
(assert (isort_0 nil_0 nil_0))
(assert (forall ((x_34 list_0) (x_8 Nat_0))
	(=> (le_0 x_8 Z_5) (drop_0 x_34 x_8 x_34))))
(assert (forall ((x_53 Nat_0) (x_35 list_0) (z_3 Nat_0) (xs_3 list_0) (x_8 Nat_0))
	(=> (and (gt_0 x_8 Z_5) (drop_0 x_35 x_53 xs_3) (minus_0 x_53 x_8 (Z_6 Z_5))) (drop_0 x_35 x_8 (cons_0 z_3 xs_3)))))
(assert (forall ((x_37 list_0) (x_8 Nat_0))
	(=> (le_0 x_8 Z_5) (drop_0 x_37 x_8 x_37))))
(assert (forall ((x_8 Nat_0))
	(=> (gt_0 x_8 Z_5) (drop_0 nil_0 x_8 nil_0))))
(assert (forall ((x_40 list_0) (x_41 list_0) (x_42 list_0) (x_43 list_0) (x_44 list_0) (x_39 Nat_0) (k_0 Nat_0) (x_10 Nat_0) (x_11 list_0) (y_6 Nat_0))
	(=> (and (take_0 x_41 k_0 (cons_0 y_6 (cons_0 x_10 x_11))) (msorttd_0 x_42 x_41) (drop_0 x_43 k_0 (cons_0 y_6 (cons_0 x_10 x_11))) (msorttd_0 x_44 x_43) (lmerge_0 x_40 x_42 x_44) (length_0 x_39 (cons_0 y_6 (cons_0 x_10 x_11))) (div_0 k_0 x_39 (Z_6 (Z_6 Z_5)))) (msorttd_0 x_40 (cons_0 y_6 (cons_0 x_10 x_11))))))
(assert (forall ((y_6 Nat_0))
	(msorttd_0 (cons_0 y_6 nil_0) (cons_0 y_6 nil_0))))
(assert (msorttd_0 nil_0 nil_0))
(assert (forall ((x_48 list_0) (x_49 list_0) (xs_4 list_0))
	(=> (and (diseqlist_0 x_48 x_49) (msorttd_0 x_48 xs_4) (isort_0 x_49 xs_4)) false)))
(check-sat)
(get-model)
