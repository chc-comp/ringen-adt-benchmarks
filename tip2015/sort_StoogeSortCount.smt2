(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_5 ) (Z_6 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 list_0) (projpair_1 list_0)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(declare-fun length_0 (Nat_0 list_0) Bool)
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(declare-fun splitAt_0 (pair_0 Nat_0 list_0) Bool)
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(declare-fun x_6 (list_0 list_0 list_0) Bool)
(declare-fun reverse_0 (list_0 list_0) Bool)
(declare-fun stoogesort_0 (list_0 list_0) Bool)
(declare-fun stoogesort_1 (list_0 list_0) Bool)
(declare-fun stoogesort_2 (list_0 list_0) Bool)
(assert (forall ((x_83 Nat_0))
	(diseqNat_0 Z_5 (Z_6 x_83))))
(assert (forall ((x_84 Nat_0))
	(diseqNat_0 (Z_6 x_84) Z_5)))
(assert (forall ((x_85 Nat_0) (x_86 Nat_0))
	(=> (diseqNat_0 x_85 x_86) (diseqNat_0 (Z_6 x_85) (Z_6 x_86)))))
(assert (forall ((y_10 Nat_0))
	(add_0 y_10 Z_5 y_10)))
(assert (forall ((r_0 Nat_0) (x_72 Nat_0) (y_10 Nat_0))
	(=> (add_0 r_0 x_72 y_10) (add_0 (Z_6 r_0) (Z_6 x_72) y_10))))
(assert (forall ((y_10 Nat_0))
	(minus_0 Z_5 Z_5 y_10)))
(assert (forall ((r_0 Nat_0) (x_72 Nat_0) (y_10 Nat_0))
	(=> (minus_0 r_0 x_72 y_10) (minus_0 (Z_6 r_0) (Z_6 x_72) y_10))))
(assert (forall ((y_10 Nat_0))
	(le_0 Z_5 y_10)))
(assert (forall ((x_72 Nat_0) (y_10 Nat_0))
	(=> (le_0 x_72 y_10) (le_0 (Z_6 x_72) (Z_6 y_10)))))
(assert (forall ((y_10 Nat_0))
	(ge_0 y_10 Z_5)))
(assert (forall ((x_72 Nat_0) (y_10 Nat_0))
	(=> (ge_0 x_72 y_10) (ge_0 (Z_6 x_72) (Z_6 y_10)))))
(assert (forall ((y_10 Nat_0))
	(lt_0 Z_5 (Z_6 y_10))))
(assert (forall ((x_72 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_72 y_10) (lt_0 (Z_6 x_72) (Z_6 y_10)))))
(assert (forall ((y_10 Nat_0))
	(gt_0 (Z_6 y_10) Z_5)))
(assert (forall ((x_72 Nat_0) (y_10 Nat_0))
	(=> (gt_0 x_72 y_10) (gt_0 (Z_6 x_72) (Z_6 y_10)))))
(assert (forall ((x_72 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_72 y_10) (div_0 Z_5 x_72 y_10))))
(assert (forall ((r_0 Nat_0) (x_72 Nat_0) (y_10 Nat_0) (z_7 Nat_0))
	(=> (and (ge_0 x_72 y_10) (minus_0 z_7 x_72 y_10) (div_0 r_0 z_7 y_10)) (div_0 (Z_6 r_0) x_72 y_10))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_5) (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_73 Nat_0) (x_21 list_0) (z_0 Nat_0) (xs_0 list_0) (x_0 Nat_0))
	(=> (and (gt_0 x_0 Z_5) (take_0 x_21 x_73 xs_0) (minus_0 x_73 x_0 (Z_6 Z_5))) (take_0 (cons_0 z_0 x_21) x_0 (cons_0 z_0 xs_0)))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_5) (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_0 Nat_0))
	(=> (gt_0 x_0 Z_5) (take_0 nil_0 x_0 nil_0))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0))
	(=> (le_0 x_1 y_1) (sort_0 (cons_0 x_1 (cons_0 y_1 nil_0)) x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0))
	(=> (gt_0 x_1 y_1) (sort_0 (cons_0 y_1 (cons_0 x_1 nil_0)) x_1 y_1))))
(assert (forall ((x_26 Nat_0) (x_27 Nat_0) (y_2 Nat_0) (l_0 list_0))
	(=> (and (length_0 x_27 l_0) (add_0 x_26 (Z_6 Z_5) x_27)) (length_0 x_26 (cons_0 y_2 l_0)))))
(assert (length_0 Z_5 nil_0))
(assert (forall ((x_29 list_0) (x_3 Nat_0))
	(=> (le_0 x_3 Z_5) (drop_0 x_29 x_3 x_29))))
(assert (forall ((x_75 Nat_0) (x_30 list_0) (z_1 Nat_0) (xs_1 list_0) (x_3 Nat_0))
	(=> (and (gt_0 x_3 Z_5) (drop_0 x_30 x_75 xs_1) (minus_0 x_75 x_3 (Z_6 Z_5))) (drop_0 x_30 x_3 (cons_0 z_1 xs_1)))))
(assert (forall ((x_32 list_0) (x_3 Nat_0))
	(=> (le_0 x_3 Z_5) (drop_0 x_32 x_3 x_32))))
(assert (forall ((x_3 Nat_0))
	(=> (gt_0 x_3 Z_5) (drop_0 nil_0 x_3 nil_0))))
(assert (forall ((x_35 list_0) (x_36 list_0) (x_4 Nat_0) (y_4 list_0))
	(=> (and (take_0 x_35 x_4 y_4) (drop_0 x_36 x_4 y_4)) (splitAt_0 (pair_1 x_35 x_36) x_4 y_4))))
(assert (forall ((x_37 Nat_0) (x_38 Nat_0) (ys_0 list_0) (x_5 Nat_0))
	(=> (and (count_0 x_38 x_5 ys_0) (add_0 x_37 (Z_6 Z_5) x_38)) (count_0 x_37 x_5 (cons_0 x_5 ys_0)))))
(assert (forall ((x_39 Nat_0) (z_2 Nat_0) (ys_0 list_0) (x_5 Nat_0))
	(=> (and (diseqNat_0 x_5 z_2) (count_0 x_39 x_5 ys_0)) (count_0 x_39 x_5 (cons_0 z_2 ys_0)))))
(assert (forall ((x_5 Nat_0))
	(count_0 Z_5 x_5 nil_0)))
(assert (forall ((x_43 list_0) (z_3 Nat_0) (xs_2 list_0) (y_6 list_0))
	(=> (x_6 x_43 xs_2 y_6) (x_6 (cons_0 z_3 x_43) (cons_0 z_3 xs_2) y_6))))
(assert (forall ((x_44 list_0))
	(x_6 x_44 nil_0 x_44)))
(assert (forall ((x_45 list_0) (x_46 list_0) (y_7 Nat_0) (xs_3 list_0))
	(=> (and (reverse_0 x_46 xs_3) (x_6 x_45 x_46 (cons_0 y_7 nil_0))) (reverse_0 x_45 (cons_0 y_7 xs_3)))))
(assert (reverse_0 nil_0 nil_0))
(assert (forall ((x_77 Nat_0) (x_52 list_0) (x_53 list_0) (x_54 list_0) (x_49 Nat_0) (x_50 list_0) (ys_1 list_0) (zs_0 list_0) (x_12 list_0))
	(=> (and (stoogesort_1 x_53 zs_0) (reverse_0 x_54 ys_1) (x_6 x_52 x_53 x_54) (length_0 x_49 x_12) (reverse_0 x_50 x_12) (splitAt_0 (pair_1 ys_1 zs_0) x_77 x_50) (div_0 x_77 x_49 (Z_6 (Z_6 (Z_6 Z_5))))) (stoogesort_0 x_52 x_12))))
(assert (forall ((x_56 list_0) (x_57 list_0) (x_58 list_0) (x_15 Nat_0) (x_16 list_0) (y_9 Nat_0) (y_8 Nat_0))
	(=> (and (stoogesort_0 x_57 (cons_0 y_8 (cons_0 y_9 (cons_0 x_15 x_16)))) (stoogesort_2 x_58 x_57) (stoogesort_0 x_56 x_58)) (stoogesort_1 x_56 (cons_0 y_8 (cons_0 y_9 (cons_0 x_15 x_16)))))))
(assert (forall ((x_60 list_0) (y_9 Nat_0) (y_8 Nat_0))
	(=> (sort_0 x_60 y_8 y_9) (stoogesort_1 x_60 (cons_0 y_8 (cons_0 y_9 nil_0))))))
(assert (forall ((y_8 Nat_0))
	(stoogesort_1 (cons_0 y_8 nil_0) (cons_0 y_8 nil_0))))
(assert (stoogesort_1 nil_0 nil_0))
(assert (forall ((x_78 Nat_0) (x_66 list_0) (x_67 list_0) (x_64 Nat_0) (ys_2 list_0) (zs_1 list_0) (x_17 list_0))
	(=> (and (stoogesort_1 x_67 zs_1) (x_6 x_66 ys_2 x_67) (length_0 x_64 x_17) (splitAt_0 (pair_1 ys_2 zs_1) x_78 x_17) (div_0 x_78 x_64 (Z_6 (Z_6 (Z_6 Z_5))))) (stoogesort_2 x_66 x_17))))
(assert (forall ((x_69 list_0) (x_70 Nat_0) (x_71 Nat_0) (x_18 Nat_0) (xs_4 list_0))
	(=> (and (diseqNat_0 x_70 x_71) (stoogesort_1 x_69 xs_4) (count_0 x_70 x_18 x_69) (count_0 x_71 x_18 xs_4)) false)))
(check-sat)
(get-model)
