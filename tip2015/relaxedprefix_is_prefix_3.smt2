(set-logic HORN)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-datatypes ((It_0 0)) (((A_0 ) (B_0 ) (C_0 ))))
(declare-fun diseqIt_0 (It_0 It_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 It_0) (tail_0 list_0)))))
(declare-fun isPrefix_0 (Bool_0 list_0 list_0) Bool)
(declare-fun isRelaxedPrefix_0 (Bool_0 list_0 list_0) Bool)
(declare-fun x_10 (list_0 list_0 list_0) Bool)
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(assert (diseqIt_0 A_0 B_0))
(assert (diseqIt_0 A_0 C_0))
(assert (diseqIt_0 B_0 A_0))
(assert (diseqIt_0 C_0 A_0))
(assert (diseqIt_0 B_0 C_0))
(assert (diseqIt_0 C_0 B_0))
(assert (forall ((x_13 Bool_0) (x_2 It_0) (x_3 list_0) (x_1 list_0))
	(=> (isPrefix_0 x_13 x_1 x_3) (isPrefix_0 x_13 (cons_0 x_2 x_1) (cons_0 x_2 x_3)))))
(assert (forall ((x_2 It_0) (x_3 list_0) (z_0 It_0) (x_1 list_0))
	(=> (diseqIt_0 z_0 x_2) (isPrefix_0 false_0 (cons_0 z_0 x_1) (cons_0 x_2 x_3)))))
(assert (forall ((z_0 It_0) (x_1 list_0))
	(isPrefix_0 false_0 (cons_0 z_0 x_1) nil_0)))
(assert (forall ((y_0 list_0))
	(isPrefix_0 true_0 nil_0 y_0)))
(assert (forall ((x_18 Bool_0) (x_8 It_0) (x_9 list_0) (x_6 It_0) (x_7 list_0))
	(=> (isRelaxedPrefix_0 x_18 (cons_0 x_6 x_7) x_9) (isRelaxedPrefix_0 x_18 (cons_0 x_8 (cons_0 x_6 x_7)) (cons_0 x_8 x_9)))))
(assert (forall ((x_20 Bool_0) (x_8 It_0) (x_9 list_0) (x_6 It_0) (x_7 list_0) (z_1 It_0))
	(=> (and (diseqIt_0 z_1 x_8) (isPrefix_0 x_20 (cons_0 x_6 x_7) (cons_0 x_8 x_9))) (isRelaxedPrefix_0 x_20 (cons_0 z_1 (cons_0 x_6 x_7)) (cons_0 x_8 x_9)))))
(assert (forall ((x_6 It_0) (x_7 list_0) (z_1 It_0))
	(isRelaxedPrefix_0 false_0 (cons_0 z_1 (cons_0 x_6 x_7)) nil_0)))
(assert (forall ((z_1 It_0) (y_1 list_0))
	(isRelaxedPrefix_0 true_0 (cons_0 z_1 nil_0) y_1)))
(assert (forall ((y_1 list_0))
	(isRelaxedPrefix_0 true_0 nil_0 y_1)))
(assert (forall ((x_26 list_0) (z_2 It_0) (xs_0 list_0) (y_2 list_0))
	(=> (x_10 x_26 xs_0 y_2) (x_10 (cons_0 z_2 x_26) (cons_0 z_2 xs_0) y_2))))
(assert (forall ((x_27 list_0))
	(x_10 x_27 nil_0 x_27)))
(assert (forall ((x_28 list_0) (x_29 list_0) (x_30 Bool_0) (x_12 It_0) (xs_1 list_0) (ys_0 list_0))
	(=> (and (diseqBool_0 x_30 true_0) (x_10 x_28 xs_1 (cons_0 x_12 nil_0)) (x_10 x_29 xs_1 ys_0) (isRelaxedPrefix_0 x_30 x_28 x_29)) false)))
(check-sat)
(get-model)
