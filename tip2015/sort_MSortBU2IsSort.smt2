(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_4 ) (Z_5 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 list_0) (tail_1 list_1)))))
(declare-fun risers_0 (list_1 list_0) Bool)
(declare-fun lmerge_0 (list_0 list_0 list_0) Bool)
(declare-fun pairwise_0 (list_1 list_1) Bool)
(declare-fun mergingbu_0 (list_0 list_1) Bool)
(declare-fun msortbu_0 (list_0 list_0) Bool)
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_55 Nat_0))
	(diseqNat_0 Z_4 (Z_5 x_55))))
(assert (forall ((x_56 Nat_0))
	(diseqNat_0 (Z_5 x_56) Z_4)))
(assert (forall ((x_57 Nat_0) (x_58 Nat_0))
	(=> (diseqNat_0 x_57 x_58) (diseqNat_0 (Z_5 x_57) (Z_5 x_58)))))
(assert (forall ((y_7 Nat_0))
	(le_0 Z_4 y_7)))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0))
	(=> (le_0 x_50 y_7) (le_0 (Z_5 x_50) (Z_5 y_7)))))
(assert (forall ((y_7 Nat_0))
	(gt_0 (Z_5 y_7) Z_4)))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0))
	(=> (gt_0 x_50 y_7) (gt_0 (Z_5 x_50) (Z_5 y_7)))))
(assert (forall ((x_65 Nat_0) (x_66 list_0))
	(diseqlist_0 nil_0 (cons_0 x_65 x_66))))
(assert (forall ((x_67 Nat_0) (x_68 list_0))
	(diseqlist_0 (cons_0 x_67 x_68) nil_0)))
(assert (forall ((x_69 Nat_0) (x_70 list_0) (x_71 Nat_0) (x_72 list_0))
	(=> (diseqNat_0 x_69 x_71) (diseqlist_0 (cons_0 x_69 x_70) (cons_0 x_71 x_72)))))
(assert (forall ((x_69 Nat_0) (x_70 list_0) (x_71 Nat_0) (x_72 list_0))
	(=> (diseqlist_0 x_70 x_72) (diseqlist_0 (cons_0 x_69 x_70) (cons_0 x_71 x_72)))))
(assert (forall ((ys_0 list_0) (yss_0 list_1) (y_1 Nat_0) (xs_0 list_0) (y_0 Nat_0))
	(=> (and (le_0 y_0 y_1) (risers_0 (cons_1 ys_0 yss_0) (cons_0 y_1 xs_0))) (risers_0 (cons_1 (cons_0 y_0 ys_0) yss_0) (cons_0 y_0 (cons_0 y_1 xs_0))))))
(assert (forall ((x_14 list_1) (y_1 Nat_0) (xs_0 list_0) (y_0 Nat_0))
	(=> (and (gt_0 y_0 y_1) (risers_0 x_14 (cons_0 y_1 xs_0))) (risers_0 (cons_1 (cons_0 y_0 nil_0) x_14) (cons_0 y_0 (cons_0 y_1 xs_0))))))
(assert (forall ((y_1 Nat_0) (xs_0 list_0) (y_0 Nat_0))
	(=> (and (le_0 y_0 y_1) (risers_0 nil_1 (cons_0 y_1 xs_0))) (risers_0 nil_1 (cons_0 y_0 (cons_0 y_1 xs_0))))))
(assert (forall ((x_18 list_1) (y_1 Nat_0) (xs_0 list_0) (y_0 Nat_0))
	(=> (and (gt_0 y_0 y_1) (risers_0 x_18 (cons_0 y_1 xs_0))) (risers_0 (cons_1 (cons_0 y_0 nil_0) x_18) (cons_0 y_0 (cons_0 y_1 xs_0))))))
(assert (forall ((y_0 Nat_0))
	(risers_0 (cons_1 (cons_0 y_0 nil_0) nil_1) (cons_0 y_0 nil_0))))
(assert (risers_0 nil_1 nil_0))
(assert (forall ((x_22 list_0) (x_3 Nat_0) (x_4 list_0) (z_1 Nat_0) (x_2 list_0))
	(=> (and (le_0 z_1 x_3) (lmerge_0 x_22 x_2 (cons_0 x_3 x_4))) (lmerge_0 (cons_0 z_1 x_22) (cons_0 z_1 x_2) (cons_0 x_3 x_4)))))
(assert (forall ((x_24 list_0) (x_3 Nat_0) (x_4 list_0) (z_1 Nat_0) (x_2 list_0))
	(=> (and (gt_0 z_1 x_3) (lmerge_0 x_24 (cons_0 z_1 x_2) x_4)) (lmerge_0 (cons_0 x_3 x_24) (cons_0 z_1 x_2) (cons_0 x_3 x_4)))))
(assert (forall ((z_1 Nat_0) (x_2 list_0))
	(lmerge_0 (cons_0 z_1 x_2) (cons_0 z_1 x_2) nil_0)))
(assert (forall ((x_26 list_0))
	(lmerge_0 x_26 nil_0 x_26)))
(assert (forall ((x_28 list_0) (x_29 list_1) (ys_1 list_0) (xss_0 list_1) (xs_1 list_0))
	(=> (and (lmerge_0 x_28 xs_1 ys_1) (pairwise_0 x_29 xss_0)) (pairwise_0 (cons_1 x_28 x_29) (cons_1 xs_1 (cons_1 ys_1 xss_0))))))
(assert (forall ((xs_1 list_0))
	(pairwise_0 (cons_1 xs_1 nil_1) (cons_1 xs_1 nil_1))))
(assert (pairwise_0 nil_1 nil_1))
(assert (forall ((x_32 list_0) (x_33 list_1) (z_2 list_0) (x_7 list_1) (xs_2 list_0))
	(=> (and (pairwise_0 x_33 (cons_1 xs_2 (cons_1 z_2 x_7))) (mergingbu_0 x_32 x_33)) (mergingbu_0 x_32 (cons_1 xs_2 (cons_1 z_2 x_7))))))
(assert (forall ((x_35 list_0))
	(mergingbu_0 x_35 (cons_1 x_35 nil_1))))
(assert (mergingbu_0 nil_0 nil_1))
(assert (forall ((x_37 list_0) (x_38 list_1) (x_8 list_0))
	(=> (and (risers_0 x_38 x_8) (mergingbu_0 x_37 x_38)) (msortbu_0 x_37 x_8))))
(assert (forall ((z_3 Nat_0) (xs_3 list_0) (x_9 Nat_0))
	(=> (le_0 x_9 z_3) (insert_0 (cons_0 x_9 (cons_0 z_3 xs_3)) x_9 (cons_0 z_3 xs_3)))))
(assert (forall ((x_42 list_0) (z_3 Nat_0) (xs_3 list_0) (x_9 Nat_0))
	(=> (and (gt_0 x_9 z_3) (insert_0 x_42 x_9 xs_3)) (insert_0 (cons_0 z_3 x_42) x_9 (cons_0 z_3 xs_3)))))
(assert (forall ((x_9 Nat_0))
	(insert_0 (cons_0 x_9 nil_0) x_9 nil_0)))
(assert (forall ((x_44 list_0) (x_45 list_0) (y_6 Nat_0) (xs_4 list_0))
	(=> (and (isort_0 x_45 xs_4) (insert_0 x_44 y_6 x_45)) (isort_0 x_44 (cons_0 y_6 xs_4)))))
(assert (isort_0 nil_0 nil_0))
(assert (forall ((x_48 list_0) (x_49 list_0) (xs_5 list_0))
	(=> (and (diseqlist_0 x_48 x_49) (msortbu_0 x_48 xs_5) (isort_0 x_49 xs_5)) false)))
(check-sat)
(get-model)
