(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_52 Nat_0) (x_51 Nat_0))
	(=> (= x_52 (S_0 x_51))
	    (unS_1 x_51 x_52))))
(assert (isZ_0 Z_0))
(assert (forall ((x_53 Nat_0))
	(isS_0 (S_0 x_53))))
(assert (forall ((x_54 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_54))))
(assert (forall ((x_55 Nat_0))
	(diseqNat_0 (S_0 x_55) Z_0)))
(assert (forall ((x_56 Nat_0) (x_57 Nat_0))
	(=> (diseqNat_0 x_56 x_57)
	    (diseqNat_0 (S_0 x_56) (S_0 x_57)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_7 Nat_0))
	(add_0 y_7 Z_0 y_7)))
(assert (forall ((x_49 Nat_0) (y_7 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_49 y_7)
	    (add_0 (S_0 r_0) (S_0 x_49) y_7))))
(assert (forall ((y_7 Nat_0))
	(minus_0 Z_0 Z_0 y_7)))
(assert (forall ((x_49 Nat_0) (y_7 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_49 y_7)
	    (minus_0 (S_0 r_0) (S_0 x_49) y_7))))
(assert (forall ((y_7 Nat_0))
	(le_0 Z_0 y_7)))
(assert (forall ((x_49 Nat_0) (y_7 Nat_0))
	(=> (le_0 x_49 y_7)
	    (le_0 (S_0 x_49) (S_0 y_7)))))
(assert (forall ((y_7 Nat_0))
	(ge_0 y_7 Z_0)))
(assert (forall ((x_49 Nat_0) (y_7 Nat_0))
	(=> (ge_0 x_49 y_7)
	    (ge_0 (S_0 x_49) (S_0 y_7)))))
(assert (forall ((y_7 Nat_0))
	(lt_0 Z_0 (S_0 y_7))))
(assert (forall ((x_49 Nat_0) (y_7 Nat_0))
	(=> (lt_0 x_49 y_7)
	    (lt_0 (S_0 x_49) (S_0 y_7)))))
(assert (forall ((y_7 Nat_0))
	(gt_0 (S_0 y_7) Z_0)))
(assert (forall ((x_49 Nat_0) (y_7 Nat_0))
	(=> (gt_0 x_49 y_7)
	    (gt_0 (S_0 x_49) (S_0 y_7)))))
(assert (forall ((y_7 Nat_0))
	(mult_0 Z_0 Z_0 y_7)))
(assert (forall ((x_49 Nat_0) (y_7 Nat_0) (r_0 Nat_0) (z_4 Nat_0))
	(=>	(and (mult_0 r_0 x_49 y_7)
			(add_0 z_4 r_0 y_7))
		(mult_0 z_4 (S_0 x_49) y_7))))
(assert (forall ((x_49 Nat_0) (y_7 Nat_0))
	(=> (lt_0 x_49 y_7)
	    (div_0 Z_0 x_49 y_7))))
(assert (forall ((x_49 Nat_0) (y_7 Nat_0) (r_0 Nat_0) (z_4 Nat_0))
	(=>	(and (ge_0 x_49 y_7)
			(minus_0 z_4 x_49 y_7)
			(div_0 r_0 z_4 y_7))
		(div_0 (S_0 r_0) x_49 y_7))))
(assert (forall ((x_49 Nat_0) (y_7 Nat_0))
	(=> (lt_0 x_49 y_7)
	    (mod_0 x_49 x_49 y_7))))
(assert (forall ((x_49 Nat_0) (y_7 Nat_0) (r_0 Nat_0) (z_4 Nat_0))
	(=>	(and (ge_0 x_49 y_7)
			(minus_0 z_4 x_49 y_7)
			(mod_0 r_0 z_4 y_7))
		(mod_0 r_0 x_49 y_7))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_2 (Nat_0 list_0) Bool)
(declare-fun tail_2 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_61 list_0) (x_59 Nat_0) (x_60 list_0))
	(=> (= x_61 (cons_0 x_59 x_60))
	    (head_2 x_59 x_61))))
(assert (forall ((x_61 list_0) (x_59 Nat_0) (x_60 list_0))
	(=> (= x_61 (cons_0 x_59 x_60))
	    (tail_2 x_60 x_61))))
(assert (isnil_0 nil_0))
(assert (forall ((x_62 Nat_0) (x_63 list_0))
	(iscons_0 (cons_0 x_62 x_63))))
(assert (forall ((x_64 Nat_0) (x_65 list_0))
	(diseqlist_0 nil_0 (cons_0 x_64 x_65))))
(assert (forall ((x_66 Nat_0) (x_67 list_0))
	(diseqlist_0 (cons_0 x_66 x_67) nil_0)))
(assert (forall ((x_68 Nat_0) (x_69 list_0) (x_70 Nat_0) (x_71 list_0))
	(=> (diseqNat_0 x_68 x_70)
	    (diseqlist_0 (cons_0 x_68 x_69) (cons_0 x_70 x_71)))))
(assert (forall ((x_68 Nat_0) (x_69 list_0) (x_70 Nat_0) (x_71 list_0))
	(=> (diseqlist_0 x_69 x_71)
	    (diseqlist_0 (cons_0 x_68 x_69) (cons_0 x_70 x_71)))))
(declare-datatypes ((Heap_0 0)) (((Node_0 (projNode_0 Heap_0) (projNode_1 Nat_0) (projNode_2 Heap_0)) (Nil_0 ))))
(declare-fun diseqHeap_0 (Heap_0 Heap_0) Bool)
(declare-fun projNode_3 (Heap_0 Heap_0) Bool)
(declare-fun projNode_4 (Nat_0 Heap_0) Bool)
(declare-fun projNode_5 (Heap_0 Heap_0) Bool)
(declare-fun isNode_0 (Heap_0) Bool)
(declare-fun isNil_0 (Heap_0) Bool)
(assert (forall ((x_75 Heap_0) (x_72 Heap_0) (x_73 Nat_0) (x_74 Heap_0))
	(=> (= x_75 (Node_0 x_72 x_73 x_74))
	    (projNode_3 x_72 x_75))))
(assert (forall ((x_75 Heap_0) (x_72 Heap_0) (x_73 Nat_0) (x_74 Heap_0))
	(=> (= x_75 (Node_0 x_72 x_73 x_74))
	    (projNode_4 x_73 x_75))))
(assert (forall ((x_75 Heap_0) (x_72 Heap_0) (x_73 Nat_0) (x_74 Heap_0))
	(=> (= x_75 (Node_0 x_72 x_73 x_74))
	    (projNode_5 x_74 x_75))))
(assert (forall ((x_77 Heap_0) (x_78 Nat_0) (x_79 Heap_0))
	(isNode_0 (Node_0 x_77 x_78 x_79))))
(assert (isNil_0 Nil_0))
(assert (forall ((x_80 Heap_0) (x_81 Nat_0) (x_82 Heap_0))
	(diseqHeap_0 (Node_0 x_80 x_81 x_82) Nil_0)))
(assert (forall ((x_83 Heap_0) (x_84 Nat_0) (x_85 Heap_0))
	(diseqHeap_0 Nil_0 (Node_0 x_83 x_84 x_85))))
(assert (forall ((x_86 Heap_0) (x_87 Nat_0) (x_88 Heap_0) (x_89 Heap_0) (x_90 Nat_0) (x_91 Heap_0))
	(=> (diseqHeap_0 x_86 x_89)
	    (diseqHeap_0 (Node_0 x_86 x_87 x_88) (Node_0 x_89 x_90 x_91)))))
(assert (forall ((x_86 Heap_0) (x_87 Nat_0) (x_88 Heap_0) (x_89 Heap_0) (x_90 Nat_0) (x_91 Heap_0))
	(=> (diseqNat_0 x_87 x_90)
	    (diseqHeap_0 (Node_0 x_86 x_87 x_88) (Node_0 x_89 x_90 x_91)))))
(assert (forall ((x_86 Heap_0) (x_87 Nat_0) (x_88 Heap_0) (x_89 Heap_0) (x_90 Nat_0) (x_91 Heap_0))
	(=> (diseqHeap_0 x_88 x_91)
	    (diseqHeap_0 (Node_0 x_86 x_87 x_88) (Node_0 x_89 x_90 x_91)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 Heap_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_3 (Heap_0 list_1) Bool)
(declare-fun tail_3 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_95 list_1) (x_93 Heap_0) (x_94 list_1))
	(=> (= x_95 (cons_1 x_93 x_94))
	    (head_3 x_93 x_95))))
(assert (forall ((x_95 list_1) (x_93 Heap_0) (x_94 list_1))
	(=> (= x_95 (cons_1 x_93 x_94))
	    (tail_3 x_94 x_95))))
(assert (isnil_1 nil_1))
(assert (forall ((x_96 Heap_0) (x_97 list_1))
	(iscons_1 (cons_1 x_96 x_97))))
(assert (forall ((x_98 Heap_0) (x_99 list_1))
	(diseqlist_1 nil_1 (cons_1 x_98 x_99))))
(assert (forall ((x_100 Heap_0) (x_101 list_1))
	(diseqlist_1 (cons_1 x_100 x_101) nil_1)))
(assert (forall ((x_102 Heap_0) (x_103 list_1) (x_104 Heap_0) (x_105 list_1))
	(=> (diseqHeap_0 x_102 x_104)
	    (diseqlist_1 (cons_1 x_102 x_103) (cons_1 x_104 x_105)))))
(assert (forall ((x_102 Heap_0) (x_103 list_1) (x_104 Heap_0) (x_105 list_1))
	(=> (diseqlist_1 x_103 x_105)
	    (diseqlist_1 (cons_1 x_102 x_103) (cons_1 x_104 x_105)))))
(declare-fun toHeap_0 (list_1 list_0) Bool)
(assert (forall ((x_0 list_0) (y_0 Nat_0) (z_0 list_0) (x_14 list_1) (x_15 list_1))
	(=>	(and (= x_14 (cons_1 (Node_0 Nil_0 y_0 Nil_0) x_15))
			(toHeap_0 x_15 z_0)
			(= x_0 (cons_0 y_0 z_0)))
		(toHeap_0 x_14 x_0))))
(assert (forall ((x_0 list_0) (x_16 list_1))
	(=>	(and (= x_16 nil_1)
			(= x_0 nil_0))
		(toHeap_0 x_16 x_0))))
(declare-fun ordered_0 (Bool list_0) Bool)
(assert (forall ((x_1 list_0) (y_1 Nat_0) (z_1 list_0) (y_2 Nat_0) (xs_0 list_0) (x_17 Bool) (x_18 Bool))
	(=>	(and (= x_17 (and (le_0 y_1 y_2) x_18))
			(ordered_0 x_18 (cons_0 y_2 xs_0))
			(= x_1 (cons_0 y_1 z_1))
			(= z_1 (cons_0 y_2 xs_0)))
		(ordered_0 x_17 x_1))))
(assert (forall ((x_1 list_0) (y_1 Nat_0) (z_1 list_0) (x_19 Bool))
	(=>	(and (= x_19 true)
			(= x_1 (cons_0 y_1 z_1))
			(= z_1 nil_0))
		(ordered_0 x_19 x_1))))
(assert (forall ((x_1 list_0) (x_20 Bool))
	(=>	(and (= x_20 true)
			(= x_1 nil_0))
		(ordered_0 x_20 x_1))))
(declare-fun hmerge_0 (Heap_0 Heap_0 Heap_0) Bool)
(assert (forall ((x_2 Heap_0) (y_3 Heap_0) (x_21 Heap_0))
	(=>	(and (= x_21 y_3)
			(= x_2 Nil_0))
		(hmerge_0 x_21 x_2 y_3))))
(assert (forall ((x_2 Heap_0) (y_3 Heap_0) (z_2 Heap_0) (x_3 Nat_0) (x_4 Heap_0) (x_22 Heap_0))
	(=>	(and (= x_22 (Node_0 z_2 x_3 x_4))
			(= x_2 (Node_0 z_2 x_3 x_4))
			(= y_3 Nil_0))
		(hmerge_0 x_22 x_2 y_3))))
(assert (forall ((x_2 Heap_0) (y_3 Heap_0) (z_2 Heap_0) (x_3 Nat_0) (x_4 Heap_0) (x_5 Heap_0) (x_6 Nat_0) (x_7 Heap_0) (x_23 Heap_0) (x_24 Heap_0))
	(=>	(and (= x_23 (Node_0 x_24 x_3 z_2))
			(hmerge_0 x_24 x_4 (Node_0 x_5 x_6 x_7))
			(= x_2 (Node_0 z_2 x_3 x_4))
			(= y_3 (Node_0 x_5 x_6 x_7))
			(le_0 x_3 x_6))
		(hmerge_0 x_23 x_2 y_3))))
(assert (forall ((x_2 Heap_0) (y_3 Heap_0) (z_2 Heap_0) (x_3 Nat_0) (x_4 Heap_0) (x_5 Heap_0) (x_6 Nat_0) (x_7 Heap_0) (x_25 Heap_0) (x_26 Heap_0))
	(=>	(and (= x_25 (Node_0 x_26 x_6 x_5))
			(hmerge_0 x_26 (Node_0 z_2 x_3 x_4) x_7)
			(= x_2 (Node_0 z_2 x_3 x_4))
			(= y_3 (Node_0 x_5 x_6 x_7))
			(gt_0 x_3 x_6))
		(hmerge_0 x_25 x_2 y_3))))
(declare-fun hpairwise_0 (list_1 list_1) Bool)
(assert (forall ((x_8 list_1) (p_0 Heap_0) (y_4 list_1) (q_0 Heap_0) (qs_0 list_1) (x_27 list_1) (x_28 Heap_0) (x_29 list_1))
	(=>	(and (= x_27 (cons_1 x_28 x_29))
			(hmerge_0 x_28 p_0 q_0)
			(hpairwise_0 x_29 qs_0)
			(= x_8 (cons_1 p_0 y_4))
			(= y_4 (cons_1 q_0 qs_0)))
		(hpairwise_0 x_27 x_8))))
(assert (forall ((x_8 list_1) (p_0 Heap_0) (y_4 list_1) (x_30 list_1))
	(=>	(and (= x_30 (cons_1 p_0 nil_1))
			(= x_8 (cons_1 p_0 y_4))
			(= y_4 nil_1))
		(hpairwise_0 x_30 x_8))))
(assert (forall ((x_8 list_1) (x_31 list_1))
	(=>	(and (= x_31 nil_1)
			(= x_8 nil_1))
		(hpairwise_0 x_31 x_8))))
(declare-fun hmerging_0 (Heap_0 list_1) Bool)
(assert (forall ((x_9 list_1) (p_1 Heap_0) (y_5 list_1) (z_3 Heap_0) (x_10 list_1) (x_32 Heap_0) (x_33 list_1) (x_34 Heap_0))
	(=>	(and (= x_32 x_34)
			(hpairwise_0 x_33 (cons_1 p_1 (cons_1 z_3 x_10)))
			(hmerging_0 x_34 x_33)
			(= x_9 (cons_1 p_1 y_5))
			(= y_5 (cons_1 z_3 x_10)))
		(hmerging_0 x_32 x_9))))
(assert (forall ((x_9 list_1) (p_1 Heap_0) (y_5 list_1) (x_35 Heap_0))
	(=>	(and (= x_35 p_1)
			(= x_9 (cons_1 p_1 y_5))
			(= y_5 nil_1))
		(hmerging_0 x_35 x_9))))
(assert (forall ((x_9 list_1) (x_36 Heap_0))
	(=>	(and (= x_36 Nil_0)
			(= x_9 nil_1))
		(hmerging_0 x_36 x_9))))
(declare-fun toHeap_1 (Heap_0 list_0) Bool)
(assert (forall ((x_11 list_0) (x_37 Heap_0) (x_38 list_1) (x_39 Heap_0))
	(=>	(and (= x_37 x_39)
			(toHeap_0 x_38 x_11)
			(hmerging_0 x_39 x_38))
		(toHeap_1 x_37 x_11))))
(declare-fun toList_0 (list_0 Heap_0) Bool)
(assert (forall ((x_12 Heap_0) (x_40 list_0))
	(=>	(and (= x_40 nil_0)
			(= x_12 Nil_0))
		(toList_0 x_40 x_12))))
(assert (forall ((x_12 Heap_0) (p_2 Heap_0) (y_6 Nat_0) (q_1 Heap_0) (x_41 list_0) (x_42 Heap_0) (x_43 list_0))
	(=>	(and (= x_41 (cons_0 y_6 x_43))
			(hmerge_0 x_42 p_2 q_1)
			(toList_0 x_43 x_42)
			(= x_12 (Node_0 p_2 y_6 q_1)))
		(toList_0 x_41 x_12))))
(declare-fun hsort_0 (list_0 list_0) Bool)
(assert (forall ((x_13 list_0) (x_44 list_0) (x_45 Heap_0) (x_46 list_0))
	(=>	(and (= x_44 x_46)
			(toHeap_1 x_45 x_13)
			(toList_0 x_46 x_45))
		(hsort_0 x_44 x_13))))
(assert (forall ((xs_1 list_0) (x_47 list_0) (x_48 Bool))
	(=>	(and (= x_48 false)
			(hsort_0 x_47 xs_1)
			(ordered_0 x_48 x_47))
		false)))
(check-sat)
