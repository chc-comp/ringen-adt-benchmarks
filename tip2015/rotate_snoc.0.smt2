(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_0 ) (S_0 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_36 Nat_1) (x_35 Nat_1))
	(=> (= x_36 (S_0 x_35))
	    (unS_1 x_35 x_36))))
(assert (isZ_0 Z_0))
(assert (forall ((x_37 Nat_1))
	(isS_0 (S_0 x_37))))
(assert (forall ((x_38 Nat_1))
	(diseqNat_0 Z_0 (S_0 x_38))))
(assert (forall ((x_39 Nat_1))
	(diseqNat_0 (S_0 x_39) Z_0)))
(assert (forall ((x_40 Nat_1) (x_41 Nat_1))
	(=> (diseqNat_0 x_40 x_41)
	    (diseqNat_0 (S_0 x_40) (S_0 x_41)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_6 Nat_1))
	(add_0 y_6 Z_0 y_6)))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_33 y_6)
	    (add_0 (S_0 r_0) (S_0 x_33) y_6))))
(assert (forall ((y_6 Nat_1))
	(minus_0 Z_0 Z_0 y_6)))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_33 y_6)
	    (minus_0 (S_0 r_0) (S_0 x_33) y_6))))
(assert (forall ((y_6 Nat_1))
	(le_0 Z_0 y_6)))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1))
	(=> (le_0 x_33 y_6)
	    (le_0 (S_0 x_33) (S_0 y_6)))))
(assert (forall ((y_6 Nat_1))
	(ge_0 y_6 Z_0)))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1))
	(=> (ge_0 x_33 y_6)
	    (ge_0 (S_0 x_33) (S_0 y_6)))))
(assert (forall ((y_6 Nat_1))
	(lt_0 Z_0 (S_0 y_6))))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_33 y_6)
	    (lt_0 (S_0 x_33) (S_0 y_6)))))
(assert (forall ((y_6 Nat_1))
	(gt_0 (S_0 y_6) Z_0)))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1))
	(=> (gt_0 x_33 y_6)
	    (gt_0 (S_0 x_33) (S_0 y_6)))))
(assert (forall ((y_6 Nat_1))
	(mult_0 Z_0 Z_0 y_6)))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_5 Nat_1))
	(=>	(and (mult_0 r_0 x_33 y_6)
			(add_0 z_5 r_0 y_6))
		(mult_0 z_5 (S_0 x_33) y_6))))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_33 y_6)
	    (div_0 Z_0 x_33 y_6))))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_5 Nat_1))
	(=>	(and (ge_0 x_33 y_6)
			(minus_0 z_5 x_33 y_6)
			(div_0 r_0 z_5 y_6))
		(div_0 (S_0 r_0) x_33 y_6))))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_33 y_6)
	    (mod_0 x_33 x_33 y_6))))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_5 Nat_1))
	(=>	(and (ge_0 x_33 y_6)
			(minus_0 z_5 x_33 y_6)
			(mod_0 r_0 z_5 y_6))
		(mod_0 r_0 x_33 y_6))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_1 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_45 list_0) (x_43 Nat_1) (x_44 list_0))
	(=> (= x_45 (cons_0 x_43 x_44))
	    (head_1 x_43 x_45))))
(assert (forall ((x_45 list_0) (x_43 Nat_1) (x_44 list_0))
	(=> (= x_45 (cons_0 x_43 x_44))
	    (tail_1 x_44 x_45))))
(assert (isnil_0 nil_0))
(assert (forall ((x_46 Nat_1) (x_47 list_0))
	(iscons_0 (cons_0 x_46 x_47))))
(assert (forall ((x_48 Nat_1) (x_49 list_0))
	(diseqlist_0 nil_0 (cons_0 x_48 x_49))))
(assert (forall ((x_50 Nat_1) (x_51 list_0))
	(diseqlist_0 (cons_0 x_50 x_51) nil_0)))
(assert (forall ((x_52 Nat_1) (x_53 list_0) (x_54 Nat_1) (x_55 list_0))
	(=> (diseqNat_0 x_52 x_54)
	    (diseqlist_0 (cons_0 x_52 x_53) (cons_0 x_54 x_55)))))
(assert (forall ((x_52 Nat_1) (x_53 list_0) (x_54 Nat_1) (x_55 list_0))
	(=> (diseqlist_0 x_53 x_55)
	    (diseqlist_0 (cons_0 x_52 x_53) (cons_0 x_54 x_55)))))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_58 Nat_0) (x_57 Nat_0))
	(=> (= x_58 (succ_0 x_57))
	    (p_1 x_57 x_58))))
(assert (iszero_0 zero_0))
(assert (forall ((x_59 Nat_0))
	(issucc_0 (succ_0 x_59))))
(assert (forall ((x_60 Nat_0))
	(diseqNat_1 zero_0 (succ_0 x_60))))
(assert (forall ((x_61 Nat_0))
	(diseqNat_1 (succ_0 x_61) zero_0)))
(assert (forall ((x_62 Nat_0) (x_63 Nat_0))
	(=> (diseqNat_1 x_62 x_63)
	    (diseqNat_1 (succ_0 x_62) (succ_0 x_63)))))
(declare-fun snoc_0 (list_0 Nat_1 list_0) Bool)
(assert (forall ((x_0 Nat_1) (y_0 list_0) (z_0 Nat_1) (ys_0 list_0) (x_8 list_0) (x_9 list_0))
	(=>	(and (= x_8 (cons_0 z_0 x_9))
			(snoc_0 x_9 x_0 ys_0)
			(= y_0 (cons_0 z_0 ys_0)))
		(snoc_0 x_8 x_0 y_0))))
(assert (forall ((x_0 Nat_1) (y_0 list_0) (x_10 list_0))
	(=>	(and (= x_10 (cons_0 x_0 nil_0))
			(= y_0 nil_0))
		(snoc_0 x_10 x_0 y_0))))
(declare-fun rotate_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_1 Nat_0) (y_1 list_0) (z_1 Nat_0) (z_2 Nat_1) (xs_0 list_0) (x_11 list_0) (x_12 list_0) (x_13 list_0))
	(=>	(and (= x_11 x_13)
			(snoc_0 x_12 z_2 xs_0)
			(rotate_0 x_13 z_1 x_12)
			(= x_1 (succ_0 z_1))
			(= y_1 (cons_0 z_2 xs_0)))
		(rotate_0 x_11 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 list_0) (z_1 Nat_0) (x_14 list_0))
	(=>	(and (= x_14 nil_0)
			(= x_1 (succ_0 z_1))
			(= y_1 nil_0))
		(rotate_0 x_14 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 list_0) (x_15 list_0))
	(=>	(and (= x_15 y_1)
			(= x_1 zero_0))
		(rotate_0 x_15 x_1 y_1))))
(declare-fun plus_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_2 Nat_0) (y_2 Nat_0) (z_3 Nat_0) (x_16 Nat_0) (x_17 Nat_0))
	(=>	(and (= x_16 (succ_0 x_17))
			(plus_0 x_17 z_3 y_2)
			(= x_2 (succ_0 z_3)))
		(plus_0 x_16 x_2 y_2))))
(assert (forall ((x_2 Nat_0) (y_2 Nat_0) (x_18 Nat_0))
	(=>	(and (= x_18 y_2)
			(= x_2 zero_0))
		(plus_0 x_18 x_2 y_2))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_3 list_0) (y_3 Nat_1) (l_0 list_0) (x_19 Nat_0) (x_20 Nat_0) (x_21 Nat_0))
	(=>	(and (= x_19 x_21)
			(length_0 x_20 l_0)
			(plus_0 x_21 (succ_0 zero_0) x_20)
			(= x_3 (cons_0 y_3 l_0)))
		(length_0 x_19 x_3))))
(assert (forall ((x_3 list_0) (x_22 Nat_0))
	(=>	(and (= x_22 zero_0)
			(= x_3 nil_0))
		(length_0 x_22 x_3))))
(assert (forall ((x_4 Nat_0) (y_4 Nat_0) (z_4 Nat_0) (x_23 Nat_0) (x_24 Nat_0) (x_25 Nat_0) (x_26 Nat_0))
	(=>	(and (diseqNat_1 x_24 x_26)
			(plus_0 x_23 y_4 z_4)
			(plus_0 x_24 x_4 x_23)
			(plus_0 x_25 x_4 y_4)
			(plus_0 x_26 x_25 z_4))
		false)))
(assert (forall ((x_5 Nat_0) (y_5 Nat_0) (x_27 Nat_0) (x_28 Nat_0))
	(=>	(and (diseqNat_1 x_27 x_28)
			(plus_0 x_27 x_5 y_5)
			(plus_0 x_28 y_5 x_5))
		false)))
(assert (forall ((x_6 Nat_0) (x_29 Nat_0))
	(=>	(and (diseqNat_1 x_29 x_6)
			(plus_0 x_29 x_6 zero_0))
		false)))
(assert (forall ((x_7 Nat_0) (x_30 Nat_0))
	(=>	(and (diseqNat_1 x_30 x_7)
			(plus_0 x_30 zero_0 x_7))
		false)))
(assert (forall ((xs_1 list_0) (x_31 Nat_0) (x_32 list_0))
	(=>	(and (diseqlist_0 x_32 xs_1)
			(length_0 x_31 xs_1)
			(rotate_0 x_32 x_31 xs_1))
		false)))
(check-sat)
