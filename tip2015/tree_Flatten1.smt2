(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_2 ) (Z_3 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-datatypes ((Tree_0 0)) (((Node_0 (projNode_0 Tree_0) (projNode_1 Nat_0) (projNode_2 Tree_0)) (Nil_1 ))))
(declare-datatypes ((list_1 0)) (((nil_2 ) (cons_1 (head_1 Tree_0) (tail_1 list_1)))))
(declare-fun flatten_0 (list_0 list_1) Bool)
(declare-fun x_5 (list_0 list_0 list_0) Bool)
(declare-fun flatten_1 (list_0 Tree_0) Bool)
(assert (forall ((x_79 Nat_0))
	(diseqNat_0 Z_2 (Z_3 x_79))))
(assert (forall ((x_80 Nat_0))
	(diseqNat_0 (Z_3 x_80) Z_2)))
(assert (forall ((x_81 Nat_0) (x_82 Nat_0))
	(=> (diseqNat_0 x_81 x_82) (diseqNat_0 (Z_3 x_81) (Z_3 x_82)))))
(assert (forall ((x_33 Nat_0) (x_34 list_0))
	(diseqlist_0 nil_0 (cons_0 x_33 x_34))))
(assert (forall ((x_35 Nat_0) (x_36 list_0))
	(diseqlist_0 (cons_0 x_35 x_36) nil_0)))
(assert (forall ((x_37 Nat_0) (x_38 list_0) (x_39 Nat_0) (x_40 list_0))
	(=> (diseqNat_0 x_37 x_39) (diseqlist_0 (cons_0 x_37 x_38) (cons_0 x_39 x_40)))))
(assert (forall ((x_37 Nat_0) (x_38 list_0) (x_39 Nat_0) (x_40 list_0))
	(=> (diseqlist_0 x_38 x_40) (diseqlist_0 (cons_0 x_37 x_38) (cons_0 x_39 x_40)))))
(assert (forall ((x_8 list_0) (ps_0 list_1))
	(=> (flatten_0 x_8 ps_0) (flatten_0 x_8 (cons_1 Nil_1 ps_0)))))
(assert (forall ((x_11 list_0) (x_1 Nat_0) (q_0 Tree_0) (ps_0 list_1))
	(=> (flatten_0 x_11 (cons_1 q_0 ps_0)) (flatten_0 (cons_0 x_1 x_11) (cons_1 (Node_0 Nil_1 x_1 q_0) ps_0)))))
(assert (forall ((x_12 list_0) (x_2 Tree_0) (x_3 Nat_0) (x_4 Tree_0) (x_1 Nat_0) (q_0 Tree_0) (ps_0 list_1))
	(=> (flatten_0 x_12 (cons_1 (Node_0 x_2 x_3 x_4) (cons_1 (Node_0 Nil_1 x_1 q_0) ps_0))) (flatten_0 x_12 (cons_1 (Node_0 (Node_0 x_2 x_3 x_4) x_1 q_0) ps_0)))))
(assert (flatten_0 nil_0 nil_2))
(assert (forall ((x_16 list_0) (z_1 Nat_0) (xs_0 list_0) (y_1 list_0))
	(=> (x_5 x_16 xs_0 y_1) (x_5 (cons_0 z_1 x_16) (cons_0 z_1 xs_0) y_1))))
(assert (forall ((x_17 list_0))
	(x_5 x_17 nil_0 x_17)))
(assert (flatten_1 nil_0 Nil_1))
(assert (forall ((x_19 list_0) (x_20 list_0) (x_21 list_0) (x_22 list_0) (p_0 Tree_0) (y_2 Nat_0) (q_1 Tree_0))
	(=> (and (flatten_1 x_20 p_0) (flatten_1 x_21 q_1) (x_5 x_22 (cons_0 y_2 nil_0) x_21) (x_5 x_19 x_20 x_22)) (flatten_1 x_19 (Node_0 p_0 y_2 q_1)))))
(assert (forall ((x_24 list_0) (x_25 list_0) (p_1 Tree_0))
	(=> (and (diseqlist_0 x_24 x_25) (flatten_0 x_24 (cons_1 p_1 nil_2)) (flatten_1 x_25 p_1)) false)))
(check-sat)
(get-model)
