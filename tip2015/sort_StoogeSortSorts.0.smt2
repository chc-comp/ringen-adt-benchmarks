(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_74 Nat_0) (x_73 Nat_0))
	(=> (= x_74 (S_0 x_73))
	    (unS_1 x_73 x_74))))
(assert (isZ_0 Z_0))
(assert (forall ((x_75 Nat_0))
	(isS_0 (S_0 x_75))))
(assert (forall ((x_76 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_76))))
(assert (forall ((x_77 Nat_0))
	(diseqNat_0 (S_0 x_77) Z_0)))
(assert (forall ((x_78 Nat_0) (x_79 Nat_0))
	(=> (diseqNat_0 x_78 x_79)
	    (diseqNat_0 (S_0 x_78) (S_0 x_79)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_11 Nat_0))
	(add_0 y_11 Z_0 y_11)))
(assert (forall ((x_66 Nat_0) (y_11 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_66 y_11)
	    (add_0 (S_0 r_0) (S_0 x_66) y_11))))
(assert (forall ((y_11 Nat_0))
	(minus_0 Z_0 Z_0 y_11)))
(assert (forall ((x_66 Nat_0) (y_11 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_66 y_11)
	    (minus_0 (S_0 r_0) (S_0 x_66) y_11))))
(assert (forall ((y_11 Nat_0))
	(le_0 Z_0 y_11)))
(assert (forall ((x_66 Nat_0) (y_11 Nat_0))
	(=> (le_0 x_66 y_11)
	    (le_0 (S_0 x_66) (S_0 y_11)))))
(assert (forall ((y_11 Nat_0))
	(ge_0 y_11 Z_0)))
(assert (forall ((x_66 Nat_0) (y_11 Nat_0))
	(=> (ge_0 x_66 y_11)
	    (ge_0 (S_0 x_66) (S_0 y_11)))))
(assert (forall ((y_11 Nat_0))
	(lt_0 Z_0 (S_0 y_11))))
(assert (forall ((x_66 Nat_0) (y_11 Nat_0))
	(=> (lt_0 x_66 y_11)
	    (lt_0 (S_0 x_66) (S_0 y_11)))))
(assert (forall ((y_11 Nat_0))
	(gt_0 (S_0 y_11) Z_0)))
(assert (forall ((x_66 Nat_0) (y_11 Nat_0))
	(=> (gt_0 x_66 y_11)
	    (gt_0 (S_0 x_66) (S_0 y_11)))))
(assert (forall ((y_11 Nat_0))
	(mult_0 Z_0 Z_0 y_11)))
(assert (forall ((x_66 Nat_0) (y_11 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (mult_0 r_0 x_66 y_11)
			(add_0 z_5 r_0 y_11))
		(mult_0 z_5 (S_0 x_66) y_11))))
(assert (forall ((x_66 Nat_0) (y_11 Nat_0))
	(=> (lt_0 x_66 y_11)
	    (div_0 Z_0 x_66 y_11))))
(assert (forall ((x_66 Nat_0) (y_11 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (ge_0 x_66 y_11)
			(minus_0 z_5 x_66 y_11)
			(div_0 r_0 z_5 y_11))
		(div_0 (S_0 r_0) x_66 y_11))))
(assert (forall ((x_66 Nat_0) (y_11 Nat_0))
	(=> (lt_0 x_66 y_11)
	    (mod_0 x_66 x_66 y_11))))
(assert (forall ((x_66 Nat_0) (y_11 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (ge_0 x_66 y_11)
			(minus_0 z_5 x_66 y_11)
			(mod_0 r_0 z_5 y_11))
		(mod_0 r_0 x_66 y_11))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_83 list_0) (x_81 Nat_0) (x_82 list_0))
	(=> (= x_83 (cons_0 x_81 x_82))
	    (head_1 x_81 x_83))))
(assert (forall ((x_83 list_0) (x_81 Nat_0) (x_82 list_0))
	(=> (= x_83 (cons_0 x_81 x_82))
	    (tail_1 x_82 x_83))))
(assert (isnil_0 nil_0))
(assert (forall ((x_84 Nat_0) (x_85 list_0))
	(iscons_0 (cons_0 x_84 x_85))))
(assert (forall ((x_86 Nat_0) (x_87 list_0))
	(diseqlist_0 nil_0 (cons_0 x_86 x_87))))
(assert (forall ((x_88 Nat_0) (x_89 list_0))
	(diseqlist_0 (cons_0 x_88 x_89) nil_0)))
(assert (forall ((x_90 Nat_0) (x_91 list_0) (x_92 Nat_0) (x_93 list_0))
	(=> (diseqNat_0 x_90 x_92)
	    (diseqlist_0 (cons_0 x_90 x_91) (cons_0 x_92 x_93)))))
(assert (forall ((x_90 Nat_0) (x_91 list_0) (x_92 Nat_0) (x_93 list_0))
	(=> (diseqlist_0 x_91 x_93)
	    (diseqlist_0 (cons_0 x_90 x_91) (cons_0 x_92 x_93)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 list_0) (projpair_1 list_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (list_0 pair_0) Bool)
(declare-fun projpair_3 (list_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_96 pair_0) (x_94 list_0) (x_95 list_0))
	(=> (= x_96 (pair_1 x_94 x_95))
	    (projpair_2 x_94 x_96))))
(assert (forall ((x_96 pair_0) (x_94 list_0) (x_95 list_0))
	(=> (= x_96 (pair_1 x_94 x_95))
	    (projpair_3 x_95 x_96))))
(assert (forall ((x_97 list_0) (x_98 list_0))
	(ispair_0 (pair_1 x_97 x_98))))
(assert (forall ((x_99 list_0) (x_100 list_0) (x_101 list_0) (x_102 list_0))
	(=> (diseqlist_0 x_99 x_101)
	    (diseqpair_0 (pair_1 x_99 x_100) (pair_1 x_101 x_102)))))
(assert (forall ((x_99 list_0) (x_100 list_0) (x_101 list_0) (x_102 list_0))
	(=> (diseqlist_0 x_100 x_102)
	    (diseqpair_0 (pair_1 x_99 x_100) (pair_1 x_101 x_102)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_15 list_0))
	(=>	(and (= x_15 nil_0)
			(le_0 x_0 Z_0))
		(take_0 x_15 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (xs_0 list_0) (x_16 list_0) (x_17 list_0) (x_67 Nat_0))
	(=>	(and (= x_16 (cons_0 z_0 x_17))
			(take_0 x_17 x_67 xs_0)
			(gt_0 x_0 Z_0)
			(= y_0 (cons_0 z_0 xs_0))
			(minus_0 x_67 x_0 (S_0 Z_0)))
		(take_0 x_16 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_18 list_0))
	(=>	(and (= x_18 nil_0)
			(le_0 x_0 Z_0))
		(take_0 x_18 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_19 list_0))
	(=>	(and (= x_19 nil_0)
			(gt_0 x_0 Z_0)
			(= y_0 nil_0))
		(take_0 x_19 x_0 y_0))))
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (x_20 list_0))
	(=>	(and (= x_20 (cons_0 x_1 (cons_0 y_1 nil_0)))
			(le_0 x_1 y_1))
		(sort_0 x_20 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (x_21 list_0))
	(=>	(and (= x_21 (cons_0 y_1 (cons_0 x_1 nil_0)))
			(gt_0 x_1 y_1))
		(sort_0 x_21 x_1 y_1))))
(declare-fun ordered_0 (Bool list_0) Bool)
(assert (forall ((x_2 list_0) (y_2 Nat_0) (z_1 list_0) (y_3 Nat_0) (xs_1 list_0) (x_22 Bool) (x_23 Bool))
	(=>	(and (= x_22 (and (le_0 y_2 y_3) x_23))
			(ordered_0 x_23 (cons_0 y_3 xs_1))
			(= x_2 (cons_0 y_2 z_1))
			(= z_1 (cons_0 y_3 xs_1)))
		(ordered_0 x_22 x_2))))
(assert (forall ((x_2 list_0) (y_2 Nat_0) (z_1 list_0) (x_24 Bool))
	(=>	(and (= x_24 true)
			(= x_2 (cons_0 y_2 z_1))
			(= z_1 nil_0))
		(ordered_0 x_24 x_2))))
(assert (forall ((x_2 list_0) (x_25 Bool))
	(=>	(and (= x_25 true)
			(= x_2 nil_0))
		(ordered_0 x_25 x_2))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_3 list_0) (y_4 Nat_0) (l_0 list_0) (x_26 Nat_0) (x_27 Nat_0) (x_68 Nat_0))
	(=>	(and (= x_26 x_68)
			(length_0 x_27 l_0)
			(= x_3 (cons_0 y_4 l_0))
			(add_0 x_68 (S_0 Z_0) x_27))
		(length_0 x_26 x_3))))
(assert (forall ((x_3 list_0) (x_28 Nat_0))
	(=>	(and (= x_28 Z_0)
			(= x_3 nil_0))
		(length_0 x_28 x_3))))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_4 Nat_0) (y_5 list_0) (x_29 list_0))
	(=>	(and (= x_29 y_5)
			(le_0 x_4 Z_0))
		(drop_0 x_29 x_4 y_5))))
(assert (forall ((x_4 Nat_0) (y_5 list_0) (z_2 Nat_0) (xs_2 list_0) (x_30 list_0) (x_31 list_0) (x_69 Nat_0))
	(=>	(and (= x_30 x_31)
			(drop_0 x_31 x_69 xs_2)
			(gt_0 x_4 Z_0)
			(= y_5 (cons_0 z_2 xs_2))
			(minus_0 x_69 x_4 (S_0 Z_0)))
		(drop_0 x_30 x_4 y_5))))
(assert (forall ((x_4 Nat_0) (y_5 list_0) (x_32 list_0))
	(=>	(and (= x_32 y_5)
			(le_0 x_4 Z_0))
		(drop_0 x_32 x_4 y_5))))
(assert (forall ((x_4 Nat_0) (y_5 list_0) (x_33 list_0))
	(=>	(and (= x_33 nil_0)
			(gt_0 x_4 Z_0)
			(= y_5 nil_0))
		(drop_0 x_33 x_4 y_5))))
(declare-fun splitAt_0 (pair_0 Nat_0 list_0) Bool)
(assert (forall ((x_5 Nat_0) (y_6 list_0) (x_34 pair_0) (x_35 list_0) (x_36 list_0))
	(=>	(and (= x_34 (pair_1 x_35 x_36))
			(take_0 x_35 x_5 y_6)
			(drop_0 x_36 x_5 y_6))
		(splitAt_0 x_34 x_5 y_6))))
(declare-fun x_6 (list_0 list_0 list_0) Bool)
(assert (forall ((x_7 list_0) (y_7 list_0) (z_3 Nat_0) (xs_3 list_0) (x_37 list_0) (x_38 list_0))
	(=>	(and (= x_37 (cons_0 z_3 x_38))
			(x_6 x_38 xs_3 y_7)
			(= x_7 (cons_0 z_3 xs_3)))
		(x_6 x_37 x_7 y_7))))
(assert (forall ((x_7 list_0) (y_7 list_0) (x_39 list_0))
	(=>	(and (= x_39 y_7)
			(= x_7 nil_0))
		(x_6 x_39 x_7 y_7))))
(declare-fun reverse_0 (list_0 list_0) Bool)
(assert (forall ((x_8 list_0) (y_8 Nat_0) (xs_4 list_0) (x_40 list_0) (x_41 list_0) (x_42 list_0))
	(=>	(and (= x_40 x_42)
			(reverse_0 x_41 xs_4)
			(x_6 x_42 x_41 (cons_0 y_8 nil_0))
			(= x_8 (cons_0 y_8 xs_4)))
		(reverse_0 x_40 x_8))))
(assert (forall ((x_8 list_0) (x_43 list_0))
	(=>	(and (= x_43 nil_0)
			(= x_8 nil_0))
		(reverse_0 x_43 x_8))))
(declare-fun stoogesort_0 (list_0 list_0) Bool)
(declare-fun stoogesort_1 (list_0 list_0) Bool)
(declare-fun stoogesort_2 (list_0 list_0) Bool)
(assert (forall ((x_9 list_0) (ys_0 list_0) (zs_0 list_0) (x_47 list_0) (x_48 list_0) (x_49 list_0) (x_50 list_0) (x_44 Nat_0) (x_45 list_0) (x_46 pair_0) (x_70 Nat_0))
	(=>	(and (= x_47 x_50)
			(stoogesort_1 x_48 zs_0)
			(reverse_0 x_49 ys_0)
			(x_6 x_50 x_48 x_49)
			(= x_46 (pair_1 ys_0 zs_0))
			(length_0 x_44 x_9)
			(reverse_0 x_45 x_9)
			(splitAt_0 x_46 x_70 x_45)
			(div_0 x_70 x_44 (S_0 (S_0 (S_0 Z_0)))))
		(stoogesort_0 x_47 x_9))))
(assert (forall ((x_10 list_0) (y_9 Nat_0) (z_4 list_0) (y_10 Nat_0) (x_11 list_0) (x_12 Nat_0) (x_13 list_0) (x_51 list_0) (x_52 list_0) (x_53 list_0) (x_54 list_0))
	(=>	(and (= x_51 x_54)
			(stoogesort_0 x_52 (cons_0 y_9 (cons_0 y_10 (cons_0 x_12 x_13))))
			(stoogesort_2 x_53 x_52)
			(stoogesort_0 x_54 x_53)
			(= x_10 (cons_0 y_9 z_4))
			(= z_4 (cons_0 y_10 x_11))
			(= x_11 (cons_0 x_12 x_13)))
		(stoogesort_1 x_51 x_10))))
(assert (forall ((x_10 list_0) (y_9 Nat_0) (z_4 list_0) (y_10 Nat_0) (x_11 list_0) (x_55 list_0) (x_56 list_0))
	(=>	(and (= x_55 x_56)
			(sort_0 x_56 y_9 y_10)
			(= x_10 (cons_0 y_9 z_4))
			(= z_4 (cons_0 y_10 x_11))
			(= x_11 nil_0))
		(stoogesort_1 x_55 x_10))))
(assert (forall ((x_10 list_0) (y_9 Nat_0) (z_4 list_0) (x_57 list_0))
	(=>	(and (= x_57 (cons_0 y_9 nil_0))
			(= x_10 (cons_0 y_9 z_4))
			(= z_4 nil_0))
		(stoogesort_1 x_57 x_10))))
(assert (forall ((x_10 list_0) (x_58 list_0))
	(=>	(and (= x_58 nil_0)
			(= x_10 nil_0))
		(stoogesort_1 x_58 x_10))))
(assert (forall ((x_14 list_0) (ys_1 list_0) (zs_1 list_0) (x_61 list_0) (x_62 list_0) (x_63 list_0) (x_59 Nat_0) (x_60 pair_0) (x_71 Nat_0))
	(=>	(and (= x_61 x_63)
			(stoogesort_1 x_62 zs_1)
			(x_6 x_63 ys_1 x_62)
			(= x_60 (pair_1 ys_1 zs_1))
			(length_0 x_59 x_14)
			(splitAt_0 x_60 x_71 x_14)
			(div_0 x_71 x_59 (S_0 (S_0 (S_0 Z_0)))))
		(stoogesort_2 x_61 x_14))))
(assert (forall ((xs_5 list_0) (x_64 list_0) (x_65 Bool))
	(=>	(and (= x_65 false)
			(stoogesort_1 x_64 xs_5)
			(ordered_0 x_65 x_64))
		false)))
(check-sat)
