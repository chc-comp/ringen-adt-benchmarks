(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_6 ) (Z_7 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(declare-fun isort_0 (list_0 list_0) Bool)
(declare-fun evens_0 (list_0 list_0) Bool)
(declare-fun odds_0 (list_0 list_0) Bool)
(declare-fun x_7 (list_0 list_0 list_0) Bool)
(declare-fun pairs_0 (list_0 list_0 list_0) Bool)
(declare-fun stitch_0 (list_0 list_0 list_0) Bool)
(declare-fun bmerge_0 (list_0 list_0 list_0) Bool)
(declare-fun bsort_0 (list_0 list_0) Bool)
(assert (forall ((x_95 Nat_0))
	(diseqNat_0 Z_6 (Z_7 x_95))))
(assert (forall ((x_96 Nat_0))
	(diseqNat_0 (Z_7 x_96) Z_6)))
(assert (forall ((x_97 Nat_0) (x_98 Nat_0))
	(=> (diseqNat_0 x_97 x_98) (diseqNat_0 (Z_7 x_97) (Z_7 x_98)))))
(assert (forall ((y_10 Nat_0))
	(le_0 Z_6 y_10)))
(assert (forall ((x_90 Nat_0) (y_10 Nat_0))
	(=> (le_0 x_90 y_10) (le_0 (Z_7 x_90) (Z_7 y_10)))))
(assert (forall ((y_10 Nat_0))
	(gt_0 (Z_7 y_10) Z_6)))
(assert (forall ((x_90 Nat_0) (y_10 Nat_0))
	(=> (gt_0 x_90 y_10) (gt_0 (Z_7 x_90) (Z_7 y_10)))))
(assert (forall ((x_105 Nat_0) (x_106 list_0))
	(diseqlist_0 nil_0 (cons_0 x_105 x_106))))
(assert (forall ((x_107 Nat_0) (x_108 list_0))
	(diseqlist_0 (cons_0 x_107 x_108) nil_0)))
(assert (forall ((x_109 Nat_0) (x_110 list_0) (x_111 Nat_0) (x_112 list_0))
	(=> (diseqNat_0 x_109 x_111) (diseqlist_0 (cons_0 x_109 x_110) (cons_0 x_111 x_112)))))
(assert (forall ((x_109 Nat_0) (x_110 list_0) (x_111 Nat_0) (x_112 list_0))
	(=> (diseqlist_0 x_110 x_112) (diseqlist_0 (cons_0 x_109 x_110) (cons_0 x_111 x_112)))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0))
	(=> (le_0 x_0 y_0) (sort_0 (cons_0 x_0 (cons_0 y_0 nil_0)) x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0))
	(=> (gt_0 x_0 y_0) (sort_0 (cons_0 y_0 (cons_0 x_0 nil_0)) x_0 y_0))))
(assert (forall ((z_0 Nat_0) (xs_0 list_0) (x_1 Nat_0))
	(=> (le_0 x_1 z_0) (insert_0 (cons_0 x_1 (cons_0 z_0 xs_0)) x_1 (cons_0 z_0 xs_0)))))
(assert (forall ((x_29 list_0) (z_0 Nat_0) (xs_0 list_0) (x_1 Nat_0))
	(=> (and (gt_0 x_1 z_0) (insert_0 x_29 x_1 xs_0)) (insert_0 (cons_0 z_0 x_29) x_1 (cons_0 z_0 xs_0)))))
(assert (forall ((x_1 Nat_0))
	(insert_0 (cons_0 x_1 nil_0) x_1 nil_0)))
(assert (forall ((x_31 list_0) (x_32 list_0) (y_2 Nat_0) (xs_1 list_0))
	(=> (and (isort_0 x_32 xs_1) (insert_0 x_31 y_2 x_32)) (isort_0 x_31 (cons_0 y_2 xs_1)))))
(assert (isort_0 nil_0 nil_0))
(assert (forall ((x_36 list_0) (y_3 Nat_0) (xs_2 list_0))
	(=> (odds_0 x_36 xs_2) (evens_0 (cons_0 y_3 x_36) (cons_0 y_3 xs_2)))))
(assert (evens_0 nil_0 nil_0))
(assert (forall ((x_38 list_0) (y_4 Nat_0) (xs_3 list_0))
	(=> (evens_0 x_38 xs_3) (odds_0 x_38 (cons_0 y_4 xs_3)))))
(assert (odds_0 nil_0 nil_0))
(assert (forall ((x_42 list_0) (z_1 Nat_0) (xs_4 list_0) (y_5 list_0))
	(=> (x_7 x_42 xs_4 y_5) (x_7 (cons_0 z_1 x_42) (cons_0 z_1 xs_4) y_5))))
(assert (forall ((x_43 list_0))
	(x_7 x_43 nil_0 x_43)))
(assert (forall ((x_44 list_0) (x_45 list_0) (x_46 list_0) (x_11 Nat_0) (x_12 list_0) (z_2 Nat_0) (x_10 list_0))
	(=> (and (sort_0 x_45 z_2 x_11) (pairs_0 x_46 x_10 x_12) (x_7 x_44 x_45 x_46)) (pairs_0 x_44 (cons_0 z_2 x_10) (cons_0 x_11 x_12)))))
(assert (forall ((z_2 Nat_0) (x_10 list_0))
	(pairs_0 (cons_0 z_2 x_10) (cons_0 z_2 x_10) nil_0)))
(assert (forall ((x_49 list_0))
	(pairs_0 x_49 nil_0 x_49)))
(assert (forall ((x_51 list_0) (z_3 Nat_0) (xs_5 list_0) (y_7 list_0))
	(=> (pairs_0 x_51 xs_5 y_7) (stitch_0 (cons_0 z_3 x_51) (cons_0 z_3 xs_5) y_7))))
(assert (forall ((x_52 list_0))
	(stitch_0 x_52 nil_0 x_52)))
(assert (forall ((x_53 list_0) (x_54 list_0) (x_55 list_0) (x_56 list_0) (x_57 list_0) (x_58 list_0) (x_20 Nat_0) (x_21 list_0) (fail_0 list_0) (x_16 Nat_0) (x_17 list_0) (z_4 Nat_0))
	(=> (and (evens_0 x_53 (cons_0 z_4 (cons_0 x_20 x_21))) (evens_0 x_54 (cons_0 x_16 x_17)) (bmerge_0 x_55 x_53 x_54) (odds_0 x_56 (cons_0 z_4 (cons_0 x_20 x_21))) (odds_0 x_57 (cons_0 x_16 x_17)) (bmerge_0 x_58 x_56 x_57) (stitch_0 fail_0 x_55 x_58)) (bmerge_0 fail_0 (cons_0 z_4 (cons_0 x_20 x_21)) (cons_0 x_16 x_17)))))
(assert (forall ((x_61 list_0) (x_62 list_0) (x_63 list_0) (x_64 list_0) (x_65 list_0) (x_66 list_0) (x_18 Nat_0) (x_19 list_0) (fail_0 list_0) (x_16 Nat_0) (z_4 Nat_0))
	(=> (and (evens_0 x_61 (cons_0 z_4 nil_0)) (evens_0 x_62 (cons_0 x_16 (cons_0 x_18 x_19))) (bmerge_0 x_63 x_61 x_62) (odds_0 x_64 (cons_0 z_4 nil_0)) (odds_0 x_65 (cons_0 x_16 (cons_0 x_18 x_19))) (bmerge_0 x_66 x_64 x_65) (stitch_0 fail_0 x_63 x_66)) (bmerge_0 fail_0 (cons_0 z_4 nil_0) (cons_0 x_16 (cons_0 x_18 x_19))))))
(assert (forall ((x_76 list_0) (x_69 list_0) (x_70 list_0) (x_71 list_0) (x_72 list_0) (x_73 list_0) (x_74 list_0) (fail_0 list_0) (x_16 Nat_0) (z_4 Nat_0))
	(=> (and (sort_0 x_76 z_4 x_16) (evens_0 x_69 (cons_0 z_4 nil_0)) (evens_0 x_70 (cons_0 x_16 nil_0)) (bmerge_0 x_71 x_69 x_70) (odds_0 x_72 (cons_0 z_4 nil_0)) (odds_0 x_73 (cons_0 x_16 nil_0)) (bmerge_0 x_74 x_72 x_73) (stitch_0 fail_0 x_71 x_74)) (bmerge_0 x_76 (cons_0 z_4 nil_0) (cons_0 x_16 nil_0)))))
(assert (forall ((z_4 Nat_0) (x_15 list_0))
	(bmerge_0 (cons_0 z_4 x_15) (cons_0 z_4 x_15) nil_0)))
(assert (forall ((y_8 list_0))
	(bmerge_0 nil_0 nil_0 y_8)))
(assert (forall ((x_80 list_0) (x_81 list_0) (x_82 list_0) (x_83 list_0) (x_84 list_0) (x_23 Nat_0) (x_24 list_0) (y_9 Nat_0))
	(=> (and (evens_0 x_81 (cons_0 y_9 (cons_0 x_23 x_24))) (bsort_0 x_82 x_81) (odds_0 x_83 (cons_0 y_9 (cons_0 x_23 x_24))) (bsort_0 x_84 x_83) (bmerge_0 x_80 x_82 x_84)) (bsort_0 x_80 (cons_0 y_9 (cons_0 x_23 x_24))))))
(assert (forall ((y_9 Nat_0))
	(bsort_0 (cons_0 y_9 nil_0) (cons_0 y_9 nil_0))))
(assert (bsort_0 nil_0 nil_0))
(assert (forall ((x_88 list_0) (x_89 list_0) (xs_6 list_0))
	(=> (and (diseqlist_0 x_88 x_89) (bsort_0 x_88 xs_6) (isort_0 x_89 xs_6)) false)))
(check-sat)
(get-model)
