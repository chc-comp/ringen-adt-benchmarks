(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_0 ) (S_0 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_115 Nat_1) (x_114 Nat_1))
	(=> (= x_115 (S_0 x_114))
	    (unS_1 x_114 x_115))))
(assert (isZ_0 Z_0))
(assert (forall ((x_116 Nat_1))
	(isS_0 (S_0 x_116))))
(assert (forall ((x_117 Nat_1))
	(diseqNat_0 Z_0 (S_0 x_117))))
(assert (forall ((x_118 Nat_1))
	(diseqNat_0 (S_0 x_118) Z_0)))
(assert (forall ((x_119 Nat_1) (x_120 Nat_1))
	(=> (diseqNat_0 x_119 x_120)
	    (diseqNat_0 (S_0 x_119) (S_0 x_120)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_1 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_1 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_18 Nat_1))
	(add_0 y_18 Z_0 y_18)))
(assert (forall ((x_112 Nat_1) (y_18 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_112 y_18)
	    (add_0 (S_0 r_0) (S_0 x_112) y_18))))
(assert (forall ((y_18 Nat_1))
	(minus_1 Z_0 Z_0 y_18)))
(assert (forall ((x_112 Nat_1) (y_18 Nat_1) (r_0 Nat_1))
	(=> (minus_1 r_0 x_112 y_18)
	    (minus_1 (S_0 r_0) (S_0 x_112) y_18))))
(assert (forall ((y_18 Nat_1))
	(le_0 Z_0 y_18)))
(assert (forall ((x_112 Nat_1) (y_18 Nat_1))
	(=> (le_0 x_112 y_18)
	    (le_0 (S_0 x_112) (S_0 y_18)))))
(assert (forall ((y_18 Nat_1))
	(ge_0 y_18 Z_0)))
(assert (forall ((x_112 Nat_1) (y_18 Nat_1))
	(=> (ge_0 x_112 y_18)
	    (ge_0 (S_0 x_112) (S_0 y_18)))))
(assert (forall ((y_18 Nat_1))
	(lt_1 Z_0 (S_0 y_18))))
(assert (forall ((x_112 Nat_1) (y_18 Nat_1))
	(=> (lt_1 x_112 y_18)
	    (lt_1 (S_0 x_112) (S_0 y_18)))))
(assert (forall ((y_18 Nat_1))
	(gt_0 (S_0 y_18) Z_0)))
(assert (forall ((x_112 Nat_1) (y_18 Nat_1))
	(=> (gt_0 x_112 y_18)
	    (gt_0 (S_0 x_112) (S_0 y_18)))))
(assert (forall ((y_18 Nat_1))
	(mult_0 Z_0 Z_0 y_18)))
(assert (forall ((x_112 Nat_1) (y_18 Nat_1) (r_0 Nat_1) (z_12 Nat_1))
	(=>	(and (mult_0 r_0 x_112 y_18)
			(add_0 z_12 r_0 y_18))
		(mult_0 z_12 (S_0 x_112) y_18))))
(assert (forall ((x_112 Nat_1) (y_18 Nat_1))
	(=> (lt_1 x_112 y_18)
	    (div_0 Z_0 x_112 y_18))))
(assert (forall ((x_112 Nat_1) (y_18 Nat_1) (r_0 Nat_1) (z_12 Nat_1))
	(=>	(and (ge_0 x_112 y_18)
			(minus_1 z_12 x_112 y_18)
			(div_0 r_0 z_12 y_18))
		(div_0 (S_0 r_0) x_112 y_18))))
(assert (forall ((x_112 Nat_1) (y_18 Nat_1))
	(=> (lt_1 x_112 y_18)
	    (mod_0 x_112 x_112 y_18))))
(assert (forall ((x_112 Nat_1) (y_18 Nat_1) (r_0 Nat_1) (z_12 Nat_1))
	(=>	(and (ge_0 x_112 y_18)
			(minus_1 z_12 x_112 y_18)
			(mod_0 r_0 z_12 y_18))
		(mod_0 r_0 x_112 y_18))))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_123 Nat_0) (x_122 Nat_0))
	(=> (= x_123 (succ_0 x_122))
	    (p_1 x_122 x_123))))
(assert (iszero_0 zero_0))
(assert (forall ((x_124 Nat_0))
	(issucc_0 (succ_0 x_124))))
(assert (forall ((x_125 Nat_0))
	(diseqNat_1 zero_0 (succ_0 x_125))))
(assert (forall ((x_126 Nat_0))
	(diseqNat_1 (succ_0 x_126) zero_0)))
(assert (forall ((x_127 Nat_0) (x_128 Nat_0))
	(=> (diseqNat_1 x_127 x_128)
	    (diseqNat_1 (succ_0 x_127) (succ_0 x_128)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_132 list_0) (x_130 Nat_0) (x_131 list_0))
	(=> (= x_132 (cons_0 x_130 x_131))
	    (head_1 x_130 x_132))))
(assert (forall ((x_132 list_0) (x_130 Nat_0) (x_131 list_0))
	(=> (= x_132 (cons_0 x_130 x_131))
	    (tail_1 x_131 x_132))))
(assert (isnil_0 nil_0))
(assert (forall ((x_133 Nat_0) (x_134 list_0))
	(iscons_0 (cons_0 x_133 x_134))))
(assert (forall ((x_135 Nat_0) (x_136 list_0))
	(diseqlist_0 nil_0 (cons_0 x_135 x_136))))
(assert (forall ((x_137 Nat_0) (x_138 list_0))
	(diseqlist_0 (cons_0 x_137 x_138) nil_0)))
(assert (forall ((x_139 Nat_0) (x_140 list_0) (x_141 Nat_0) (x_142 list_0))
	(=> (diseqNat_1 x_139 x_141)
	    (diseqlist_0 (cons_0 x_139 x_140) (cons_0 x_141 x_142)))))
(assert (forall ((x_139 Nat_0) (x_140 list_0) (x_141 Nat_0) (x_142 list_0))
	(=> (diseqlist_0 x_140 x_142)
	    (diseqlist_0 (cons_0 x_139 x_140) (cons_0 x_141 x_142)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 list_0) (projpair_1 list_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (list_0 pair_0) Bool)
(declare-fun projpair_3 (list_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_145 pair_0) (x_143 list_0) (x_144 list_0))
	(=> (= x_145 (pair_1 x_143 x_144))
	    (projpair_2 x_143 x_145))))
(assert (forall ((x_145 pair_0) (x_143 list_0) (x_144 list_0))
	(=> (= x_145 (pair_1 x_143 x_144))
	    (projpair_3 x_144 x_145))))
(assert (forall ((x_146 list_0) (x_147 list_0))
	(ispair_0 (pair_1 x_146 x_147))))
(assert (forall ((x_148 list_0) (x_149 list_0) (x_150 list_0) (x_151 list_0))
	(=> (diseqlist_0 x_148 x_150)
	    (diseqpair_0 (pair_1 x_148 x_149) (pair_1 x_150 x_151)))))
(assert (forall ((x_148 list_0) (x_149 list_0) (x_150 list_0) (x_151 list_0))
	(=> (diseqlist_0 x_149 x_151)
	    (diseqpair_0 (pair_1 x_148 x_149) (pair_1 x_150 x_151)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (z_1 Nat_0) (xs_0 list_0) (x_26 list_0) (x_27 list_0))
	(=>	(and (= x_26 (cons_0 z_1 x_27))
			(take_0 x_27 z_0 xs_0)
			(= x_0 (succ_0 z_0))
			(= y_0 (cons_0 z_1 xs_0)))
		(take_0 x_26 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (x_28 list_0))
	(=>	(and (= x_28 nil_0)
			(= x_0 (succ_0 z_0))
			(= y_0 nil_0))
		(take_0 x_28 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_29 list_0))
	(=>	(and (= x_29 nil_0)
			(= x_0 zero_0))
		(take_0 x_29 x_0 y_0))))
(declare-fun plus_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (z_2 Nat_0) (x_30 Nat_0) (x_31 Nat_0))
	(=>	(and (= x_30 (succ_0 x_31))
			(plus_0 x_31 z_2 y_1)
			(= x_1 (succ_0 z_2)))
		(plus_0 x_30 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (x_32 Nat_0))
	(=>	(and (= x_32 y_1)
			(= x_1 zero_0))
		(plus_0 x_32 x_1 y_1))))
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_2 Nat_0) (y_2 Nat_0) (z_3 Nat_0) (y_3 Nat_0) (x_33 Nat_0) (x_34 Nat_0))
	(=>	(and (= x_33 x_34)
			(minus_0 x_34 z_3 y_3)
			(= x_2 (succ_0 z_3))
			(= y_2 (succ_0 y_3)))
		(minus_0 x_33 x_2 y_2))))
(assert (forall ((x_2 Nat_0) (y_2 Nat_0) (z_3 Nat_0) (x_35 Nat_0))
	(=>	(and (= x_35 zero_0)
			(= x_2 (succ_0 z_3))
			(= y_2 zero_0))
		(minus_0 x_35 x_2 y_2))))
(assert (forall ((x_2 Nat_0) (y_2 Nat_0) (x_36 Nat_0))
	(=>	(and (= x_36 zero_0)
			(= x_2 zero_0))
		(minus_0 x_36 x_2 y_2))))
(declare-fun lt_0 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_3 Nat_0) (y_4 Nat_0) (z_4 Nat_0) (n_0 Nat_0) (x_37 Bool) (x_38 Bool))
	(=>	(and (= x_37 x_38)
			(lt_0 x_38 n_0 z_4)
			(= y_4 (succ_0 z_4))
			(= x_3 (succ_0 n_0)))
		(lt_0 x_37 x_3 y_4))))
(assert (forall ((x_3 Nat_0) (y_4 Nat_0) (z_4 Nat_0) (x_39 Bool))
	(=>	(and (= x_39 true)
			(= y_4 (succ_0 z_4))
			(= x_3 zero_0))
		(lt_0 x_39 x_3 y_4))))
(assert (forall ((x_3 Nat_0) (y_4 Nat_0) (x_40 Bool))
	(=>	(and (= x_40 false)
			(= y_4 zero_0))
		(lt_0 x_40 x_3 y_4))))
(declare-fun leq_0 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_4 Nat_0) (y_5 Nat_0) (z_5 Nat_0) (x_5 Nat_0) (x_41 Bool) (x_42 Bool))
	(=>	(and (= x_41 x_42)
			(leq_0 x_42 z_5 x_5)
			(= x_4 (succ_0 z_5))
			(= y_5 (succ_0 x_5)))
		(leq_0 x_41 x_4 y_5))))
(assert (forall ((x_4 Nat_0) (y_5 Nat_0) (z_5 Nat_0) (x_43 Bool))
	(=>	(and (= x_43 false)
			(= x_4 (succ_0 z_5))
			(= y_5 zero_0))
		(leq_0 x_43 x_4 y_5))))
(assert (forall ((x_4 Nat_0) (y_5 Nat_0) (x_44 Bool))
	(=>	(and (= x_44 true)
			(= x_4 zero_0))
		(leq_0 x_44 x_4 y_5))))
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_6 Nat_0) (y_6 Nat_0) (x_46 list_0) (x_45 Bool))
	(=>	(and (= x_46 (cons_0 x_6 (cons_0 y_6 nil_0)))
			(= x_45 true)
			(leq_0 x_45 x_6 y_6))
		(sort_0 x_46 x_6 y_6))))
(assert (forall ((x_6 Nat_0) (y_6 Nat_0) (x_48 list_0) (x_47 Bool))
	(=>	(and (= x_48 (cons_0 y_6 (cons_0 x_6 nil_0)))
			(= x_47 false)
			(leq_0 x_47 x_6 y_6))
		(sort_0 x_48 x_6 y_6))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_7 list_0) (y_7 Nat_0) (l_0 list_0) (x_49 Nat_0) (x_50 Nat_0) (x_51 Nat_0))
	(=>	(and (= x_49 x_51)
			(length_0 x_50 l_0)
			(plus_0 x_51 (succ_0 zero_0) x_50)
			(= x_7 (cons_0 y_7 l_0)))
		(length_0 x_49 x_7))))
(assert (forall ((x_7 list_0) (x_52 Nat_0))
	(=>	(and (= x_52 zero_0)
			(= x_7 nil_0))
		(length_0 x_52 x_7))))
(declare-fun idiv_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_8 Nat_0) (y_8 Nat_0) (x_54 Nat_0) (x_53 Bool))
	(=>	(and (= x_54 zero_0)
			(= x_53 true)
			(lt_0 x_53 x_8 y_8))
		(idiv_0 x_54 x_8 y_8))))
(assert (forall ((x_8 Nat_0) (y_8 Nat_0) (x_56 Nat_0) (x_57 Nat_0) (x_58 Nat_0) (x_55 Bool))
	(=>	(and (= x_56 (succ_0 x_58))
			(minus_0 x_57 x_8 y_8)
			(idiv_0 x_58 x_57 y_8)
			(= x_55 false)
			(lt_0 x_55 x_8 y_8))
		(idiv_0 x_56 x_8 y_8))))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_9 Nat_0) (y_9 list_0) (z_6 Nat_0) (z_7 Nat_0) (xs_1 list_0) (x_59 list_0) (x_60 list_0))
	(=>	(and (= x_59 x_60)
			(drop_0 x_60 z_6 xs_1)
			(= x_9 (succ_0 z_6))
			(= y_9 (cons_0 z_7 xs_1)))
		(drop_0 x_59 x_9 y_9))))
(assert (forall ((x_9 Nat_0) (y_9 list_0) (z_6 Nat_0) (x_61 list_0))
	(=>	(and (= x_61 nil_0)
			(= x_9 (succ_0 z_6))
			(= y_9 nil_0))
		(drop_0 x_61 x_9 y_9))))
(assert (forall ((x_9 Nat_0) (y_9 list_0) (x_62 list_0))
	(=>	(and (= x_62 y_9)
			(= x_9 zero_0))
		(drop_0 x_62 x_9 y_9))))
(declare-fun splitAt_0 (pair_0 Nat_0 list_0) Bool)
(assert (forall ((x_10 Nat_0) (y_10 list_0) (x_63 pair_0) (x_64 list_0) (x_65 list_0))
	(=>	(and (= x_63 (pair_1 x_64 x_65))
			(take_0 x_64 x_10 y_10)
			(drop_0 x_65 x_10 y_10))
		(splitAt_0 x_63 x_10 y_10))))
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_11 Nat_0) (y_11 list_0) (z_8 Nat_0) (ys_0 list_0) (x_66 Nat_0) (x_67 Nat_0) (x_68 Nat_0))
	(=>	(and (= x_66 x_68)
			(count_0 x_67 x_11 ys_0)
			(plus_0 x_68 (succ_0 zero_0) x_67)
			(= y_11 (cons_0 z_8 ys_0))
			(= x_11 z_8))
		(count_0 x_66 x_11 y_11))))
(assert (forall ((x_11 Nat_0) (y_11 list_0) (z_8 Nat_0) (ys_0 list_0) (x_69 Nat_0) (x_70 Nat_0))
	(=>	(and (= x_69 x_70)
			(count_0 x_70 x_11 ys_0)
			(= y_11 (cons_0 z_8 ys_0))
			(diseqNat_1 x_11 z_8))
		(count_0 x_69 x_11 y_11))))
(assert (forall ((x_11 Nat_0) (y_11 list_0) (x_71 Nat_0))
	(=>	(and (= x_71 zero_0)
			(= y_11 nil_0))
		(count_0 x_71 x_11 y_11))))
(declare-fun x_12 (list_0 list_0 list_0) Bool)
(assert (forall ((x_13 list_0) (y_12 list_0) (z_9 Nat_0) (xs_2 list_0) (x_72 list_0) (x_73 list_0))
	(=>	(and (= x_72 (cons_0 z_9 x_73))
			(x_12 x_73 xs_2 y_12)
			(= x_13 (cons_0 z_9 xs_2)))
		(x_12 x_72 x_13 y_12))))
(assert (forall ((x_13 list_0) (y_12 list_0) (x_74 list_0))
	(=>	(and (= x_74 y_12)
			(= x_13 nil_0))
		(x_12 x_74 x_13 y_12))))
(declare-fun reverse_0 (list_0 list_0) Bool)
(assert (forall ((x_14 list_0) (y_13 Nat_0) (xs_3 list_0) (x_75 list_0) (x_76 list_0) (x_77 list_0))
	(=>	(and (= x_75 x_77)
			(reverse_0 x_76 xs_3)
			(x_12 x_77 x_76 (cons_0 y_13 nil_0))
			(= x_14 (cons_0 y_13 xs_3)))
		(reverse_0 x_75 x_14))))
(assert (forall ((x_14 list_0) (x_78 list_0))
	(=>	(and (= x_78 nil_0)
			(= x_14 nil_0))
		(reverse_0 x_78 x_14))))
(declare-fun stoogesort_0 (list_0 list_0) Bool)
(declare-fun stoogesort_1 (list_0 list_0) Bool)
(declare-fun stoogesort_2 (list_0 list_0) Bool)
(assert (forall ((x_15 list_0) (ys_1 list_0) (zs_0 list_0) (x_83 list_0) (x_84 list_0) (x_85 list_0) (x_86 list_0) (x_79 Nat_0) (x_80 Nat_0) (x_81 list_0) (x_82 pair_0))
	(=>	(and (= x_83 x_86)
			(stoogesort_1 x_84 zs_0)
			(reverse_0 x_85 ys_1)
			(x_12 x_86 x_84 x_85)
			(= x_82 (pair_1 ys_1 zs_0))
			(length_0 x_79 x_15)
			(idiv_0 x_80 x_79 (succ_0 (succ_0 (succ_0 zero_0))))
			(reverse_0 x_81 x_15)
			(splitAt_0 x_82 x_80 x_81))
		(stoogesort_0 x_83 x_15))))
(assert (forall ((x_16 list_0) (y_14 Nat_0) (z_10 list_0) (y_15 Nat_0) (x_17 list_0) (x_18 Nat_0) (x_19 list_0) (x_87 list_0) (x_88 list_0) (x_89 list_0) (x_90 list_0))
	(=>	(and (= x_87 x_90)
			(stoogesort_0 x_88 (cons_0 y_14 (cons_0 y_15 (cons_0 x_18 x_19))))
			(stoogesort_2 x_89 x_88)
			(stoogesort_0 x_90 x_89)
			(= x_16 (cons_0 y_14 z_10))
			(= z_10 (cons_0 y_15 x_17))
			(= x_17 (cons_0 x_18 x_19)))
		(stoogesort_1 x_87 x_16))))
(assert (forall ((x_16 list_0) (y_14 Nat_0) (z_10 list_0) (y_15 Nat_0) (x_17 list_0) (x_91 list_0) (x_92 list_0))
	(=>	(and (= x_91 x_92)
			(sort_0 x_92 y_14 y_15)
			(= x_16 (cons_0 y_14 z_10))
			(= z_10 (cons_0 y_15 x_17))
			(= x_17 nil_0))
		(stoogesort_1 x_91 x_16))))
(assert (forall ((x_16 list_0) (y_14 Nat_0) (z_10 list_0) (x_93 list_0))
	(=>	(and (= x_93 (cons_0 y_14 nil_0))
			(= x_16 (cons_0 y_14 z_10))
			(= z_10 nil_0))
		(stoogesort_1 x_93 x_16))))
(assert (forall ((x_16 list_0) (x_94 list_0))
	(=>	(and (= x_94 nil_0)
			(= x_16 nil_0))
		(stoogesort_1 x_94 x_16))))
(assert (forall ((x_20 list_0) (ys_2 list_0) (zs_1 list_0) (x_98 list_0) (x_99 list_0) (x_100 list_0) (x_95 Nat_0) (x_96 Nat_0) (x_97 pair_0))
	(=>	(and (= x_98 x_100)
			(stoogesort_1 x_99 zs_1)
			(x_12 x_100 ys_2 x_99)
			(= x_97 (pair_1 ys_2 zs_1))
			(length_0 x_95 x_20)
			(idiv_0 x_96 x_95 (succ_0 (succ_0 (succ_0 zero_0))))
			(splitAt_0 x_97 x_96 x_20))
		(stoogesort_2 x_98 x_20))))
(assert (forall ((x_21 Nat_0) (y_16 Nat_0) (z_11 Nat_0) (x_101 Nat_0) (x_102 Nat_0) (x_103 Nat_0) (x_104 Nat_0))
	(=>	(and (diseqNat_1 x_102 x_104)
			(plus_0 x_101 y_16 z_11)
			(plus_0 x_102 x_21 x_101)
			(plus_0 x_103 x_21 y_16)
			(plus_0 x_104 x_103 z_11))
		false)))
(assert (forall ((x_22 Nat_0) (y_17 Nat_0) (x_105 Nat_0) (x_106 Nat_0))
	(=>	(and (diseqNat_1 x_105 x_106)
			(plus_0 x_105 x_22 y_17)
			(plus_0 x_106 y_17 x_22))
		false)))
(assert (forall ((x_23 Nat_0) (x_107 Nat_0))
	(=>	(and (diseqNat_1 x_107 x_23)
			(plus_0 x_107 x_23 zero_0))
		false)))
(assert (forall ((x_24 Nat_0) (x_108 Nat_0))
	(=>	(and (diseqNat_1 x_108 x_24)
			(plus_0 x_108 zero_0 x_24))
		false)))
(assert (forall ((x_25 Nat_0) (xs_4 list_0) (x_109 list_0) (x_110 Nat_0) (x_111 Nat_0))
	(=>	(and (diseqNat_1 x_110 x_111)
			(stoogesort_1 x_109 xs_4)
			(count_0 x_110 x_25 x_109)
			(count_0 x_111 x_25 xs_4))
		false)))
(check-sat)
