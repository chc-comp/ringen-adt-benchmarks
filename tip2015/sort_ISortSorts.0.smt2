(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_20 Nat_0) (x_19 Nat_0))
	(=> (= x_20 (S_0 x_19))
	    (unS_1 x_19 x_20))))
(assert (isZ_0 Z_0))
(assert (forall ((x_21 Nat_0))
	(isS_0 (S_0 x_21))))
(assert (forall ((x_22 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_22))))
(assert (forall ((x_23 Nat_0))
	(diseqNat_0 (S_0 x_23) Z_0)))
(assert (forall ((x_24 Nat_0) (x_25 Nat_0))
	(=> (diseqNat_0 x_24 x_25)
	    (diseqNat_0 (S_0 x_24) (S_0 x_25)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_4 Nat_0))
	(add_0 y_4 Z_0 y_4)))
(assert (forall ((x_17 Nat_0) (y_4 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_17 y_4)
	    (add_0 (S_0 r_0) (S_0 x_17) y_4))))
(assert (forall ((y_4 Nat_0))
	(minus_0 Z_0 Z_0 y_4)))
(assert (forall ((x_17 Nat_0) (y_4 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_17 y_4)
	    (minus_0 (S_0 r_0) (S_0 x_17) y_4))))
(assert (forall ((y_4 Nat_0))
	(le_0 Z_0 y_4)))
(assert (forall ((x_17 Nat_0) (y_4 Nat_0))
	(=> (le_0 x_17 y_4)
	    (le_0 (S_0 x_17) (S_0 y_4)))))
(assert (forall ((y_4 Nat_0))
	(ge_0 y_4 Z_0)))
(assert (forall ((x_17 Nat_0) (y_4 Nat_0))
	(=> (ge_0 x_17 y_4)
	    (ge_0 (S_0 x_17) (S_0 y_4)))))
(assert (forall ((y_4 Nat_0))
	(lt_0 Z_0 (S_0 y_4))))
(assert (forall ((x_17 Nat_0) (y_4 Nat_0))
	(=> (lt_0 x_17 y_4)
	    (lt_0 (S_0 x_17) (S_0 y_4)))))
(assert (forall ((y_4 Nat_0))
	(gt_0 (S_0 y_4) Z_0)))
(assert (forall ((x_17 Nat_0) (y_4 Nat_0))
	(=> (gt_0 x_17 y_4)
	    (gt_0 (S_0 x_17) (S_0 y_4)))))
(assert (forall ((y_4 Nat_0))
	(mult_0 Z_0 Z_0 y_4)))
(assert (forall ((x_17 Nat_0) (y_4 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (mult_0 r_0 x_17 y_4)
			(add_0 z_2 r_0 y_4))
		(mult_0 z_2 (S_0 x_17) y_4))))
(assert (forall ((x_17 Nat_0) (y_4 Nat_0))
	(=> (lt_0 x_17 y_4)
	    (div_0 Z_0 x_17 y_4))))
(assert (forall ((x_17 Nat_0) (y_4 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (ge_0 x_17 y_4)
			(minus_0 z_2 x_17 y_4)
			(div_0 r_0 z_2 y_4))
		(div_0 (S_0 r_0) x_17 y_4))))
(assert (forall ((x_17 Nat_0) (y_4 Nat_0))
	(=> (lt_0 x_17 y_4)
	    (mod_0 x_17 x_17 y_4))))
(assert (forall ((x_17 Nat_0) (y_4 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (ge_0 x_17 y_4)
			(minus_0 z_2 x_17 y_4)
			(mod_0 r_0 z_2 y_4))
		(mod_0 r_0 x_17 y_4))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_29 list_0) (x_27 Nat_0) (x_28 list_0))
	(=> (= x_29 (cons_0 x_27 x_28))
	    (head_1 x_27 x_29))))
(assert (forall ((x_29 list_0) (x_27 Nat_0) (x_28 list_0))
	(=> (= x_29 (cons_0 x_27 x_28))
	    (tail_1 x_28 x_29))))
(assert (isnil_0 nil_0))
(assert (forall ((x_30 Nat_0) (x_31 list_0))
	(iscons_0 (cons_0 x_30 x_31))))
(assert (forall ((x_32 Nat_0) (x_33 list_0))
	(diseqlist_0 nil_0 (cons_0 x_32 x_33))))
(assert (forall ((x_34 Nat_0) (x_35 list_0))
	(diseqlist_0 (cons_0 x_34 x_35) nil_0)))
(assert (forall ((x_36 Nat_0) (x_37 list_0) (x_38 Nat_0) (x_39 list_0))
	(=> (diseqNat_0 x_36 x_38)
	    (diseqlist_0 (cons_0 x_36 x_37) (cons_0 x_38 x_39)))))
(assert (forall ((x_36 Nat_0) (x_37 list_0) (x_38 Nat_0) (x_39 list_0))
	(=> (diseqlist_0 x_37 x_39)
	    (diseqlist_0 (cons_0 x_36 x_37) (cons_0 x_38 x_39)))))
(declare-fun ordered_0 (Bool list_0) Bool)
(assert (forall ((x_0 list_0) (y_0 Nat_0) (z_0 list_0) (y_1 Nat_0) (xs_0 list_0) (x_3 Bool) (x_4 Bool))
	(=>	(and (= x_3 (and (le_0 y_0 y_1) x_4))
			(ordered_0 x_4 (cons_0 y_1 xs_0))
			(= x_0 (cons_0 y_0 z_0))
			(= z_0 (cons_0 y_1 xs_0)))
		(ordered_0 x_3 x_0))))
(assert (forall ((x_0 list_0) (y_0 Nat_0) (z_0 list_0) (x_5 Bool))
	(=>	(and (= x_5 true)
			(= x_0 (cons_0 y_0 z_0))
			(= z_0 nil_0))
		(ordered_0 x_5 x_0))))
(assert (forall ((x_0 list_0) (x_6 Bool))
	(=>	(and (= x_6 true)
			(= x_0 nil_0))
		(ordered_0 x_6 x_0))))
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_1 Nat_0) (y_2 list_0) (z_1 Nat_0) (xs_1 list_0) (x_7 list_0))
	(=>	(and (= x_7 (cons_0 x_1 (cons_0 z_1 xs_1)))
			(= y_2 (cons_0 z_1 xs_1))
			(le_0 x_1 z_1))
		(insert_0 x_7 x_1 y_2))))
(assert (forall ((x_1 Nat_0) (y_2 list_0) (z_1 Nat_0) (xs_1 list_0) (x_8 list_0) (x_9 list_0))
	(=>	(and (= x_8 (cons_0 z_1 x_9))
			(insert_0 x_9 x_1 xs_1)
			(= y_2 (cons_0 z_1 xs_1))
			(gt_0 x_1 z_1))
		(insert_0 x_8 x_1 y_2))))
(assert (forall ((x_1 Nat_0) (y_2 list_0) (x_10 list_0))
	(=>	(and (= x_10 (cons_0 x_1 nil_0))
			(= y_2 nil_0))
		(insert_0 x_10 x_1 y_2))))
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_2 list_0) (y_3 Nat_0) (xs_2 list_0) (x_11 list_0) (x_12 list_0) (x_13 list_0))
	(=>	(and (= x_11 x_13)
			(isort_0 x_12 xs_2)
			(insert_0 x_13 y_3 x_12)
			(= x_2 (cons_0 y_3 xs_2)))
		(isort_0 x_11 x_2))))
(assert (forall ((x_2 list_0) (x_14 list_0))
	(=>	(and (= x_14 nil_0)
			(= x_2 nil_0))
		(isort_0 x_14 x_2))))
(assert (forall ((xs_3 list_0) (x_15 list_0) (x_16 Bool))
	(=>	(and (= x_16 false)
			(isort_0 x_15 xs_3)
			(ordered_0 x_16 x_15))
		false)))
(check-sat)
