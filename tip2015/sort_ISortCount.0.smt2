(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_24 Nat_0) (x_23 Nat_0))
	(=> (= x_24 (S_0 x_23))
	    (unS_1 x_23 x_24))))
(assert (isZ_0 Z_0))
(assert (forall ((x_25 Nat_0))
	(isS_0 (S_0 x_25))))
(assert (forall ((x_26 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_26))))
(assert (forall ((x_27 Nat_0))
	(diseqNat_0 (S_0 x_27) Z_0)))
(assert (forall ((x_28 Nat_0) (x_29 Nat_0))
	(=> (diseqNat_0 x_28 x_29)
	    (diseqNat_0 (S_0 x_28) (S_0 x_29)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_3 Nat_0))
	(add_0 y_3 Z_0 y_3)))
(assert (forall ((x_20 Nat_0) (y_3 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_20 y_3)
	    (add_0 (S_0 r_0) (S_0 x_20) y_3))))
(assert (forall ((y_3 Nat_0))
	(minus_0 Z_0 Z_0 y_3)))
(assert (forall ((x_20 Nat_0) (y_3 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_20 y_3)
	    (minus_0 (S_0 r_0) (S_0 x_20) y_3))))
(assert (forall ((y_3 Nat_0))
	(le_0 Z_0 y_3)))
(assert (forall ((x_20 Nat_0) (y_3 Nat_0))
	(=> (le_0 x_20 y_3)
	    (le_0 (S_0 x_20) (S_0 y_3)))))
(assert (forall ((y_3 Nat_0))
	(ge_0 y_3 Z_0)))
(assert (forall ((x_20 Nat_0) (y_3 Nat_0))
	(=> (ge_0 x_20 y_3)
	    (ge_0 (S_0 x_20) (S_0 y_3)))))
(assert (forall ((y_3 Nat_0))
	(lt_0 Z_0 (S_0 y_3))))
(assert (forall ((x_20 Nat_0) (y_3 Nat_0))
	(=> (lt_0 x_20 y_3)
	    (lt_0 (S_0 x_20) (S_0 y_3)))))
(assert (forall ((y_3 Nat_0))
	(gt_0 (S_0 y_3) Z_0)))
(assert (forall ((x_20 Nat_0) (y_3 Nat_0))
	(=> (gt_0 x_20 y_3)
	    (gt_0 (S_0 x_20) (S_0 y_3)))))
(assert (forall ((y_3 Nat_0))
	(mult_0 Z_0 Z_0 y_3)))
(assert (forall ((x_20 Nat_0) (y_3 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (mult_0 r_0 x_20 y_3)
			(add_0 z_2 r_0 y_3))
		(mult_0 z_2 (S_0 x_20) y_3))))
(assert (forall ((x_20 Nat_0) (y_3 Nat_0))
	(=> (lt_0 x_20 y_3)
	    (div_0 Z_0 x_20 y_3))))
(assert (forall ((x_20 Nat_0) (y_3 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (ge_0 x_20 y_3)
			(minus_0 z_2 x_20 y_3)
			(div_0 r_0 z_2 y_3))
		(div_0 (S_0 r_0) x_20 y_3))))
(assert (forall ((x_20 Nat_0) (y_3 Nat_0))
	(=> (lt_0 x_20 y_3)
	    (mod_0 x_20 x_20 y_3))))
(assert (forall ((x_20 Nat_0) (y_3 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (ge_0 x_20 y_3)
			(minus_0 z_2 x_20 y_3)
			(mod_0 r_0 z_2 y_3))
		(mod_0 r_0 x_20 y_3))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_33 list_0) (x_31 Nat_0) (x_32 list_0))
	(=> (= x_33 (cons_0 x_31 x_32))
	    (head_1 x_31 x_33))))
(assert (forall ((x_33 list_0) (x_31 Nat_0) (x_32 list_0))
	(=> (= x_33 (cons_0 x_31 x_32))
	    (tail_1 x_32 x_33))))
(assert (isnil_0 nil_0))
(assert (forall ((x_34 Nat_0) (x_35 list_0))
	(iscons_0 (cons_0 x_34 x_35))))
(assert (forall ((x_36 Nat_0) (x_37 list_0))
	(diseqlist_0 nil_0 (cons_0 x_36 x_37))))
(assert (forall ((x_38 Nat_0) (x_39 list_0))
	(diseqlist_0 (cons_0 x_38 x_39) nil_0)))
(assert (forall ((x_40 Nat_0) (x_41 list_0) (x_42 Nat_0) (x_43 list_0))
	(=> (diseqNat_0 x_40 x_42)
	    (diseqlist_0 (cons_0 x_40 x_41) (cons_0 x_42 x_43)))))
(assert (forall ((x_40 Nat_0) (x_41 list_0) (x_42 Nat_0) (x_43 list_0))
	(=> (diseqlist_0 x_41 x_43)
	    (diseqlist_0 (cons_0 x_40 x_41) (cons_0 x_42 x_43)))))
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (xs_0 list_0) (x_4 list_0))
	(=>	(and (= x_4 (cons_0 x_0 (cons_0 z_0 xs_0)))
			(= y_0 (cons_0 z_0 xs_0))
			(le_0 x_0 z_0))
		(insert_0 x_4 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (xs_0 list_0) (x_5 list_0) (x_6 list_0))
	(=>	(and (= x_5 (cons_0 z_0 x_6))
			(insert_0 x_6 x_0 xs_0)
			(= y_0 (cons_0 z_0 xs_0))
			(gt_0 x_0 z_0))
		(insert_0 x_5 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_7 list_0))
	(=>	(and (= x_7 (cons_0 x_0 nil_0))
			(= y_0 nil_0))
		(insert_0 x_7 x_0 y_0))))
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_1 list_0) (y_1 Nat_0) (xs_1 list_0) (x_8 list_0) (x_9 list_0) (x_10 list_0))
	(=>	(and (= x_8 x_10)
			(isort_0 x_9 xs_1)
			(insert_0 x_10 y_1 x_9)
			(= x_1 (cons_0 y_1 xs_1)))
		(isort_0 x_8 x_1))))
(assert (forall ((x_1 list_0) (x_11 list_0))
	(=>	(and (= x_11 nil_0)
			(= x_1 nil_0))
		(isort_0 x_11 x_1))))
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_2 Nat_0) (y_2 list_0) (z_1 Nat_0) (ys_0 list_0) (x_12 Nat_0) (x_13 Nat_0) (x_21 Nat_0))
	(=>	(and (= x_12 x_21)
			(count_0 x_13 x_2 ys_0)
			(= y_2 (cons_0 z_1 ys_0))
			(= x_2 z_1)
			(add_0 x_21 (S_0 Z_0) x_13))
		(count_0 x_12 x_2 y_2))))
(assert (forall ((x_2 Nat_0) (y_2 list_0) (z_1 Nat_0) (ys_0 list_0) (x_14 Nat_0) (x_15 Nat_0))
	(=>	(and (= x_14 x_15)
			(count_0 x_15 x_2 ys_0)
			(= y_2 (cons_0 z_1 ys_0))
			(diseqNat_0 x_2 z_1))
		(count_0 x_14 x_2 y_2))))
(assert (forall ((x_2 Nat_0) (y_2 list_0) (x_16 Nat_0))
	(=>	(and (= x_16 Z_0)
			(= y_2 nil_0))
		(count_0 x_16 x_2 y_2))))
(assert (forall ((x_3 Nat_0) (xs_2 list_0) (x_17 list_0) (x_18 Nat_0) (x_19 Nat_0))
	(=>	(and (diseqNat_0 x_18 x_19)
			(isort_0 x_17 xs_2)
			(count_0 x_18 x_3 x_17)
			(count_0 x_19 x_3 xs_2))
		false)))
(check-sat)
