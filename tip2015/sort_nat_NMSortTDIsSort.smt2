(set-logic HORN)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(declare-fun plus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun nmsorttdhalf_0 (Nat_0 Nat_0) Bool)
(declare-fun leq_0 (Bool_0 Nat_0 Nat_0) Bool)
(declare-fun lmerge_0 (list_0 list_0 list_0) Bool)
(declare-fun length_0 (Nat_0 list_0) Bool)
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(declare-fun isort_0 (list_0 list_0) Bool)
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(declare-fun nmsorttd_0 (list_0 list_0) Bool)
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(assert (forall ((x_96 Nat_0))
	(diseqNat_0 zero_0 (succ_0 x_96))))
(assert (forall ((x_97 Nat_0))
	(diseqNat_0 (succ_0 x_97) zero_0)))
(assert (forall ((x_98 Nat_0) (x_99 Nat_0))
	(=> (diseqNat_0 x_98 x_99) (diseqNat_0 (succ_0 x_98) (succ_0 x_99)))))
(assert (forall ((x_106 Nat_0) (x_107 list_0))
	(diseqlist_0 nil_0 (cons_0 x_106 x_107))))
(assert (forall ((x_108 Nat_0) (x_109 list_0))
	(diseqlist_0 (cons_0 x_108 x_109) nil_0)))
(assert (forall ((x_110 Nat_0) (x_111 list_0) (x_112 Nat_0) (x_113 list_0))
	(=> (diseqNat_0 x_110 x_112) (diseqlist_0 (cons_0 x_110 x_111) (cons_0 x_112 x_113)))))
(assert (forall ((x_110 Nat_0) (x_111 list_0) (x_112 Nat_0) (x_113 list_0))
	(=> (diseqlist_0 x_111 x_113) (diseqlist_0 (cons_0 x_110 x_111) (cons_0 x_112 x_113)))))
(assert (forall ((x_22 list_0) (z_1 Nat_0) (xs_0 list_0) (z_0 Nat_0))
	(=> (take_0 x_22 z_0 xs_0) (take_0 (cons_0 z_1 x_22) (succ_0 z_0) (cons_0 z_1 xs_0)))))
(assert (forall ((z_0 Nat_0))
	(take_0 nil_0 (succ_0 z_0) nil_0)))
(assert (forall ((y_0 list_0))
	(take_0 nil_0 zero_0 y_0)))
(assert (forall ((x_26 Nat_0) (z_2 Nat_0) (y_1 Nat_0))
	(=> (plus_0 x_26 z_2 y_1) (plus_0 (succ_0 x_26) (succ_0 z_2) y_1))))
(assert (forall ((x_27 Nat_0))
	(plus_0 x_27 zero_0 x_27)))
(assert (forall ((x_28 Nat_0) (y_3 Nat_0) (z_3 Nat_0))
	(=> (minus_0 x_28 z_3 y_3) (minus_0 x_28 (succ_0 z_3) (succ_0 y_3)))))
(assert (forall ((z_3 Nat_0))
	(minus_0 zero_0 (succ_0 z_3) zero_0)))
(assert (forall ((y_2 Nat_0))
	(minus_0 zero_0 zero_0 y_2)))
(assert (nmsorttdhalf_0 zero_0 (succ_0 zero_0)))
(assert (forall ((x_33 Nat_0) (x_34 Nat_0) (x_35 Nat_0) (y_4 Nat_0))
	(=> (and (diseqNat_0 (succ_0 y_4) (succ_0 zero_0)) (minus_0 x_34 (succ_0 y_4) (succ_0 (succ_0 zero_0))) (nmsorttdhalf_0 x_35 x_34) (plus_0 x_33 (succ_0 zero_0) x_35)) (nmsorttdhalf_0 x_33 (succ_0 y_4)))))
(assert (nmsorttdhalf_0 zero_0 (succ_0 zero_0)))
(assert (=> (diseqNat_0 zero_0 (succ_0 zero_0)) (nmsorttdhalf_0 zero_0 zero_0)))
(assert (forall ((x_39 Bool_0) (x_5 Nat_0) (z_4 Nat_0))
	(=> (leq_0 x_39 z_4 x_5) (leq_0 x_39 (succ_0 z_4) (succ_0 x_5)))))
(assert (forall ((z_4 Nat_0))
	(leq_0 false_0 (succ_0 z_4) zero_0)))
(assert (forall ((y_5 Nat_0))
	(leq_0 true_0 zero_0 y_5)))
(assert (forall ((x_45 list_0) (x_8 Nat_0) (x_9 list_0) (z_5 Nat_0) (x_7 list_0))
	(=> (and (lmerge_0 x_45 x_7 (cons_0 x_8 x_9)) (leq_0 true_0 z_5 x_8)) (lmerge_0 (cons_0 z_5 x_45) (cons_0 z_5 x_7) (cons_0 x_8 x_9)))))
(assert (forall ((x_48 list_0) (x_46 Bool_0) (x_8 Nat_0) (x_9 list_0) (z_5 Nat_0) (x_7 list_0))
	(=> (and (diseqBool_0 x_46 true_0) (lmerge_0 x_48 (cons_0 z_5 x_7) x_9) (leq_0 x_46 z_5 x_8)) (lmerge_0 (cons_0 x_8 x_48) (cons_0 z_5 x_7) (cons_0 x_8 x_9)))))
(assert (forall ((z_5 Nat_0) (x_7 list_0))
	(lmerge_0 (cons_0 z_5 x_7) (cons_0 z_5 x_7) nil_0)))
(assert (forall ((x_50 list_0))
	(lmerge_0 x_50 nil_0 x_50)))
(assert (forall ((x_51 Nat_0) (x_52 Nat_0) (y_7 Nat_0) (l_0 list_0))
	(=> (and (length_0 x_52 l_0) (plus_0 x_51 (succ_0 zero_0) x_52)) (length_0 x_51 (cons_0 y_7 l_0)))))
(assert (length_0 zero_0 nil_0))
(assert (forall ((z_6 Nat_0) (xs_1 list_0) (x_11 Nat_0))
	(=> (leq_0 true_0 x_11 z_6) (insert_0 (cons_0 x_11 (cons_0 z_6 xs_1)) x_11 (cons_0 z_6 xs_1)))))
(assert (forall ((x_59 list_0) (x_57 Bool_0) (z_6 Nat_0) (xs_1 list_0) (x_11 Nat_0))
	(=> (and (diseqBool_0 x_57 true_0) (insert_0 x_59 x_11 xs_1) (leq_0 x_57 x_11 z_6)) (insert_0 (cons_0 z_6 x_59) x_11 (cons_0 z_6 xs_1)))))
(assert (forall ((x_11 Nat_0))
	(insert_0 (cons_0 x_11 nil_0) x_11 nil_0)))
(assert (forall ((x_61 list_0) (x_62 list_0) (y_9 Nat_0) (xs_2 list_0))
	(=> (and (isort_0 x_62 xs_2) (insert_0 x_61 y_9 x_62)) (isort_0 x_61 (cons_0 y_9 xs_2)))))
(assert (isort_0 nil_0 nil_0))
(assert (forall ((x_65 list_0) (z_8 Nat_0) (xs_3 list_0) (z_7 Nat_0))
	(=> (drop_0 x_65 z_7 xs_3) (drop_0 x_65 (succ_0 z_7) (cons_0 z_8 xs_3)))))
(assert (forall ((z_7 Nat_0))
	(drop_0 nil_0 (succ_0 z_7) nil_0)))
(assert (forall ((x_68 list_0))
	(drop_0 x_68 zero_0 x_68)))
(assert (forall ((x_71 list_0) (x_72 list_0) (x_73 list_0) (x_74 list_0) (x_75 list_0) (x_69 Nat_0) (k_0 Nat_0) (x_15 Nat_0) (x_16 list_0) (y_11 Nat_0))
	(=> (and (take_0 x_72 k_0 (cons_0 y_11 (cons_0 x_15 x_16))) (nmsorttd_0 x_73 x_72) (drop_0 x_74 k_0 (cons_0 y_11 (cons_0 x_15 x_16))) (nmsorttd_0 x_75 x_74) (lmerge_0 x_71 x_73 x_75) (length_0 x_69 (cons_0 y_11 (cons_0 x_15 x_16))) (nmsorttdhalf_0 k_0 x_69)) (nmsorttd_0 x_71 (cons_0 y_11 (cons_0 x_15 x_16))))))
(assert (forall ((y_11 Nat_0))
	(nmsorttd_0 (cons_0 y_11 nil_0) (cons_0 y_11 nil_0))))
(assert (nmsorttd_0 nil_0 nil_0))
(assert (forall ((x_79 Nat_0) (x_80 Nat_0) (x_81 Nat_0) (x_82 Nat_0) (x_17 Nat_0) (y_12 Nat_0) (z_10 Nat_0))
	(=> (and (diseqNat_0 x_80 x_82) (plus_0 x_79 y_12 z_10) (plus_0 x_80 x_17 x_79) (plus_0 x_81 x_17 y_12) (plus_0 x_82 x_81 z_10)) false)))
(assert (forall ((x_83 Nat_0) (x_84 Nat_0) (x_18 Nat_0) (y_13 Nat_0))
	(=> (and (diseqNat_0 x_83 x_84) (plus_0 x_83 x_18 y_13) (plus_0 x_84 y_13 x_18)) false)))
(assert (forall ((x_85 Nat_0) (x_19 Nat_0))
	(=> (and (diseqNat_0 x_85 x_19) (plus_0 x_85 x_19 zero_0)) false)))
(assert (forall ((x_86 Nat_0) (x_20 Nat_0))
	(=> (and (diseqNat_0 x_86 x_20) (plus_0 x_86 zero_0 x_20)) false)))
(assert (forall ((x_87 list_0) (x_88 list_0) (xs_4 list_0))
	(=> (and (diseqlist_0 x_87 x_88) (nmsorttd_0 x_87 xs_4) (isort_0 x_88 xs_4)) false)))
(check-sat)
(get-model)
