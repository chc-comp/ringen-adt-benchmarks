(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_91 Nat_0) (x_90 Nat_0))
	(=> (= x_91 (S_0 x_90))
	    (unS_1 x_90 x_91))))
(assert (isZ_0 Z_0))
(assert (forall ((x_92 Nat_0))
	(isS_0 (S_0 x_92))))
(assert (forall ((x_93 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_93))))
(assert (forall ((x_94 Nat_0))
	(diseqNat_0 (S_0 x_94) Z_0)))
(assert (forall ((x_95 Nat_0) (x_96 Nat_0))
	(=> (diseqNat_0 x_95 x_96)
	    (diseqNat_0 (S_0 x_95) (S_0 x_96)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_10 Nat_0))
	(add_0 y_10 Z_0 y_10)))
(assert (forall ((x_88 Nat_0) (y_10 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_88 y_10)
	    (add_0 (S_0 r_0) (S_0 x_88) y_10))))
(assert (forall ((y_10 Nat_0))
	(minus_0 Z_0 Z_0 y_10)))
(assert (forall ((x_88 Nat_0) (y_10 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_88 y_10)
	    (minus_0 (S_0 r_0) (S_0 x_88) y_10))))
(assert (forall ((y_10 Nat_0))
	(le_0 Z_0 y_10)))
(assert (forall ((x_88 Nat_0) (y_10 Nat_0))
	(=> (le_0 x_88 y_10)
	    (le_0 (S_0 x_88) (S_0 y_10)))))
(assert (forall ((y_10 Nat_0))
	(ge_0 y_10 Z_0)))
(assert (forall ((x_88 Nat_0) (y_10 Nat_0))
	(=> (ge_0 x_88 y_10)
	    (ge_0 (S_0 x_88) (S_0 y_10)))))
(assert (forall ((y_10 Nat_0))
	(lt_0 Z_0 (S_0 y_10))))
(assert (forall ((x_88 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_88 y_10)
	    (lt_0 (S_0 x_88) (S_0 y_10)))))
(assert (forall ((y_10 Nat_0))
	(gt_0 (S_0 y_10) Z_0)))
(assert (forall ((x_88 Nat_0) (y_10 Nat_0))
	(=> (gt_0 x_88 y_10)
	    (gt_0 (S_0 x_88) (S_0 y_10)))))
(assert (forall ((y_10 Nat_0))
	(mult_0 Z_0 Z_0 y_10)))
(assert (forall ((x_88 Nat_0) (y_10 Nat_0) (r_0 Nat_0) (z_6 Nat_0))
	(=>	(and (mult_0 r_0 x_88 y_10)
			(add_0 z_6 r_0 y_10))
		(mult_0 z_6 (S_0 x_88) y_10))))
(assert (forall ((x_88 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_88 y_10)
	    (div_0 Z_0 x_88 y_10))))
(assert (forall ((x_88 Nat_0) (y_10 Nat_0) (r_0 Nat_0) (z_6 Nat_0))
	(=>	(and (ge_0 x_88 y_10)
			(minus_0 z_6 x_88 y_10)
			(div_0 r_0 z_6 y_10))
		(div_0 (S_0 r_0) x_88 y_10))))
(assert (forall ((x_88 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_88 y_10)
	    (mod_0 x_88 x_88 y_10))))
(assert (forall ((x_88 Nat_0) (y_10 Nat_0) (r_0 Nat_0) (z_6 Nat_0))
	(=>	(and (ge_0 x_88 y_10)
			(minus_0 z_6 x_88 y_10)
			(mod_0 r_0 z_6 y_10))
		(mod_0 r_0 x_88 y_10))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_100 list_0) (x_98 Nat_0) (x_99 list_0))
	(=> (= x_100 (cons_0 x_98 x_99))
	    (head_1 x_98 x_100))))
(assert (forall ((x_100 list_0) (x_98 Nat_0) (x_99 list_0))
	(=> (= x_100 (cons_0 x_98 x_99))
	    (tail_1 x_99 x_100))))
(assert (isnil_0 nil_0))
(assert (forall ((x_101 Nat_0) (x_102 list_0))
	(iscons_0 (cons_0 x_101 x_102))))
(assert (forall ((x_103 Nat_0) (x_104 list_0))
	(diseqlist_0 nil_0 (cons_0 x_103 x_104))))
(assert (forall ((x_105 Nat_0) (x_106 list_0))
	(diseqlist_0 (cons_0 x_105 x_106) nil_0)))
(assert (forall ((x_107 Nat_0) (x_108 list_0) (x_109 Nat_0) (x_110 list_0))
	(=> (diseqNat_0 x_107 x_109)
	    (diseqlist_0 (cons_0 x_107 x_108) (cons_0 x_109 x_110)))))
(assert (forall ((x_107 Nat_0) (x_108 list_0) (x_109 Nat_0) (x_110 list_0))
	(=> (diseqlist_0 x_108 x_110)
	    (diseqlist_0 (cons_0 x_107 x_108) (cons_0 x_109 x_110)))))
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_23 list_0))
	(=>	(and (= x_23 (cons_0 x_0 (cons_0 y_0 nil_0)))
			(le_0 x_0 y_0))
		(sort_0 x_23 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_24 list_0))
	(=>	(and (= x_24 (cons_0 y_0 (cons_0 x_0 nil_0)))
			(gt_0 x_0 y_0))
		(sort_0 x_24 x_0 y_0))))
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_1 Nat_0) (y_1 list_0) (z_0 Nat_0) (xs_0 list_0) (x_25 list_0))
	(=>	(and (= x_25 (cons_0 x_1 (cons_0 z_0 xs_0)))
			(= y_1 (cons_0 z_0 xs_0))
			(le_0 x_1 z_0))
		(insert_0 x_25 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 list_0) (z_0 Nat_0) (xs_0 list_0) (x_26 list_0) (x_27 list_0))
	(=>	(and (= x_26 (cons_0 z_0 x_27))
			(insert_0 x_27 x_1 xs_0)
			(= y_1 (cons_0 z_0 xs_0))
			(gt_0 x_1 z_0))
		(insert_0 x_26 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 list_0) (x_28 list_0))
	(=>	(and (= x_28 (cons_0 x_1 nil_0))
			(= y_1 nil_0))
		(insert_0 x_28 x_1 y_1))))
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_2 list_0) (y_2 Nat_0) (xs_1 list_0) (x_29 list_0) (x_30 list_0) (x_31 list_0))
	(=>	(and (= x_29 x_31)
			(isort_0 x_30 xs_1)
			(insert_0 x_31 y_2 x_30)
			(= x_2 (cons_0 y_2 xs_1)))
		(isort_0 x_29 x_2))))
(assert (forall ((x_2 list_0) (x_32 list_0))
	(=>	(and (= x_32 nil_0)
			(= x_2 nil_0))
		(isort_0 x_32 x_2))))
(declare-fun evens_0 (list_0 list_0) Bool)
(declare-fun odds_0 (list_0 list_0) Bool)
(assert (forall ((x_3 list_0) (y_3 Nat_0) (xs_2 list_0) (x_33 list_0) (x_34 list_0))
	(=>	(and (= x_33 (cons_0 y_3 x_34))
			(odds_0 x_34 xs_2)
			(= x_3 (cons_0 y_3 xs_2)))
		(evens_0 x_33 x_3))))
(assert (forall ((x_3 list_0) (x_35 list_0))
	(=>	(and (= x_35 nil_0)
			(= x_3 nil_0))
		(evens_0 x_35 x_3))))
(assert (forall ((x_4 list_0) (y_4 Nat_0) (xs_3 list_0) (x_36 list_0) (x_37 list_0))
	(=>	(and (= x_36 x_37)
			(evens_0 x_37 xs_3)
			(= x_4 (cons_0 y_4 xs_3)))
		(odds_0 x_36 x_4))))
(assert (forall ((x_4 list_0) (x_38 list_0))
	(=>	(and (= x_38 nil_0)
			(= x_4 nil_0))
		(odds_0 x_38 x_4))))
(declare-fun x_5 (list_0 list_0 list_0) Bool)
(assert (forall ((x_6 list_0) (y_5 list_0) (z_1 Nat_0) (xs_4 list_0) (x_39 list_0) (x_40 list_0))
	(=>	(and (= x_39 (cons_0 z_1 x_40))
			(x_5 x_40 xs_4 y_5)
			(= x_6 (cons_0 z_1 xs_4)))
		(x_5 x_39 x_6 y_5))))
(assert (forall ((x_6 list_0) (y_5 list_0) (x_41 list_0))
	(=>	(and (= x_41 y_5)
			(= x_6 nil_0))
		(x_5 x_41 x_6 y_5))))
(declare-fun pairs_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_7 list_0) (y_6 list_0) (z_2 Nat_0) (x_8 list_0) (x_9 Nat_0) (x_10 list_0) (x_42 list_0) (x_43 list_0) (x_44 list_0) (x_45 list_0))
	(=>	(and (= x_42 x_45)
			(sort_0 x_43 z_2 x_9)
			(pairs_0 x_44 x_8 x_10)
			(x_5 x_45 x_43 x_44)
			(= x_7 (cons_0 z_2 x_8))
			(= y_6 (cons_0 x_9 x_10)))
		(pairs_0 x_42 x_7 y_6))))
(assert (forall ((x_7 list_0) (y_6 list_0) (z_2 Nat_0) (x_8 list_0) (x_46 list_0))
	(=>	(and (= x_46 (cons_0 z_2 x_8))
			(= x_7 (cons_0 z_2 x_8))
			(= y_6 nil_0))
		(pairs_0 x_46 x_7 y_6))))
(assert (forall ((x_7 list_0) (y_6 list_0) (x_47 list_0))
	(=>	(and (= x_47 y_6)
			(= x_7 nil_0))
		(pairs_0 x_47 x_7 y_6))))
(declare-fun stitch_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_11 list_0) (y_7 list_0) (z_3 Nat_0) (xs_5 list_0) (x_48 list_0) (x_49 list_0))
	(=>	(and (= x_48 (cons_0 z_3 x_49))
			(pairs_0 x_49 xs_5 y_7)
			(= x_11 (cons_0 z_3 xs_5)))
		(stitch_0 x_48 x_11 y_7))))
(assert (forall ((x_11 list_0) (y_7 list_0) (x_50 list_0))
	(=>	(and (= x_50 y_7)
			(= x_11 nil_0))
		(stitch_0 x_50 x_11 y_7))))
(declare-fun bmerge_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_12 list_0) (y_8 list_0) (z_4 Nat_0) (x_13 list_0) (x_14 Nat_0) (x_15 list_0) (fail_0 list_0) (x_16 Nat_0) (x_17 list_0) (x_58 list_0) (x_51 list_0) (x_52 list_0) (x_53 list_0) (x_54 list_0) (x_55 list_0) (x_56 list_0) (x_57 list_0))
	(=>	(and (= x_58 fail_0)
			(= x_12 (cons_0 z_4 x_13))
			(= y_8 (cons_0 x_14 x_15))
			(= fail_0 x_57)
			(= x_13 (cons_0 x_16 x_17))
			(evens_0 x_51 (cons_0 z_4 x_13))
			(evens_0 x_52 (cons_0 x_14 x_15))
			(bmerge_0 x_53 x_51 x_52)
			(odds_0 x_54 (cons_0 z_4 x_13))
			(odds_0 x_55 (cons_0 x_14 x_15))
			(bmerge_0 x_56 x_54 x_55)
			(stitch_0 x_57 x_53 x_56))
		(bmerge_0 x_58 x_12 y_8))))
(assert (forall ((x_12 list_0) (y_8 list_0) (z_4 Nat_0) (x_13 list_0) (x_14 Nat_0) (x_15 list_0) (fail_0 list_0) (x_18 Nat_0) (x_19 list_0) (x_66 list_0) (x_59 list_0) (x_60 list_0) (x_61 list_0) (x_62 list_0) (x_63 list_0) (x_64 list_0) (x_65 list_0))
	(=>	(and (= x_66 fail_0)
			(= x_12 (cons_0 z_4 x_13))
			(= y_8 (cons_0 x_14 x_15))
			(= fail_0 x_65)
			(= x_13 nil_0)
			(= x_15 (cons_0 x_18 x_19))
			(evens_0 x_59 (cons_0 z_4 x_13))
			(evens_0 x_60 (cons_0 x_14 x_15))
			(bmerge_0 x_61 x_59 x_60)
			(odds_0 x_62 (cons_0 z_4 x_13))
			(odds_0 x_63 (cons_0 x_14 x_15))
			(bmerge_0 x_64 x_62 x_63)
			(stitch_0 x_65 x_61 x_64))
		(bmerge_0 x_66 x_12 y_8))))
(assert (forall ((x_12 list_0) (y_8 list_0) (z_4 Nat_0) (x_13 list_0) (x_14 Nat_0) (x_15 list_0) (fail_0 list_0) (x_74 list_0) (x_75 list_0) (x_67 list_0) (x_68 list_0) (x_69 list_0) (x_70 list_0) (x_71 list_0) (x_72 list_0) (x_73 list_0))
	(=>	(and (= x_74 x_75)
			(sort_0 x_75 z_4 x_14)
			(= x_12 (cons_0 z_4 x_13))
			(= y_8 (cons_0 x_14 x_15))
			(= fail_0 x_73)
			(= x_13 nil_0)
			(= x_15 nil_0)
			(evens_0 x_67 (cons_0 z_4 x_13))
			(evens_0 x_68 (cons_0 x_14 x_15))
			(bmerge_0 x_69 x_67 x_68)
			(odds_0 x_70 (cons_0 z_4 x_13))
			(odds_0 x_71 (cons_0 x_14 x_15))
			(bmerge_0 x_72 x_70 x_71)
			(stitch_0 x_73 x_69 x_72))
		(bmerge_0 x_74 x_12 y_8))))
(assert (forall ((x_12 list_0) (y_8 list_0) (z_4 Nat_0) (x_13 list_0) (x_76 list_0))
	(=>	(and (= x_76 (cons_0 z_4 x_13))
			(= x_12 (cons_0 z_4 x_13))
			(= y_8 nil_0))
		(bmerge_0 x_76 x_12 y_8))))
(assert (forall ((x_12 list_0) (y_8 list_0) (x_77 list_0))
	(=>	(and (= x_77 nil_0)
			(= x_12 nil_0))
		(bmerge_0 x_77 x_12 y_8))))
(declare-fun bsort_0 (list_0 list_0) Bool)
(assert (forall ((x_20 list_0) (y_9 Nat_0) (z_5 list_0) (x_21 Nat_0) (x_22 list_0) (x_78 list_0) (x_79 list_0) (x_80 list_0) (x_81 list_0) (x_82 list_0) (x_83 list_0))
	(=>	(and (= x_78 x_83)
			(evens_0 x_79 (cons_0 y_9 (cons_0 x_21 x_22)))
			(bsort_0 x_80 x_79)
			(odds_0 x_81 (cons_0 y_9 (cons_0 x_21 x_22)))
			(bsort_0 x_82 x_81)
			(bmerge_0 x_83 x_80 x_82)
			(= x_20 (cons_0 y_9 z_5))
			(= z_5 (cons_0 x_21 x_22)))
		(bsort_0 x_78 x_20))))
(assert (forall ((x_20 list_0) (y_9 Nat_0) (z_5 list_0) (x_84 list_0))
	(=>	(and (= x_84 (cons_0 y_9 nil_0))
			(= x_20 (cons_0 y_9 z_5))
			(= z_5 nil_0))
		(bsort_0 x_84 x_20))))
(assert (forall ((x_20 list_0) (x_85 list_0))
	(=>	(and (= x_85 nil_0)
			(= x_20 nil_0))
		(bsort_0 x_85 x_20))))
(assert (forall ((xs_6 list_0) (x_86 list_0) (x_87 list_0))
	(=>	(and (diseqlist_0 x_86 x_87)
			(bsort_0 x_86 xs_6)
			(isort_0 x_87 xs_6))
		false)))
(check-sat)
