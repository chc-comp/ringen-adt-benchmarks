(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_5 ) (Z_6 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 list_0) (projpair_1 list_0)))))
(declare-fun third_0 (Nat_0 Nat_0) Bool)
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(declare-fun length_0 (Nat_0 list_0) Bool)
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(declare-fun splitAt_0 (pair_0 Nat_0 list_0) Bool)
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(declare-fun x_7 (list_0 list_0 list_0) Bool)
(declare-fun reverse_0 (list_0 list_0) Bool)
(declare-fun nstoogesort_0 (list_0 list_0) Bool)
(declare-fun nstoogesort_1 (list_0 list_0) Bool)
(declare-fun nstoogesort_2 (list_0 list_0) Bool)
(assert (forall ((x_95 Nat_0))
	(diseqNat_0 Z_5 (Z_6 x_95))))
(assert (forall ((x_96 Nat_0))
	(diseqNat_0 (Z_6 x_96) Z_5)))
(assert (forall ((x_97 Nat_0) (x_98 Nat_0))
	(=> (diseqNat_0 x_97 x_98) (diseqNat_0 (Z_6 x_97) (Z_6 x_98)))))
(assert (forall ((y_10 Nat_0))
	(add_0 y_10 Z_5 y_10)))
(assert (forall ((r_0 Nat_0) (x_84 Nat_0) (y_10 Nat_0))
	(=> (add_0 r_0 x_84 y_10) (add_0 (Z_6 r_0) (Z_6 x_84) y_10))))
(assert (forall ((y_10 Nat_0))
	(minus_0 Z_5 Z_5 y_10)))
(assert (forall ((r_0 Nat_0) (x_84 Nat_0) (y_10 Nat_0))
	(=> (minus_0 r_0 x_84 y_10) (minus_0 (Z_6 r_0) (Z_6 x_84) y_10))))
(assert (forall ((y_10 Nat_0))
	(le_0 Z_5 y_10)))
(assert (forall ((x_84 Nat_0) (y_10 Nat_0))
	(=> (le_0 x_84 y_10) (le_0 (Z_6 x_84) (Z_6 y_10)))))
(assert (forall ((y_10 Nat_0))
	(gt_0 (Z_6 y_10) Z_5)))
(assert (forall ((x_84 Nat_0) (y_10 Nat_0))
	(=> (gt_0 x_84 y_10) (gt_0 (Z_6 x_84) (Z_6 y_10)))))
(assert (third_0 Z_5 (Z_6 (Z_6 Z_5))))
(assert (=> (diseqNat_0 (Z_6 Z_5) (Z_6 (Z_6 Z_5))) (third_0 Z_5 (Z_6 Z_5))))
(assert (third_0 Z_5 (Z_6 (Z_6 Z_5))))
(assert (=> (and (diseqNat_0 Z_5 (Z_6 (Z_6 Z_5))) (diseqNat_0 Z_5 (Z_6 Z_5))) (third_0 Z_5 Z_5)))
(assert (third_0 Z_5 (Z_6 (Z_6 Z_5))))
(assert (=> (diseqNat_0 (Z_6 Z_5) (Z_6 (Z_6 Z_5))) (third_0 Z_5 (Z_6 Z_5))))
(assert (third_0 Z_5 (Z_6 (Z_6 Z_5))))
(assert (forall ((x_86 Nat_0) (x_27 Nat_0) (x_28 Nat_0) (x_0 Nat_0))
	(=> (and (diseqNat_0 x_0 (Z_6 (Z_6 Z_5))) (diseqNat_0 x_0 (Z_6 Z_5)) (diseqNat_0 x_0 Z_5) (third_0 x_28 x_86) (minus_0 x_86 x_0 (Z_6 (Z_6 (Z_6 Z_5)))) (add_0 x_27 (Z_6 Z_5) x_28)) (third_0 x_27 x_0))))
(assert (forall ((x_1 Nat_0) (y_0 list_0))
	(=> (le_0 x_1 Z_5) (take_0 nil_0 x_1 y_0))))
(assert (forall ((x_87 Nat_0) (x_31 list_0) (z_0 Nat_0) (xs_0 list_0) (x_1 Nat_0))
	(=> (and (gt_0 x_1 Z_5) (take_0 x_31 x_87 xs_0) (minus_0 x_87 x_1 (Z_6 Z_5))) (take_0 (cons_0 z_0 x_31) x_1 (cons_0 z_0 xs_0)))))
(assert (forall ((x_1 Nat_0) (y_0 list_0))
	(=> (le_0 x_1 Z_5) (take_0 nil_0 x_1 y_0))))
(assert (forall ((x_1 Nat_0))
	(=> (gt_0 x_1 Z_5) (take_0 nil_0 x_1 nil_0))))
(assert (forall ((x_2 Nat_0) (y_1 Nat_0))
	(=> (le_0 x_2 y_1) (sort_0 (cons_0 x_2 (cons_0 y_1 nil_0)) x_2 y_1))))
(assert (forall ((x_2 Nat_0) (y_1 Nat_0))
	(=> (gt_0 x_2 y_1) (sort_0 (cons_0 y_1 (cons_0 x_2 nil_0)) x_2 y_1))))
(assert (forall ((x_36 Nat_0) (x_37 Nat_0) (y_2 Nat_0) (l_0 list_0))
	(=> (and (length_0 x_37 l_0) (add_0 x_36 (Z_6 Z_5) x_37)) (length_0 x_36 (cons_0 y_2 l_0)))))
(assert (length_0 Z_5 nil_0))
(assert (forall ((x_39 list_0) (x_4 Nat_0))
	(=> (le_0 x_4 Z_5) (drop_0 x_39 x_4 x_39))))
(assert (forall ((x_89 Nat_0) (x_40 list_0) (z_1 Nat_0) (xs_1 list_0) (x_4 Nat_0))
	(=> (and (gt_0 x_4 Z_5) (drop_0 x_40 x_89 xs_1) (minus_0 x_89 x_4 (Z_6 Z_5))) (drop_0 x_40 x_4 (cons_0 z_1 xs_1)))))
(assert (forall ((x_42 list_0) (x_4 Nat_0))
	(=> (le_0 x_4 Z_5) (drop_0 x_42 x_4 x_42))))
(assert (forall ((x_4 Nat_0))
	(=> (gt_0 x_4 Z_5) (drop_0 nil_0 x_4 nil_0))))
(assert (forall ((x_45 list_0) (x_46 list_0) (x_5 Nat_0) (y_4 list_0))
	(=> (and (take_0 x_45 x_5 y_4) (drop_0 x_46 x_5 y_4)) (splitAt_0 (pair_1 x_45 x_46) x_5 y_4))))
(assert (forall ((x_47 Nat_0) (x_48 Nat_0) (ys_0 list_0) (x_6 Nat_0))
	(=> (and (count_0 x_48 x_6 ys_0) (add_0 x_47 (Z_6 Z_5) x_48)) (count_0 x_47 x_6 (cons_0 x_6 ys_0)))))
(assert (forall ((x_49 Nat_0) (z_2 Nat_0) (ys_0 list_0) (x_6 Nat_0))
	(=> (and (diseqNat_0 x_6 z_2) (count_0 x_49 x_6 ys_0)) (count_0 x_49 x_6 (cons_0 z_2 ys_0)))))
(assert (forall ((x_6 Nat_0))
	(count_0 Z_5 x_6 nil_0)))
(assert (forall ((x_53 list_0) (z_3 Nat_0) (xs_2 list_0) (y_6 list_0))
	(=> (x_7 x_53 xs_2 y_6) (x_7 (cons_0 z_3 x_53) (cons_0 z_3 xs_2) y_6))))
(assert (forall ((x_54 list_0))
	(x_7 x_54 nil_0 x_54)))
(assert (forall ((x_55 list_0) (x_56 list_0) (y_7 Nat_0) (xs_3 list_0))
	(=> (and (reverse_0 x_56 xs_3) (x_7 x_55 x_56 (cons_0 y_7 nil_0))) (reverse_0 x_55 (cons_0 y_7 xs_3)))))
(assert (reverse_0 nil_0 nil_0))
(assert (forall ((x_63 list_0) (x_64 list_0) (x_65 list_0) (x_59 Nat_0) (x_60 Nat_0) (x_61 list_0) (ys_1 list_0) (zs_0 list_0) (x_13 list_0))
	(=> (and (nstoogesort_1 x_64 zs_0) (reverse_0 x_65 ys_1) (x_7 x_63 x_64 x_65) (length_0 x_59 x_13) (third_0 x_60 x_59) (reverse_0 x_61 x_13) (splitAt_0 (pair_1 ys_1 zs_0) x_60 x_61)) (nstoogesort_0 x_63 x_13))))
(assert (forall ((x_67 list_0) (x_68 list_0) (x_69 list_0) (x_16 Nat_0) (x_17 list_0) (y_9 Nat_0) (y_8 Nat_0))
	(=> (and (nstoogesort_0 x_68 (cons_0 y_8 (cons_0 y_9 (cons_0 x_16 x_17)))) (nstoogesort_2 x_69 x_68) (nstoogesort_0 x_67 x_69)) (nstoogesort_1 x_67 (cons_0 y_8 (cons_0 y_9 (cons_0 x_16 x_17)))))))
(assert (forall ((x_71 list_0) (y_9 Nat_0) (y_8 Nat_0))
	(=> (sort_0 x_71 y_8 y_9) (nstoogesort_1 x_71 (cons_0 y_8 (cons_0 y_9 nil_0))))))
(assert (forall ((y_8 Nat_0))
	(nstoogesort_1 (cons_0 y_8 nil_0) (cons_0 y_8 nil_0))))
(assert (nstoogesort_1 nil_0 nil_0))
(assert (forall ((x_78 list_0) (x_79 list_0) (x_75 Nat_0) (x_76 Nat_0) (ys_2 list_0) (zs_1 list_0) (x_18 list_0))
	(=> (and (nstoogesort_1 x_79 zs_1) (x_7 x_78 ys_2 x_79) (length_0 x_75 x_18) (third_0 x_76 x_75) (splitAt_0 (pair_1 ys_2 zs_1) x_76 x_18)) (nstoogesort_2 x_78 x_18))))
(assert (forall ((x_81 list_0) (x_82 Nat_0) (x_83 Nat_0) (x_19 Nat_0) (xs_4 list_0))
	(=> (and (diseqNat_0 x_82 x_83) (nstoogesort_1 x_81 xs_4) (count_0 x_82 x_19 x_81) (count_0 x_83 x_19 xs_4)) false)))
(check-sat)
(get-model)
