(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_0 ) (S_0 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_80 Nat_1) (x_79 Nat_1))
	(=> (= x_80 (S_0 x_79))
	    (unS_1 x_79 x_80))))
(assert (isZ_0 Z_0))
(assert (forall ((x_81 Nat_1))
	(isS_0 (S_0 x_81))))
(assert (forall ((x_82 Nat_1))
	(diseqNat_0 Z_0 (S_0 x_82))))
(assert (forall ((x_83 Nat_1))
	(diseqNat_0 (S_0 x_83) Z_0)))
(assert (forall ((x_84 Nat_1) (x_85 Nat_1))
	(=> (diseqNat_0 x_84 x_85)
	    (diseqNat_0 (S_0 x_84) (S_0 x_85)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_10 Nat_1))
	(add_0 y_10 Z_0 y_10)))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_77 y_10)
	    (add_0 (S_0 r_0) (S_0 x_77) y_10))))
(assert (forall ((y_10 Nat_1))
	(minus_0 Z_0 Z_0 y_10)))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_77 y_10)
	    (minus_0 (S_0 r_0) (S_0 x_77) y_10))))
(assert (forall ((y_10 Nat_1))
	(le_0 Z_0 y_10)))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1))
	(=> (le_0 x_77 y_10)
	    (le_0 (S_0 x_77) (S_0 y_10)))))
(assert (forall ((y_10 Nat_1))
	(ge_0 y_10 Z_0)))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1))
	(=> (ge_0 x_77 y_10)
	    (ge_0 (S_0 x_77) (S_0 y_10)))))
(assert (forall ((y_10 Nat_1))
	(lt_0 Z_0 (S_0 y_10))))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1))
	(=> (lt_0 x_77 y_10)
	    (lt_0 (S_0 x_77) (S_0 y_10)))))
(assert (forall ((y_10 Nat_1))
	(gt_0 (S_0 y_10) Z_0)))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1))
	(=> (gt_0 x_77 y_10)
	    (gt_0 (S_0 x_77) (S_0 y_10)))))
(assert (forall ((y_10 Nat_1))
	(mult_0 Z_0 Z_0 y_10)))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1) (r_0 Nat_1) (z_7 Nat_1))
	(=>	(and (mult_0 r_0 x_77 y_10)
			(add_0 z_7 r_0 y_10))
		(mult_0 z_7 (S_0 x_77) y_10))))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1))
	(=> (lt_0 x_77 y_10)
	    (div_0 Z_0 x_77 y_10))))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1) (r_0 Nat_1) (z_7 Nat_1))
	(=>	(and (ge_0 x_77 y_10)
			(minus_0 z_7 x_77 y_10)
			(div_0 r_0 z_7 y_10))
		(div_0 (S_0 r_0) x_77 y_10))))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1))
	(=> (lt_0 x_77 y_10)
	    (mod_0 x_77 x_77 y_10))))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1) (r_0 Nat_1) (z_7 Nat_1))
	(=>	(and (ge_0 x_77 y_10)
			(minus_0 z_7 x_77 y_10)
			(mod_0 r_0 z_7 y_10))
		(mod_0 r_0 x_77 y_10))))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_88 Nat_0) (x_87 Nat_0))
	(=> (= x_88 (succ_0 x_87))
	    (p_1 x_87 x_88))))
(assert (iszero_0 zero_0))
(assert (forall ((x_89 Nat_0))
	(issucc_0 (succ_0 x_89))))
(assert (forall ((x_90 Nat_0))
	(diseqNat_1 zero_0 (succ_0 x_90))))
(assert (forall ((x_91 Nat_0))
	(diseqNat_1 (succ_0 x_91) zero_0)))
(assert (forall ((x_92 Nat_0) (x_93 Nat_0))
	(=> (diseqNat_1 x_92 x_93)
	    (diseqNat_1 (succ_0 x_92) (succ_0 x_93)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_2 (Nat_0 list_0) Bool)
(declare-fun tail_2 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_97 list_0) (x_95 Nat_0) (x_96 list_0))
	(=> (= x_97 (cons_0 x_95 x_96))
	    (head_2 x_95 x_97))))
(assert (forall ((x_97 list_0) (x_95 Nat_0) (x_96 list_0))
	(=> (= x_97 (cons_0 x_95 x_96))
	    (tail_2 x_96 x_97))))
(assert (isnil_0 nil_0))
(assert (forall ((x_98 Nat_0) (x_99 list_0))
	(iscons_0 (cons_0 x_98 x_99))))
(assert (forall ((x_100 Nat_0) (x_101 list_0))
	(diseqlist_0 nil_0 (cons_0 x_100 x_101))))
(assert (forall ((x_102 Nat_0) (x_103 list_0))
	(diseqlist_0 (cons_0 x_102 x_103) nil_0)))
(assert (forall ((x_104 Nat_0) (x_105 list_0) (x_106 Nat_0) (x_107 list_0))
	(=> (diseqNat_1 x_104 x_106)
	    (diseqlist_0 (cons_0 x_104 x_105) (cons_0 x_106 x_107)))))
(assert (forall ((x_104 Nat_0) (x_105 list_0) (x_106 Nat_0) (x_107 list_0))
	(=> (diseqlist_0 x_105 x_107)
	    (diseqlist_0 (cons_0 x_104 x_105) (cons_0 x_106 x_107)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 list_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_3 (list_0 list_1) Bool)
(declare-fun tail_3 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_111 list_1) (x_109 list_0) (x_110 list_1))
	(=> (= x_111 (cons_1 x_109 x_110))
	    (head_3 x_109 x_111))))
(assert (forall ((x_111 list_1) (x_109 list_0) (x_110 list_1))
	(=> (= x_111 (cons_1 x_109 x_110))
	    (tail_3 x_110 x_111))))
(assert (isnil_1 nil_1))
(assert (forall ((x_112 list_0) (x_113 list_1))
	(iscons_1 (cons_1 x_112 x_113))))
(assert (forall ((x_114 list_0) (x_115 list_1))
	(diseqlist_1 nil_1 (cons_1 x_114 x_115))))
(assert (forall ((x_116 list_0) (x_117 list_1))
	(diseqlist_1 (cons_1 x_116 x_117) nil_1)))
(assert (forall ((x_118 list_0) (x_119 list_1) (x_120 list_0) (x_121 list_1))
	(=> (diseqlist_0 x_118 x_120)
	    (diseqlist_1 (cons_1 x_118 x_119) (cons_1 x_120 x_121)))))
(assert (forall ((x_118 list_0) (x_119 list_1) (x_120 list_0) (x_121 list_1))
	(=> (diseqlist_1 x_119 x_121)
	    (diseqlist_1 (cons_1 x_118 x_119) (cons_1 x_120 x_121)))))
(declare-fun plus_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_18 Nat_0) (x_19 Nat_0))
	(=>	(and (= x_18 (succ_0 x_19))
			(plus_0 x_19 z_0 y_0)
			(= x_0 (succ_0 z_0)))
		(plus_0 x_18 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_20 Nat_0))
	(=>	(and (= x_20 y_0)
			(= x_0 zero_0))
		(plus_0 x_20 x_0 y_0))))
(declare-fun leq_0 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (z_1 Nat_0) (x_2 Nat_0) (x_21 Bool) (x_22 Bool))
	(=>	(and (= x_21 x_22)
			(leq_0 x_22 z_1 x_2)
			(= x_1 (succ_0 z_1))
			(= y_1 (succ_0 x_2)))
		(leq_0 x_21 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (z_1 Nat_0) (x_23 Bool))
	(=>	(and (= x_23 false)
			(= x_1 (succ_0 z_1))
			(= y_1 zero_0))
		(leq_0 x_23 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (x_24 Bool))
	(=>	(and (= x_24 true)
			(= x_1 zero_0))
		(leq_0 x_24 x_1 y_1))))
(declare-fun lmerge_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_3 list_0) (y_2 list_0) (z_2 Nat_0) (x_4 list_0) (x_5 Nat_0) (x_6 list_0) (x_26 list_0) (x_27 list_0) (x_25 Bool))
	(=>	(and (= x_26 (cons_0 z_2 x_27))
			(lmerge_0 x_27 x_4 (cons_0 x_5 x_6))
			(= x_3 (cons_0 z_2 x_4))
			(= y_2 (cons_0 x_5 x_6))
			(= x_25 true)
			(leq_0 x_25 z_2 x_5))
		(lmerge_0 x_26 x_3 y_2))))
(assert (forall ((x_3 list_0) (y_2 list_0) (z_2 Nat_0) (x_4 list_0) (x_5 Nat_0) (x_6 list_0) (x_29 list_0) (x_30 list_0) (x_28 Bool))
	(=>	(and (= x_29 (cons_0 x_5 x_30))
			(lmerge_0 x_30 (cons_0 z_2 x_4) x_6)
			(= x_3 (cons_0 z_2 x_4))
			(= y_2 (cons_0 x_5 x_6))
			(= x_28 false)
			(leq_0 x_28 z_2 x_5))
		(lmerge_0 x_29 x_3 y_2))))
(assert (forall ((x_3 list_0) (y_2 list_0) (z_2 Nat_0) (x_4 list_0) (x_31 list_0))
	(=>	(and (= x_31 (cons_0 z_2 x_4))
			(= x_3 (cons_0 z_2 x_4))
			(= y_2 nil_0))
		(lmerge_0 x_31 x_3 y_2))))
(assert (forall ((x_3 list_0) (y_2 list_0) (x_32 list_0))
	(=>	(and (= x_32 y_2)
			(= x_3 nil_0))
		(lmerge_0 x_32 x_3 y_2))))
(declare-fun pairwise_0 (list_1 list_1) Bool)
(assert (forall ((x_7 list_1) (xs_0 list_0) (y_3 list_1) (ys_0 list_0) (xss_0 list_1) (x_33 list_1) (x_34 list_0) (x_35 list_1))
	(=>	(and (= x_33 (cons_1 x_34 x_35))
			(lmerge_0 x_34 xs_0 ys_0)
			(pairwise_0 x_35 xss_0)
			(= x_7 (cons_1 xs_0 y_3))
			(= y_3 (cons_1 ys_0 xss_0)))
		(pairwise_0 x_33 x_7))))
(assert (forall ((x_7 list_1) (xs_0 list_0) (y_3 list_1) (x_36 list_1))
	(=>	(and (= x_36 (cons_1 xs_0 nil_1))
			(= x_7 (cons_1 xs_0 y_3))
			(= y_3 nil_1))
		(pairwise_0 x_36 x_7))))
(assert (forall ((x_7 list_1) (x_37 list_1))
	(=>	(and (= x_37 nil_1)
			(= x_7 nil_1))
		(pairwise_0 x_37 x_7))))
(declare-fun mergingbu_0 (list_0 list_1) Bool)
(assert (forall ((x_8 list_1) (xs_1 list_0) (y_4 list_1) (z_3 list_0) (x_9 list_1) (x_38 list_0) (x_39 list_1) (x_40 list_0))
	(=>	(and (= x_38 x_40)
			(pairwise_0 x_39 (cons_1 xs_1 (cons_1 z_3 x_9)))
			(mergingbu_0 x_40 x_39)
			(= x_8 (cons_1 xs_1 y_4))
			(= y_4 (cons_1 z_3 x_9)))
		(mergingbu_0 x_38 x_8))))
(assert (forall ((x_8 list_1) (xs_1 list_0) (y_4 list_1) (x_41 list_0))
	(=>	(and (= x_41 xs_1)
			(= x_8 (cons_1 xs_1 y_4))
			(= y_4 nil_1))
		(mergingbu_0 x_41 x_8))))
(assert (forall ((x_8 list_1) (x_42 list_0))
	(=>	(and (= x_42 nil_0)
			(= x_8 nil_1))
		(mergingbu_0 x_42 x_8))))
(declare-fun risers_0 (list_1 list_0) Bool)
(assert (forall ((x_10 list_0) (y_5 Nat_0) (z_4 list_0) (y_6 Nat_0) (xs_2 list_0) (ys_1 list_0) (yss_0 list_1) (x_45 list_1) (x_43 Bool) (x_44 list_1))
	(=>	(and (= x_45 (cons_1 (cons_0 y_5 ys_1) yss_0))
			(= x_10 (cons_0 y_5 z_4))
			(= z_4 (cons_0 y_6 xs_2))
			(= x_43 true)
			(= x_44 (cons_1 ys_1 yss_0))
			(leq_0 x_43 y_5 y_6)
			(risers_0 x_44 (cons_0 y_6 xs_2)))
		(risers_0 x_45 x_10))))
(assert (forall ((x_10 list_0) (y_5 Nat_0) (z_4 list_0) (y_6 Nat_0) (xs_2 list_0) (x_47 list_1) (x_48 list_1) (x_46 Bool))
	(=>	(and (= x_47 (cons_1 (cons_0 y_5 nil_0) x_48))
			(risers_0 x_48 (cons_0 y_6 xs_2))
			(= x_10 (cons_0 y_5 z_4))
			(= z_4 (cons_0 y_6 xs_2))
			(= x_46 false)
			(leq_0 x_46 y_5 y_6))
		(risers_0 x_47 x_10))))
(assert (forall ((x_10 list_0) (y_5 Nat_0) (z_4 list_0) (y_6 Nat_0) (xs_2 list_0) (x_51 list_1) (x_49 Bool) (x_50 list_1))
	(=>	(and (= x_51 nil_1)
			(= x_10 (cons_0 y_5 z_4))
			(= z_4 (cons_0 y_6 xs_2))
			(= x_49 true)
			(= x_50 nil_1)
			(leq_0 x_49 y_5 y_6)
			(risers_0 x_50 (cons_0 y_6 xs_2)))
		(risers_0 x_51 x_10))))
(assert (forall ((x_10 list_0) (y_5 Nat_0) (z_4 list_0) (y_6 Nat_0) (xs_2 list_0) (x_53 list_1) (x_54 list_1) (x_52 Bool))
	(=>	(and (= x_53 (cons_1 (cons_0 y_5 nil_0) x_54))
			(risers_0 x_54 (cons_0 y_6 xs_2))
			(= x_10 (cons_0 y_5 z_4))
			(= z_4 (cons_0 y_6 xs_2))
			(= x_52 false)
			(leq_0 x_52 y_5 y_6))
		(risers_0 x_53 x_10))))
(assert (forall ((x_10 list_0) (y_5 Nat_0) (z_4 list_0) (x_55 list_1))
	(=>	(and (= x_55 (cons_1 (cons_0 y_5 nil_0) nil_1))
			(= x_10 (cons_0 y_5 z_4))
			(= z_4 nil_0))
		(risers_0 x_55 x_10))))
(assert (forall ((x_10 list_0) (x_56 list_1))
	(=>	(and (= x_56 nil_1)
			(= x_10 nil_0))
		(risers_0 x_56 x_10))))
(declare-fun msortbu_0 (list_0 list_0) Bool)
(assert (forall ((x_11 list_0) (x_57 list_0) (x_58 list_1) (x_59 list_0))
	(=>	(and (= x_57 x_59)
			(risers_0 x_58 x_11)
			(mergingbu_0 x_59 x_58))
		(msortbu_0 x_57 x_11))))
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_12 Nat_0) (y_7 list_0) (z_5 Nat_0) (ys_2 list_0) (x_60 Nat_0) (x_61 Nat_0) (x_62 Nat_0))
	(=>	(and (= x_60 x_62)
			(count_0 x_61 x_12 ys_2)
			(plus_0 x_62 (succ_0 zero_0) x_61)
			(= y_7 (cons_0 z_5 ys_2))
			(= x_12 z_5))
		(count_0 x_60 x_12 y_7))))
(assert (forall ((x_12 Nat_0) (y_7 list_0) (z_5 Nat_0) (ys_2 list_0) (x_63 Nat_0) (x_64 Nat_0))
	(=>	(and (= x_63 x_64)
			(count_0 x_64 x_12 ys_2)
			(= y_7 (cons_0 z_5 ys_2))
			(diseqNat_1 x_12 z_5))
		(count_0 x_63 x_12 y_7))))
(assert (forall ((x_12 Nat_0) (y_7 list_0) (x_65 Nat_0))
	(=>	(and (= x_65 zero_0)
			(= y_7 nil_0))
		(count_0 x_65 x_12 y_7))))
(assert (forall ((x_13 Nat_0) (y_8 Nat_0) (z_6 Nat_0) (x_66 Nat_0) (x_67 Nat_0) (x_68 Nat_0) (x_69 Nat_0))
	(=>	(and (diseqNat_1 x_67 x_69)
			(plus_0 x_66 y_8 z_6)
			(plus_0 x_67 x_13 x_66)
			(plus_0 x_68 x_13 y_8)
			(plus_0 x_69 x_68 z_6))
		false)))
(assert (forall ((x_14 Nat_0) (y_9 Nat_0) (x_70 Nat_0) (x_71 Nat_0))
	(=>	(and (diseqNat_1 x_70 x_71)
			(plus_0 x_70 x_14 y_9)
			(plus_0 x_71 y_9 x_14))
		false)))
(assert (forall ((x_15 Nat_0) (x_72 Nat_0))
	(=>	(and (diseqNat_1 x_72 x_15)
			(plus_0 x_72 x_15 zero_0))
		false)))
(assert (forall ((x_16 Nat_0) (x_73 Nat_0))
	(=>	(and (diseqNat_1 x_73 x_16)
			(plus_0 x_73 zero_0 x_16))
		false)))
(assert (forall ((x_17 Nat_0) (xs_3 list_0) (x_74 list_0) (x_75 Nat_0) (x_76 Nat_0))
	(=>	(and (diseqNat_1 x_75 x_76)
			(msortbu_0 x_74 xs_3)
			(count_0 x_75 x_17 x_74)
			(count_0 x_76 x_17 xs_3))
		false)))
(check-sat)
