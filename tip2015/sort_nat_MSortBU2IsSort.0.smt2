(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_0 ) (S_0 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_67 Nat_1) (x_66 Nat_1))
	(=> (= x_67 (S_0 x_66))
	    (unS_1 x_66 x_67))))
(assert (isZ_0 Z_0))
(assert (forall ((x_68 Nat_1))
	(isS_0 (S_0 x_68))))
(assert (forall ((x_69 Nat_1))
	(diseqNat_0 Z_0 (S_0 x_69))))
(assert (forall ((x_70 Nat_1))
	(diseqNat_0 (S_0 x_70) Z_0)))
(assert (forall ((x_71 Nat_1) (x_72 Nat_1))
	(=> (diseqNat_0 x_71 x_72)
	    (diseqNat_0 (S_0 x_71) (S_0 x_72)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_8 Nat_1))
	(add_0 y_8 Z_0 y_8)))
(assert (forall ((x_64 Nat_1) (y_8 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_64 y_8)
	    (add_0 (S_0 r_0) (S_0 x_64) y_8))))
(assert (forall ((y_8 Nat_1))
	(minus_0 Z_0 Z_0 y_8)))
(assert (forall ((x_64 Nat_1) (y_8 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_64 y_8)
	    (minus_0 (S_0 r_0) (S_0 x_64) y_8))))
(assert (forall ((y_8 Nat_1))
	(le_0 Z_0 y_8)))
(assert (forall ((x_64 Nat_1) (y_8 Nat_1))
	(=> (le_0 x_64 y_8)
	    (le_0 (S_0 x_64) (S_0 y_8)))))
(assert (forall ((y_8 Nat_1))
	(ge_0 y_8 Z_0)))
(assert (forall ((x_64 Nat_1) (y_8 Nat_1))
	(=> (ge_0 x_64 y_8)
	    (ge_0 (S_0 x_64) (S_0 y_8)))))
(assert (forall ((y_8 Nat_1))
	(lt_0 Z_0 (S_0 y_8))))
(assert (forall ((x_64 Nat_1) (y_8 Nat_1))
	(=> (lt_0 x_64 y_8)
	    (lt_0 (S_0 x_64) (S_0 y_8)))))
(assert (forall ((y_8 Nat_1))
	(gt_0 (S_0 y_8) Z_0)))
(assert (forall ((x_64 Nat_1) (y_8 Nat_1))
	(=> (gt_0 x_64 y_8)
	    (gt_0 (S_0 x_64) (S_0 y_8)))))
(assert (forall ((y_8 Nat_1))
	(mult_0 Z_0 Z_0 y_8)))
(assert (forall ((x_64 Nat_1) (y_8 Nat_1) (r_0 Nat_1) (z_5 Nat_1))
	(=>	(and (mult_0 r_0 x_64 y_8)
			(add_0 z_5 r_0 y_8))
		(mult_0 z_5 (S_0 x_64) y_8))))
(assert (forall ((x_64 Nat_1) (y_8 Nat_1))
	(=> (lt_0 x_64 y_8)
	    (div_0 Z_0 x_64 y_8))))
(assert (forall ((x_64 Nat_1) (y_8 Nat_1) (r_0 Nat_1) (z_5 Nat_1))
	(=>	(and (ge_0 x_64 y_8)
			(minus_0 z_5 x_64 y_8)
			(div_0 r_0 z_5 y_8))
		(div_0 (S_0 r_0) x_64 y_8))))
(assert (forall ((x_64 Nat_1) (y_8 Nat_1))
	(=> (lt_0 x_64 y_8)
	    (mod_0 x_64 x_64 y_8))))
(assert (forall ((x_64 Nat_1) (y_8 Nat_1) (r_0 Nat_1) (z_5 Nat_1))
	(=>	(and (ge_0 x_64 y_8)
			(minus_0 z_5 x_64 y_8)
			(mod_0 r_0 z_5 y_8))
		(mod_0 r_0 x_64 y_8))))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_75 Nat_0) (x_74 Nat_0))
	(=> (= x_75 (succ_0 x_74))
	    (p_1 x_74 x_75))))
(assert (iszero_0 zero_0))
(assert (forall ((x_76 Nat_0))
	(issucc_0 (succ_0 x_76))))
(assert (forall ((x_77 Nat_0))
	(diseqNat_1 zero_0 (succ_0 x_77))))
(assert (forall ((x_78 Nat_0))
	(diseqNat_1 (succ_0 x_78) zero_0)))
(assert (forall ((x_79 Nat_0) (x_80 Nat_0))
	(=> (diseqNat_1 x_79 x_80)
	    (diseqNat_1 (succ_0 x_79) (succ_0 x_80)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_2 (Nat_0 list_0) Bool)
(declare-fun tail_2 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_84 list_0) (x_82 Nat_0) (x_83 list_0))
	(=> (= x_84 (cons_0 x_82 x_83))
	    (head_2 x_82 x_84))))
(assert (forall ((x_84 list_0) (x_82 Nat_0) (x_83 list_0))
	(=> (= x_84 (cons_0 x_82 x_83))
	    (tail_2 x_83 x_84))))
(assert (isnil_0 nil_0))
(assert (forall ((x_85 Nat_0) (x_86 list_0))
	(iscons_0 (cons_0 x_85 x_86))))
(assert (forall ((x_87 Nat_0) (x_88 list_0))
	(diseqlist_0 nil_0 (cons_0 x_87 x_88))))
(assert (forall ((x_89 Nat_0) (x_90 list_0))
	(diseqlist_0 (cons_0 x_89 x_90) nil_0)))
(assert (forall ((x_91 Nat_0) (x_92 list_0) (x_93 Nat_0) (x_94 list_0))
	(=> (diseqNat_1 x_91 x_93)
	    (diseqlist_0 (cons_0 x_91 x_92) (cons_0 x_93 x_94)))))
(assert (forall ((x_91 Nat_0) (x_92 list_0) (x_93 Nat_0) (x_94 list_0))
	(=> (diseqlist_0 x_92 x_94)
	    (diseqlist_0 (cons_0 x_91 x_92) (cons_0 x_93 x_94)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 list_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_3 (list_0 list_1) Bool)
(declare-fun tail_3 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_98 list_1) (x_96 list_0) (x_97 list_1))
	(=> (= x_98 (cons_1 x_96 x_97))
	    (head_3 x_96 x_98))))
(assert (forall ((x_98 list_1) (x_96 list_0) (x_97 list_1))
	(=> (= x_98 (cons_1 x_96 x_97))
	    (tail_3 x_97 x_98))))
(assert (isnil_1 nil_1))
(assert (forall ((x_99 list_0) (x_100 list_1))
	(iscons_1 (cons_1 x_99 x_100))))
(assert (forall ((x_101 list_0) (x_102 list_1))
	(diseqlist_1 nil_1 (cons_1 x_101 x_102))))
(assert (forall ((x_103 list_0) (x_104 list_1))
	(diseqlist_1 (cons_1 x_103 x_104) nil_1)))
(assert (forall ((x_105 list_0) (x_106 list_1) (x_107 list_0) (x_108 list_1))
	(=> (diseqlist_0 x_105 x_107)
	    (diseqlist_1 (cons_1 x_105 x_106) (cons_1 x_107 x_108)))))
(assert (forall ((x_105 list_0) (x_106 list_1) (x_107 list_0) (x_108 list_1))
	(=> (diseqlist_1 x_106 x_108)
	    (diseqlist_1 (cons_1 x_105 x_106) (cons_1 x_107 x_108)))))
(declare-fun leq_0 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_1 Nat_0) (x_13 Bool) (x_14 Bool))
	(=>	(and (= x_13 x_14)
			(leq_0 x_14 z_0 x_1)
			(= x_0 (succ_0 z_0))
			(= y_0 (succ_0 x_1)))
		(leq_0 x_13 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_15 Bool))
	(=>	(and (= x_15 false)
			(= x_0 (succ_0 z_0))
			(= y_0 zero_0))
		(leq_0 x_15 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_16 Bool))
	(=>	(and (= x_16 true)
			(= x_0 zero_0))
		(leq_0 x_16 x_0 y_0))))
(declare-fun lmerge_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_2 list_0) (y_1 list_0) (z_1 Nat_0) (x_3 list_0) (x_4 Nat_0) (x_5 list_0) (x_18 list_0) (x_19 list_0) (x_17 Bool))
	(=>	(and (= x_18 (cons_0 z_1 x_19))
			(lmerge_0 x_19 x_3 (cons_0 x_4 x_5))
			(= x_2 (cons_0 z_1 x_3))
			(= y_1 (cons_0 x_4 x_5))
			(= x_17 true)
			(leq_0 x_17 z_1 x_4))
		(lmerge_0 x_18 x_2 y_1))))
(assert (forall ((x_2 list_0) (y_1 list_0) (z_1 Nat_0) (x_3 list_0) (x_4 Nat_0) (x_5 list_0) (x_21 list_0) (x_22 list_0) (x_20 Bool))
	(=>	(and (= x_21 (cons_0 x_4 x_22))
			(lmerge_0 x_22 (cons_0 z_1 x_3) x_5)
			(= x_2 (cons_0 z_1 x_3))
			(= y_1 (cons_0 x_4 x_5))
			(= x_20 false)
			(leq_0 x_20 z_1 x_4))
		(lmerge_0 x_21 x_2 y_1))))
(assert (forall ((x_2 list_0) (y_1 list_0) (z_1 Nat_0) (x_3 list_0) (x_23 list_0))
	(=>	(and (= x_23 (cons_0 z_1 x_3))
			(= x_2 (cons_0 z_1 x_3))
			(= y_1 nil_0))
		(lmerge_0 x_23 x_2 y_1))))
(assert (forall ((x_2 list_0) (y_1 list_0) (x_24 list_0))
	(=>	(and (= x_24 y_1)
			(= x_2 nil_0))
		(lmerge_0 x_24 x_2 y_1))))
(declare-fun pairwise_0 (list_1 list_1) Bool)
(assert (forall ((x_6 list_1) (xs_0 list_0) (y_2 list_1) (ys_0 list_0) (xss_0 list_1) (x_25 list_1) (x_26 list_0) (x_27 list_1))
	(=>	(and (= x_25 (cons_1 x_26 x_27))
			(lmerge_0 x_26 xs_0 ys_0)
			(pairwise_0 x_27 xss_0)
			(= x_6 (cons_1 xs_0 y_2))
			(= y_2 (cons_1 ys_0 xss_0)))
		(pairwise_0 x_25 x_6))))
(assert (forall ((x_6 list_1) (xs_0 list_0) (y_2 list_1) (x_28 list_1))
	(=>	(and (= x_28 (cons_1 xs_0 nil_1))
			(= x_6 (cons_1 xs_0 y_2))
			(= y_2 nil_1))
		(pairwise_0 x_28 x_6))))
(assert (forall ((x_6 list_1) (x_29 list_1))
	(=>	(and (= x_29 nil_1)
			(= x_6 nil_1))
		(pairwise_0 x_29 x_6))))
(declare-fun mergingbu_0 (list_0 list_1) Bool)
(assert (forall ((x_7 list_1) (xs_1 list_0) (y_3 list_1) (z_2 list_0) (x_8 list_1) (x_30 list_0) (x_31 list_1) (x_32 list_0))
	(=>	(and (= x_30 x_32)
			(pairwise_0 x_31 (cons_1 xs_1 (cons_1 z_2 x_8)))
			(mergingbu_0 x_32 x_31)
			(= x_7 (cons_1 xs_1 y_3))
			(= y_3 (cons_1 z_2 x_8)))
		(mergingbu_0 x_30 x_7))))
(assert (forall ((x_7 list_1) (xs_1 list_0) (y_3 list_1) (x_33 list_0))
	(=>	(and (= x_33 xs_1)
			(= x_7 (cons_1 xs_1 y_3))
			(= y_3 nil_1))
		(mergingbu_0 x_33 x_7))))
(assert (forall ((x_7 list_1) (x_34 list_0))
	(=>	(and (= x_34 nil_0)
			(= x_7 nil_1))
		(mergingbu_0 x_34 x_7))))
(declare-fun risers_0 (list_1 list_0) Bool)
(assert (forall ((x_9 list_0) (y_4 Nat_0) (z_3 list_0) (y_5 Nat_0) (xs_2 list_0) (ys_1 list_0) (yss_0 list_1) (x_37 list_1) (x_35 Bool) (x_36 list_1))
	(=>	(and (= x_37 (cons_1 (cons_0 y_4 ys_1) yss_0))
			(= x_9 (cons_0 y_4 z_3))
			(= z_3 (cons_0 y_5 xs_2))
			(= x_35 true)
			(= x_36 (cons_1 ys_1 yss_0))
			(leq_0 x_35 y_4 y_5)
			(risers_0 x_36 (cons_0 y_5 xs_2)))
		(risers_0 x_37 x_9))))
(assert (forall ((x_9 list_0) (y_4 Nat_0) (z_3 list_0) (y_5 Nat_0) (xs_2 list_0) (x_39 list_1) (x_40 list_1) (x_38 Bool))
	(=>	(and (= x_39 (cons_1 (cons_0 y_4 nil_0) x_40))
			(risers_0 x_40 (cons_0 y_5 xs_2))
			(= x_9 (cons_0 y_4 z_3))
			(= z_3 (cons_0 y_5 xs_2))
			(= x_38 false)
			(leq_0 x_38 y_4 y_5))
		(risers_0 x_39 x_9))))
(assert (forall ((x_9 list_0) (y_4 Nat_0) (z_3 list_0) (y_5 Nat_0) (xs_2 list_0) (x_43 list_1) (x_41 Bool) (x_42 list_1))
	(=>	(and (= x_43 nil_1)
			(= x_9 (cons_0 y_4 z_3))
			(= z_3 (cons_0 y_5 xs_2))
			(= x_41 true)
			(= x_42 nil_1)
			(leq_0 x_41 y_4 y_5)
			(risers_0 x_42 (cons_0 y_5 xs_2)))
		(risers_0 x_43 x_9))))
(assert (forall ((x_9 list_0) (y_4 Nat_0) (z_3 list_0) (y_5 Nat_0) (xs_2 list_0) (x_45 list_1) (x_46 list_1) (x_44 Bool))
	(=>	(and (= x_45 (cons_1 (cons_0 y_4 nil_0) x_46))
			(risers_0 x_46 (cons_0 y_5 xs_2))
			(= x_9 (cons_0 y_4 z_3))
			(= z_3 (cons_0 y_5 xs_2))
			(= x_44 false)
			(leq_0 x_44 y_4 y_5))
		(risers_0 x_45 x_9))))
(assert (forall ((x_9 list_0) (y_4 Nat_0) (z_3 list_0) (x_47 list_1))
	(=>	(and (= x_47 (cons_1 (cons_0 y_4 nil_0) nil_1))
			(= x_9 (cons_0 y_4 z_3))
			(= z_3 nil_0))
		(risers_0 x_47 x_9))))
(assert (forall ((x_9 list_0) (x_48 list_1))
	(=>	(and (= x_48 nil_1)
			(= x_9 nil_0))
		(risers_0 x_48 x_9))))
(declare-fun msortbu_0 (list_0 list_0) Bool)
(assert (forall ((x_10 list_0) (x_49 list_0) (x_50 list_1) (x_51 list_0))
	(=>	(and (= x_49 x_51)
			(risers_0 x_50 x_10)
			(mergingbu_0 x_51 x_50))
		(msortbu_0 x_49 x_10))))
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_11 Nat_0) (y_6 list_0) (z_4 Nat_0) (xs_3 list_0) (x_53 list_0) (x_52 Bool))
	(=>	(and (= x_53 (cons_0 x_11 (cons_0 z_4 xs_3)))
			(= y_6 (cons_0 z_4 xs_3))
			(= x_52 true)
			(leq_0 x_52 x_11 z_4))
		(insert_0 x_53 x_11 y_6))))
(assert (forall ((x_11 Nat_0) (y_6 list_0) (z_4 Nat_0) (xs_3 list_0) (x_55 list_0) (x_56 list_0) (x_54 Bool))
	(=>	(and (= x_55 (cons_0 z_4 x_56))
			(insert_0 x_56 x_11 xs_3)
			(= y_6 (cons_0 z_4 xs_3))
			(= x_54 false)
			(leq_0 x_54 x_11 z_4))
		(insert_0 x_55 x_11 y_6))))
(assert (forall ((x_11 Nat_0) (y_6 list_0) (x_57 list_0))
	(=>	(and (= x_57 (cons_0 x_11 nil_0))
			(= y_6 nil_0))
		(insert_0 x_57 x_11 y_6))))
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_12 list_0) (y_7 Nat_0) (xs_4 list_0) (x_58 list_0) (x_59 list_0) (x_60 list_0))
	(=>	(and (= x_58 x_60)
			(isort_0 x_59 xs_4)
			(insert_0 x_60 y_7 x_59)
			(= x_12 (cons_0 y_7 xs_4)))
		(isort_0 x_58 x_12))))
(assert (forall ((x_12 list_0) (x_61 list_0))
	(=>	(and (= x_61 nil_0)
			(= x_12 nil_0))
		(isort_0 x_61 x_12))))
(assert (forall ((xs_5 list_0) (x_62 list_0) (x_63 list_0))
	(=>	(and (diseqlist_0 x_62 x_63)
			(msortbu_0 x_62 xs_5)
			(isort_0 x_63 xs_5))
		false)))
(check-sat)
