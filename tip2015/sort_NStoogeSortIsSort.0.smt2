(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_91 Nat_0) (x_90 Nat_0))
	(=> (= x_91 (S_0 x_90))
	    (unS_1 x_90 x_91))))
(assert (isZ_0 Z_0))
(assert (forall ((x_92 Nat_0))
	(isS_0 (S_0 x_92))))
(assert (forall ((x_93 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_93))))
(assert (forall ((x_94 Nat_0))
	(diseqNat_0 (S_0 x_94) Z_0)))
(assert (forall ((x_95 Nat_0) (x_96 Nat_0))
	(=> (diseqNat_0 x_95 x_96)
	    (diseqNat_0 (S_0 x_95) (S_0 x_96)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_11 Nat_0))
	(add_0 y_11 Z_0 y_11)))
(assert (forall ((x_83 Nat_0) (y_11 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_83 y_11)
	    (add_0 (S_0 r_0) (S_0 x_83) y_11))))
(assert (forall ((y_11 Nat_0))
	(minus_0 Z_0 Z_0 y_11)))
(assert (forall ((x_83 Nat_0) (y_11 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_83 y_11)
	    (minus_0 (S_0 r_0) (S_0 x_83) y_11))))
(assert (forall ((y_11 Nat_0))
	(le_0 Z_0 y_11)))
(assert (forall ((x_83 Nat_0) (y_11 Nat_0))
	(=> (le_0 x_83 y_11)
	    (le_0 (S_0 x_83) (S_0 y_11)))))
(assert (forall ((y_11 Nat_0))
	(ge_0 y_11 Z_0)))
(assert (forall ((x_83 Nat_0) (y_11 Nat_0))
	(=> (ge_0 x_83 y_11)
	    (ge_0 (S_0 x_83) (S_0 y_11)))))
(assert (forall ((y_11 Nat_0))
	(lt_0 Z_0 (S_0 y_11))))
(assert (forall ((x_83 Nat_0) (y_11 Nat_0))
	(=> (lt_0 x_83 y_11)
	    (lt_0 (S_0 x_83) (S_0 y_11)))))
(assert (forall ((y_11 Nat_0))
	(gt_0 (S_0 y_11) Z_0)))
(assert (forall ((x_83 Nat_0) (y_11 Nat_0))
	(=> (gt_0 x_83 y_11)
	    (gt_0 (S_0 x_83) (S_0 y_11)))))
(assert (forall ((y_11 Nat_0))
	(mult_0 Z_0 Z_0 y_11)))
(assert (forall ((x_83 Nat_0) (y_11 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (mult_0 r_0 x_83 y_11)
			(add_0 z_5 r_0 y_11))
		(mult_0 z_5 (S_0 x_83) y_11))))
(assert (forall ((x_83 Nat_0) (y_11 Nat_0))
	(=> (lt_0 x_83 y_11)
	    (div_0 Z_0 x_83 y_11))))
(assert (forall ((x_83 Nat_0) (y_11 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (ge_0 x_83 y_11)
			(minus_0 z_5 x_83 y_11)
			(div_0 r_0 z_5 y_11))
		(div_0 (S_0 r_0) x_83 y_11))))
(assert (forall ((x_83 Nat_0) (y_11 Nat_0))
	(=> (lt_0 x_83 y_11)
	    (mod_0 x_83 x_83 y_11))))
(assert (forall ((x_83 Nat_0) (y_11 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (ge_0 x_83 y_11)
			(minus_0 z_5 x_83 y_11)
			(mod_0 r_0 z_5 y_11))
		(mod_0 r_0 x_83 y_11))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_100 list_0) (x_98 Nat_0) (x_99 list_0))
	(=> (= x_100 (cons_0 x_98 x_99))
	    (head_1 x_98 x_100))))
(assert (forall ((x_100 list_0) (x_98 Nat_0) (x_99 list_0))
	(=> (= x_100 (cons_0 x_98 x_99))
	    (tail_1 x_99 x_100))))
(assert (isnil_0 nil_0))
(assert (forall ((x_101 Nat_0) (x_102 list_0))
	(iscons_0 (cons_0 x_101 x_102))))
(assert (forall ((x_103 Nat_0) (x_104 list_0))
	(diseqlist_0 nil_0 (cons_0 x_103 x_104))))
(assert (forall ((x_105 Nat_0) (x_106 list_0))
	(diseqlist_0 (cons_0 x_105 x_106) nil_0)))
(assert (forall ((x_107 Nat_0) (x_108 list_0) (x_109 Nat_0) (x_110 list_0))
	(=> (diseqNat_0 x_107 x_109)
	    (diseqlist_0 (cons_0 x_107 x_108) (cons_0 x_109 x_110)))))
(assert (forall ((x_107 Nat_0) (x_108 list_0) (x_109 Nat_0) (x_110 list_0))
	(=> (diseqlist_0 x_108 x_110)
	    (diseqlist_0 (cons_0 x_107 x_108) (cons_0 x_109 x_110)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 list_0) (projpair_1 list_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (list_0 pair_0) Bool)
(declare-fun projpair_3 (list_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_113 pair_0) (x_111 list_0) (x_112 list_0))
	(=> (= x_113 (pair_1 x_111 x_112))
	    (projpair_2 x_111 x_113))))
(assert (forall ((x_113 pair_0) (x_111 list_0) (x_112 list_0))
	(=> (= x_113 (pair_1 x_111 x_112))
	    (projpair_3 x_112 x_113))))
(assert (forall ((x_114 list_0) (x_115 list_0))
	(ispair_0 (pair_1 x_114 x_115))))
(assert (forall ((x_116 list_0) (x_117 list_0) (x_118 list_0) (x_119 list_0))
	(=> (diseqlist_0 x_116 x_118)
	    (diseqpair_0 (pair_1 x_116 x_117) (pair_1 x_118 x_119)))))
(assert (forall ((x_116 list_0) (x_117 list_0) (x_118 list_0) (x_119 list_0))
	(=> (diseqlist_0 x_117 x_119)
	    (diseqpair_0 (pair_1 x_116 x_117) (pair_1 x_118 x_119)))))
(declare-fun third_0 (Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (x_17 Nat_0))
	(=>	(and (= x_17 Z_0)
			(= x_0 (S_0 (S_0 Z_0))))
		(third_0 x_17 x_0))))
(assert (forall ((x_0 Nat_0) (x_18 Nat_0))
	(=>	(and (= x_18 Z_0)
			(diseqNat_0 x_0 (S_0 (S_0 Z_0)))
			(= x_0 (S_0 Z_0)))
		(third_0 x_18 x_0))))
(assert (forall ((x_0 Nat_0) (x_19 Nat_0))
	(=>	(and (= x_19 Z_0)
			(= x_0 (S_0 (S_0 Z_0))))
		(third_0 x_19 x_0))))
(assert (forall ((x_0 Nat_0) (x_20 Nat_0))
	(=>	(and (= x_20 Z_0)
			(diseqNat_0 x_0 (S_0 (S_0 Z_0)))
			(diseqNat_0 x_0 (S_0 Z_0))
			(= x_0 Z_0))
		(third_0 x_20 x_0))))
(assert (forall ((x_0 Nat_0) (x_21 Nat_0))
	(=>	(and (= x_21 Z_0)
			(= x_0 (S_0 (S_0 Z_0))))
		(third_0 x_21 x_0))))
(assert (forall ((x_0 Nat_0) (x_22 Nat_0))
	(=>	(and (= x_22 Z_0)
			(diseqNat_0 x_0 (S_0 (S_0 Z_0)))
			(= x_0 (S_0 Z_0)))
		(third_0 x_22 x_0))))
(assert (forall ((x_0 Nat_0) (x_23 Nat_0))
	(=>	(and (= x_23 Z_0)
			(= x_0 (S_0 (S_0 Z_0))))
		(third_0 x_23 x_0))))
(assert (forall ((x_0 Nat_0) (x_24 Nat_0) (x_25 Nat_0) (x_84 Nat_0) (x_85 Nat_0))
	(=>	(and (= x_24 x_84)
			(third_0 x_25 x_85)
			(diseqNat_0 x_0 (S_0 (S_0 Z_0)))
			(diseqNat_0 x_0 (S_0 Z_0))
			(diseqNat_0 x_0 Z_0)
			(add_0 x_84 (S_0 Z_0) x_25)
			(minus_0 x_85 x_0 (S_0 (S_0 (S_0 Z_0)))))
		(third_0 x_24 x_0))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_1 Nat_0) (y_0 list_0) (x_26 list_0))
	(=>	(and (= x_26 nil_0)
			(le_0 x_1 Z_0))
		(take_0 x_26 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 list_0) (z_0 Nat_0) (xs_0 list_0) (x_27 list_0) (x_28 list_0) (x_86 Nat_0))
	(=>	(and (= x_27 (cons_0 z_0 x_28))
			(take_0 x_28 x_86 xs_0)
			(gt_0 x_1 Z_0)
			(= y_0 (cons_0 z_0 xs_0))
			(minus_0 x_86 x_1 (S_0 Z_0)))
		(take_0 x_27 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 list_0) (x_29 list_0))
	(=>	(and (= x_29 nil_0)
			(le_0 x_1 Z_0))
		(take_0 x_29 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 list_0) (x_30 list_0))
	(=>	(and (= x_30 nil_0)
			(gt_0 x_1 Z_0)
			(= y_0 nil_0))
		(take_0 x_30 x_1 y_0))))
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_2 Nat_0) (y_1 Nat_0) (x_31 list_0))
	(=>	(and (= x_31 (cons_0 x_2 (cons_0 y_1 nil_0)))
			(le_0 x_2 y_1))
		(sort_0 x_31 x_2 y_1))))
(assert (forall ((x_2 Nat_0) (y_1 Nat_0) (x_32 list_0))
	(=>	(and (= x_32 (cons_0 y_1 (cons_0 x_2 nil_0)))
			(gt_0 x_2 y_1))
		(sort_0 x_32 x_2 y_1))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_3 list_0) (y_2 Nat_0) (l_0 list_0) (x_33 Nat_0) (x_34 Nat_0) (x_87 Nat_0))
	(=>	(and (= x_33 x_87)
			(length_0 x_34 l_0)
			(= x_3 (cons_0 y_2 l_0))
			(add_0 x_87 (S_0 Z_0) x_34))
		(length_0 x_33 x_3))))
(assert (forall ((x_3 list_0) (x_35 Nat_0))
	(=>	(and (= x_35 Z_0)
			(= x_3 nil_0))
		(length_0 x_35 x_3))))
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_4 Nat_0) (y_3 list_0) (z_1 Nat_0) (xs_1 list_0) (x_36 list_0))
	(=>	(and (= x_36 (cons_0 x_4 (cons_0 z_1 xs_1)))
			(= y_3 (cons_0 z_1 xs_1))
			(le_0 x_4 z_1))
		(insert_0 x_36 x_4 y_3))))
(assert (forall ((x_4 Nat_0) (y_3 list_0) (z_1 Nat_0) (xs_1 list_0) (x_37 list_0) (x_38 list_0))
	(=>	(and (= x_37 (cons_0 z_1 x_38))
			(insert_0 x_38 x_4 xs_1)
			(= y_3 (cons_0 z_1 xs_1))
			(gt_0 x_4 z_1))
		(insert_0 x_37 x_4 y_3))))
(assert (forall ((x_4 Nat_0) (y_3 list_0) (x_39 list_0))
	(=>	(and (= x_39 (cons_0 x_4 nil_0))
			(= y_3 nil_0))
		(insert_0 x_39 x_4 y_3))))
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_5 list_0) (y_4 Nat_0) (xs_2 list_0) (x_40 list_0) (x_41 list_0) (x_42 list_0))
	(=>	(and (= x_40 x_42)
			(isort_0 x_41 xs_2)
			(insert_0 x_42 y_4 x_41)
			(= x_5 (cons_0 y_4 xs_2)))
		(isort_0 x_40 x_5))))
(assert (forall ((x_5 list_0) (x_43 list_0))
	(=>	(and (= x_43 nil_0)
			(= x_5 nil_0))
		(isort_0 x_43 x_5))))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_6 Nat_0) (y_5 list_0) (x_44 list_0))
	(=>	(and (= x_44 y_5)
			(le_0 x_6 Z_0))
		(drop_0 x_44 x_6 y_5))))
(assert (forall ((x_6 Nat_0) (y_5 list_0) (z_2 Nat_0) (xs_3 list_0) (x_45 list_0) (x_46 list_0) (x_88 Nat_0))
	(=>	(and (= x_45 x_46)
			(drop_0 x_46 x_88 xs_3)
			(gt_0 x_6 Z_0)
			(= y_5 (cons_0 z_2 xs_3))
			(minus_0 x_88 x_6 (S_0 Z_0)))
		(drop_0 x_45 x_6 y_5))))
(assert (forall ((x_6 Nat_0) (y_5 list_0) (x_47 list_0))
	(=>	(and (= x_47 y_5)
			(le_0 x_6 Z_0))
		(drop_0 x_47 x_6 y_5))))
(assert (forall ((x_6 Nat_0) (y_5 list_0) (x_48 list_0))
	(=>	(and (= x_48 nil_0)
			(gt_0 x_6 Z_0)
			(= y_5 nil_0))
		(drop_0 x_48 x_6 y_5))))
(declare-fun splitAt_0 (pair_0 Nat_0 list_0) Bool)
(assert (forall ((x_7 Nat_0) (y_6 list_0) (x_49 pair_0) (x_50 list_0) (x_51 list_0))
	(=>	(and (= x_49 (pair_1 x_50 x_51))
			(take_0 x_50 x_7 y_6)
			(drop_0 x_51 x_7 y_6))
		(splitAt_0 x_49 x_7 y_6))))
(declare-fun x_8 (list_0 list_0 list_0) Bool)
(assert (forall ((x_9 list_0) (y_7 list_0) (z_3 Nat_0) (xs_4 list_0) (x_52 list_0) (x_53 list_0))
	(=>	(and (= x_52 (cons_0 z_3 x_53))
			(x_8 x_53 xs_4 y_7)
			(= x_9 (cons_0 z_3 xs_4)))
		(x_8 x_52 x_9 y_7))))
(assert (forall ((x_9 list_0) (y_7 list_0) (x_54 list_0))
	(=>	(and (= x_54 y_7)
			(= x_9 nil_0))
		(x_8 x_54 x_9 y_7))))
(declare-fun reverse_0 (list_0 list_0) Bool)
(assert (forall ((x_10 list_0) (y_8 Nat_0) (xs_5 list_0) (x_55 list_0) (x_56 list_0) (x_57 list_0))
	(=>	(and (= x_55 x_57)
			(reverse_0 x_56 xs_5)
			(x_8 x_57 x_56 (cons_0 y_8 nil_0))
			(= x_10 (cons_0 y_8 xs_5)))
		(reverse_0 x_55 x_10))))
(assert (forall ((x_10 list_0) (x_58 list_0))
	(=>	(and (= x_58 nil_0)
			(= x_10 nil_0))
		(reverse_0 x_58 x_10))))
(declare-fun nstoogesort_0 (list_0 list_0) Bool)
(declare-fun nstoogesort_1 (list_0 list_0) Bool)
(declare-fun nstoogesort_2 (list_0 list_0) Bool)
(assert (forall ((x_11 list_0) (ys_0 list_0) (zs_0 list_0) (x_63 list_0) (x_64 list_0) (x_65 list_0) (x_66 list_0) (x_59 Nat_0) (x_60 Nat_0) (x_61 list_0) (x_62 pair_0))
	(=>	(and (= x_63 x_66)
			(nstoogesort_1 x_64 zs_0)
			(reverse_0 x_65 ys_0)
			(x_8 x_66 x_64 x_65)
			(= x_62 (pair_1 ys_0 zs_0))
			(length_0 x_59 x_11)
			(third_0 x_60 x_59)
			(reverse_0 x_61 x_11)
			(splitAt_0 x_62 x_60 x_61))
		(nstoogesort_0 x_63 x_11))))
(assert (forall ((x_12 list_0) (y_9 Nat_0) (z_4 list_0) (y_10 Nat_0) (x_13 list_0) (x_14 Nat_0) (x_15 list_0) (x_67 list_0) (x_68 list_0) (x_69 list_0) (x_70 list_0))
	(=>	(and (= x_67 x_70)
			(nstoogesort_0 x_68 (cons_0 y_9 (cons_0 y_10 (cons_0 x_14 x_15))))
			(nstoogesort_2 x_69 x_68)
			(nstoogesort_0 x_70 x_69)
			(= x_12 (cons_0 y_9 z_4))
			(= z_4 (cons_0 y_10 x_13))
			(= x_13 (cons_0 x_14 x_15)))
		(nstoogesort_1 x_67 x_12))))
(assert (forall ((x_12 list_0) (y_9 Nat_0) (z_4 list_0) (y_10 Nat_0) (x_13 list_0) (x_71 list_0) (x_72 list_0))
	(=>	(and (= x_71 x_72)
			(sort_0 x_72 y_9 y_10)
			(= x_12 (cons_0 y_9 z_4))
			(= z_4 (cons_0 y_10 x_13))
			(= x_13 nil_0))
		(nstoogesort_1 x_71 x_12))))
(assert (forall ((x_12 list_0) (y_9 Nat_0) (z_4 list_0) (x_73 list_0))
	(=>	(and (= x_73 (cons_0 y_9 nil_0))
			(= x_12 (cons_0 y_9 z_4))
			(= z_4 nil_0))
		(nstoogesort_1 x_73 x_12))))
(assert (forall ((x_12 list_0) (x_74 list_0))
	(=>	(and (= x_74 nil_0)
			(= x_12 nil_0))
		(nstoogesort_1 x_74 x_12))))
(assert (forall ((x_16 list_0) (ys_1 list_0) (zs_1 list_0) (x_78 list_0) (x_79 list_0) (x_80 list_0) (x_75 Nat_0) (x_76 Nat_0) (x_77 pair_0))
	(=>	(and (= x_78 x_80)
			(nstoogesort_1 x_79 zs_1)
			(x_8 x_80 ys_1 x_79)
			(= x_77 (pair_1 ys_1 zs_1))
			(length_0 x_75 x_16)
			(third_0 x_76 x_75)
			(splitAt_0 x_77 x_76 x_16))
		(nstoogesort_2 x_78 x_16))))
(assert (forall ((xs_6 list_0) (x_81 list_0) (x_82 list_0))
	(=>	(and (diseqlist_0 x_81 x_82)
			(nstoogesort_1 x_81 xs_6)
			(isort_0 x_82 xs_6))
		false)))
(check-sat)
