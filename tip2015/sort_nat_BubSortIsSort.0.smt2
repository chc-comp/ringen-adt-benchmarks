(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_0 ) (S_0 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_38 Nat_1) (x_37 Nat_1))
	(=> (= x_38 (S_0 x_37))
	    (unS_1 x_37 x_38))))
(assert (isZ_0 Z_0))
(assert (forall ((x_39 Nat_1))
	(isS_0 (S_0 x_39))))
(assert (forall ((x_40 Nat_1))
	(diseqNat_0 Z_0 (S_0 x_40))))
(assert (forall ((x_41 Nat_1))
	(diseqNat_0 (S_0 x_41) Z_0)))
(assert (forall ((x_42 Nat_1) (x_43 Nat_1))
	(=> (diseqNat_0 x_42 x_43)
	    (diseqNat_0 (S_0 x_42) (S_0 x_43)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_5 Nat_1))
	(add_0 y_5 Z_0 y_5)))
(assert (forall ((x_35 Nat_1) (y_5 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_35 y_5)
	    (add_0 (S_0 r_0) (S_0 x_35) y_5))))
(assert (forall ((y_5 Nat_1))
	(minus_0 Z_0 Z_0 y_5)))
(assert (forall ((x_35 Nat_1) (y_5 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_35 y_5)
	    (minus_0 (S_0 r_0) (S_0 x_35) y_5))))
(assert (forall ((y_5 Nat_1))
	(le_0 Z_0 y_5)))
(assert (forall ((x_35 Nat_1) (y_5 Nat_1))
	(=> (le_0 x_35 y_5)
	    (le_0 (S_0 x_35) (S_0 y_5)))))
(assert (forall ((y_5 Nat_1))
	(ge_0 y_5 Z_0)))
(assert (forall ((x_35 Nat_1) (y_5 Nat_1))
	(=> (ge_0 x_35 y_5)
	    (ge_0 (S_0 x_35) (S_0 y_5)))))
(assert (forall ((y_5 Nat_1))
	(lt_0 Z_0 (S_0 y_5))))
(assert (forall ((x_35 Nat_1) (y_5 Nat_1))
	(=> (lt_0 x_35 y_5)
	    (lt_0 (S_0 x_35) (S_0 y_5)))))
(assert (forall ((y_5 Nat_1))
	(gt_0 (S_0 y_5) Z_0)))
(assert (forall ((x_35 Nat_1) (y_5 Nat_1))
	(=> (gt_0 x_35 y_5)
	    (gt_0 (S_0 x_35) (S_0 y_5)))))
(assert (forall ((y_5 Nat_1))
	(mult_0 Z_0 Z_0 y_5)))
(assert (forall ((x_35 Nat_1) (y_5 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (mult_0 r_0 x_35 y_5)
			(add_0 z_3 r_0 y_5))
		(mult_0 z_3 (S_0 x_35) y_5))))
(assert (forall ((x_35 Nat_1) (y_5 Nat_1))
	(=> (lt_0 x_35 y_5)
	    (div_0 Z_0 x_35 y_5))))
(assert (forall ((x_35 Nat_1) (y_5 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_35 y_5)
			(minus_0 z_3 x_35 y_5)
			(div_0 r_0 z_3 y_5))
		(div_0 (S_0 r_0) x_35 y_5))))
(assert (forall ((x_35 Nat_1) (y_5 Nat_1))
	(=> (lt_0 x_35 y_5)
	    (mod_0 x_35 x_35 y_5))))
(assert (forall ((x_35 Nat_1) (y_5 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_35 y_5)
			(minus_0 z_3 x_35 y_5)
			(mod_0 r_0 z_3 y_5))
		(mod_0 r_0 x_35 y_5))))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_46 Nat_0) (x_45 Nat_0))
	(=> (= x_46 (succ_0 x_45))
	    (p_1 x_45 x_46))))
(assert (iszero_0 zero_0))
(assert (forall ((x_47 Nat_0))
	(issucc_0 (succ_0 x_47))))
(assert (forall ((x_48 Nat_0))
	(diseqNat_1 zero_0 (succ_0 x_48))))
(assert (forall ((x_49 Nat_0))
	(diseqNat_1 (succ_0 x_49) zero_0)))
(assert (forall ((x_50 Nat_0) (x_51 Nat_0))
	(=> (diseqNat_1 x_50 x_51)
	    (diseqNat_1 (succ_0 x_50) (succ_0 x_51)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_55 list_0) (x_53 Nat_0) (x_54 list_0))
	(=> (= x_55 (cons_0 x_53 x_54))
	    (head_1 x_53 x_55))))
(assert (forall ((x_55 list_0) (x_53 Nat_0) (x_54 list_0))
	(=> (= x_55 (cons_0 x_53 x_54))
	    (tail_1 x_54 x_55))))
(assert (isnil_0 nil_0))
(assert (forall ((x_56 Nat_0) (x_57 list_0))
	(iscons_0 (cons_0 x_56 x_57))))
(assert (forall ((x_58 Nat_0) (x_59 list_0))
	(diseqlist_0 nil_0 (cons_0 x_58 x_59))))
(assert (forall ((x_60 Nat_0) (x_61 list_0))
	(diseqlist_0 (cons_0 x_60 x_61) nil_0)))
(assert (forall ((x_62 Nat_0) (x_63 list_0) (x_64 Nat_0) (x_65 list_0))
	(=> (diseqNat_1 x_62 x_64)
	    (diseqlist_0 (cons_0 x_62 x_63) (cons_0 x_64 x_65)))))
(assert (forall ((x_62 Nat_0) (x_63 list_0) (x_64 Nat_0) (x_65 list_0))
	(=> (diseqlist_0 x_63 x_65)
	    (diseqlist_0 (cons_0 x_62 x_63) (cons_0 x_64 x_65)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Bool) (projpair_1 list_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (Bool pair_0) Bool)
(declare-fun projpair_3 (list_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_68 pair_0) (x_66 Bool) (x_67 list_0))
	(=> (= x_68 (pair_1 x_66 x_67))
	    (projpair_2 x_66 x_68))))
(assert (forall ((x_68 pair_0) (x_66 Bool) (x_67 list_0))
	(=> (= x_68 (pair_1 x_66 x_67))
	    (projpair_3 x_67 x_68))))
(assert (forall ((x_69 Bool) (x_70 list_0))
	(ispair_0 (pair_1 x_69 x_70))))
(assert (forall ((x_71 Bool) (x_72 list_0) (x_73 Bool) (x_74 list_0))
	(=> (not (= x_71 x_73))
	    (diseqpair_0 (pair_1 x_71 x_72) (pair_1 x_73 x_74)))))
(assert (forall ((x_71 Bool) (x_72 list_0) (x_73 Bool) (x_74 list_0))
	(=> (diseqlist_0 x_72 x_74)
	    (diseqpair_0 (pair_1 x_71 x_72) (pair_1 x_73 x_74)))))
(declare-fun leq_0 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_1 Nat_0) (x_6 Bool) (x_7 Bool))
	(=>	(and (= x_6 x_7)
			(leq_0 x_7 z_0 x_1)
			(= x_0 (succ_0 z_0))
			(= y_0 (succ_0 x_1)))
		(leq_0 x_6 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_8 Bool))
	(=>	(and (= x_8 false)
			(= x_0 (succ_0 z_0))
			(= y_0 zero_0))
		(leq_0 x_8 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_9 Bool))
	(=>	(and (= x_9 true)
			(= x_0 zero_0))
		(leq_0 x_9 x_0 y_0))))
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_2 Nat_0) (y_1 list_0) (z_1 Nat_0) (xs_0 list_0) (x_11 list_0) (x_10 Bool))
	(=>	(and (= x_11 (cons_0 x_2 (cons_0 z_1 xs_0)))
			(= y_1 (cons_0 z_1 xs_0))
			(= x_10 true)
			(leq_0 x_10 x_2 z_1))
		(insert_0 x_11 x_2 y_1))))
(assert (forall ((x_2 Nat_0) (y_1 list_0) (z_1 Nat_0) (xs_0 list_0) (x_13 list_0) (x_14 list_0) (x_12 Bool))
	(=>	(and (= x_13 (cons_0 z_1 x_14))
			(insert_0 x_14 x_2 xs_0)
			(= y_1 (cons_0 z_1 xs_0))
			(= x_12 false)
			(leq_0 x_12 x_2 z_1))
		(insert_0 x_13 x_2 y_1))))
(assert (forall ((x_2 Nat_0) (y_1 list_0) (x_15 list_0))
	(=>	(and (= x_15 (cons_0 x_2 nil_0))
			(= y_1 nil_0))
		(insert_0 x_15 x_2 y_1))))
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_3 list_0) (y_2 Nat_0) (xs_1 list_0) (x_16 list_0) (x_17 list_0) (x_18 list_0))
	(=>	(and (= x_16 x_18)
			(isort_0 x_17 xs_1)
			(insert_0 x_18 y_2 x_17)
			(= x_3 (cons_0 y_2 xs_1)))
		(isort_0 x_16 x_3))))
(assert (forall ((x_3 list_0) (x_19 list_0))
	(=>	(and (= x_19 nil_0)
			(= x_3 nil_0))
		(isort_0 x_19 x_3))))
(declare-fun bubble_0 (pair_0 list_0) Bool)
(assert (forall ((x_4 list_0) (y_3 Nat_0) (z_2 list_0) (y_4 Nat_0) (xs_2 list_0) (b_0 Bool) (ys_0 list_0) (x_22 pair_0) (x_20 Bool) (x_21 pair_0))
	(=>	(and (= x_22 (pair_1 b_0 (cons_0 y_3 ys_0)))
			(= x_4 (cons_0 y_3 z_2))
			(= z_2 (cons_0 y_4 xs_2))
			(= x_20 true)
			(= x_21 (pair_1 b_0 ys_0))
			(leq_0 x_20 y_3 y_4)
			(bubble_0 x_21 (cons_0 y_4 xs_2)))
		(bubble_0 x_22 x_4))))
(assert (forall ((x_4 list_0) (y_3 Nat_0) (z_2 list_0) (y_4 Nat_0) (xs_2 list_0) (b_1 Bool) (ys_1 list_0) (x_25 pair_0) (x_23 Bool) (x_24 pair_0))
	(=>	(and (= x_25 (pair_1 true (cons_0 y_4 ys_1)))
			(= x_4 (cons_0 y_3 z_2))
			(= z_2 (cons_0 y_4 xs_2))
			(= x_23 false)
			(= x_24 (pair_1 b_1 ys_1))
			(leq_0 x_23 y_3 y_4)
			(bubble_0 x_24 (cons_0 y_3 xs_2)))
		(bubble_0 x_25 x_4))))
(assert (forall ((x_4 list_0) (y_3 Nat_0) (z_2 list_0) (x_26 pair_0))
	(=>	(and (= x_26 (pair_1 false (cons_0 y_3 nil_0)))
			(= x_4 (cons_0 y_3 z_2))
			(= z_2 nil_0))
		(bubble_0 x_26 x_4))))
(assert (forall ((x_4 list_0) (x_27 pair_0))
	(=>	(and (= x_27 (pair_1 false nil_0))
			(= x_4 nil_0))
		(bubble_0 x_27 x_4))))
(declare-fun bubsort_0 (list_0 list_0) Bool)
(assert (forall ((x_5 list_0) (c_0 Bool) (ys_2 list_0) (x_29 list_0) (x_30 list_0) (x_28 pair_0))
	(=>	(and (= x_29 x_30)
			(bubsort_0 x_30 ys_2)
			(= x_28 (pair_1 c_0 ys_2))
			c_0
			(bubble_0 x_28 x_5))
		(bubsort_0 x_29 x_5))))
(assert (forall ((x_5 list_0) (c_0 Bool) (ys_2 list_0) (x_32 list_0) (x_31 pair_0))
	(=>	(and (= x_32 x_5)
			(= x_31 (pair_1 c_0 ys_2))
			(not c_0)
			(bubble_0 x_31 x_5))
		(bubsort_0 x_32 x_5))))
(assert (forall ((xs_3 list_0) (x_33 list_0) (x_34 list_0))
	(=>	(and (diseqlist_0 x_33 x_34)
			(bubsort_0 x_33 xs_3)
			(isort_0 x_34 xs_3))
		false)))
(check-sat)
