(set-logic HORN)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun leq_0 (Bool_0 Nat_0 Nat_0) Bool)
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(assert (forall ((x_16 Nat_0))
	(diseqNat_0 zero_0 (succ_0 x_16))))
(assert (forall ((x_17 Nat_0))
	(diseqNat_0 (succ_0 x_17) zero_0)))
(assert (forall ((x_18 Nat_0) (x_19 Nat_0))
	(=> (diseqNat_0 x_18 x_19) (diseqNat_0 (succ_0 x_18) (succ_0 x_19)))))
(assert (forall ((x_3 Bool_0) (x_1 Nat_0) (z_0 Nat_0))
	(=> (leq_0 x_3 z_0 x_1) (leq_0 x_3 (succ_0 z_0) (succ_0 x_1)))))
(assert (forall ((z_0 Nat_0))
	(leq_0 false_0 (succ_0 z_0) zero_0)))
(assert (forall ((y_0 Nat_0))
	(leq_0 true_0 zero_0 y_0)))
(assert (forall ((x_2 Nat_0))
	(=> (and (diseqNat_0 x_2 x_2) (leq_0 true_0 x_2 x_2)) false)))
(assert (forall ((x_8 Bool_0) (x_2 Nat_0))
	(=> (and (diseqNat_0 x_2 x_2) (diseqBool_0 x_8 true_0) (leq_0 x_8 x_2 x_2)) false)))
(check-sat)
(get-model)
