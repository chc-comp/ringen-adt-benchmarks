(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_86 Nat_0) (x_85 Nat_0))
	(=> (= x_86 (S_0 x_85))
	    (unS_1 x_85 x_86))))
(assert (isZ_0 Z_0))
(assert (forall ((x_87 Nat_0))
	(isS_0 (S_0 x_87))))
(assert (forall ((x_88 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_88))))
(assert (forall ((x_89 Nat_0))
	(diseqNat_0 (S_0 x_89) Z_0)))
(assert (forall ((x_90 Nat_0) (x_91 Nat_0))
	(=> (diseqNat_0 x_90 x_91)
	    (diseqNat_0 (S_0 x_90) (S_0 x_91)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_11 Nat_0))
	(add_0 y_11 Z_0 y_11)))
(assert (forall ((x_78 Nat_0) (y_11 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_78 y_11)
	    (add_0 (S_0 r_0) (S_0 x_78) y_11))))
(assert (forall ((y_11 Nat_0))
	(minus_0 Z_0 Z_0 y_11)))
(assert (forall ((x_78 Nat_0) (y_11 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_78 y_11)
	    (minus_0 (S_0 r_0) (S_0 x_78) y_11))))
(assert (forall ((y_11 Nat_0))
	(le_0 Z_0 y_11)))
(assert (forall ((x_78 Nat_0) (y_11 Nat_0))
	(=> (le_0 x_78 y_11)
	    (le_0 (S_0 x_78) (S_0 y_11)))))
(assert (forall ((y_11 Nat_0))
	(ge_0 y_11 Z_0)))
(assert (forall ((x_78 Nat_0) (y_11 Nat_0))
	(=> (ge_0 x_78 y_11)
	    (ge_0 (S_0 x_78) (S_0 y_11)))))
(assert (forall ((y_11 Nat_0))
	(lt_0 Z_0 (S_0 y_11))))
(assert (forall ((x_78 Nat_0) (y_11 Nat_0))
	(=> (lt_0 x_78 y_11)
	    (lt_0 (S_0 x_78) (S_0 y_11)))))
(assert (forall ((y_11 Nat_0))
	(gt_0 (S_0 y_11) Z_0)))
(assert (forall ((x_78 Nat_0) (y_11 Nat_0))
	(=> (gt_0 x_78 y_11)
	    (gt_0 (S_0 x_78) (S_0 y_11)))))
(assert (forall ((y_11 Nat_0))
	(mult_0 Z_0 Z_0 y_11)))
(assert (forall ((x_78 Nat_0) (y_11 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (mult_0 r_0 x_78 y_11)
			(add_0 z_5 r_0 y_11))
		(mult_0 z_5 (S_0 x_78) y_11))))
(assert (forall ((x_78 Nat_0) (y_11 Nat_0))
	(=> (lt_0 x_78 y_11)
	    (div_0 Z_0 x_78 y_11))))
(assert (forall ((x_78 Nat_0) (y_11 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (ge_0 x_78 y_11)
			(minus_0 z_5 x_78 y_11)
			(div_0 r_0 z_5 y_11))
		(div_0 (S_0 r_0) x_78 y_11))))
(assert (forall ((x_78 Nat_0) (y_11 Nat_0))
	(=> (lt_0 x_78 y_11)
	    (mod_0 x_78 x_78 y_11))))
(assert (forall ((x_78 Nat_0) (y_11 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (ge_0 x_78 y_11)
			(minus_0 z_5 x_78 y_11)
			(mod_0 r_0 z_5 y_11))
		(mod_0 r_0 x_78 y_11))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_95 list_0) (x_93 Nat_0) (x_94 list_0))
	(=> (= x_95 (cons_0 x_93 x_94))
	    (head_1 x_93 x_95))))
(assert (forall ((x_95 list_0) (x_93 Nat_0) (x_94 list_0))
	(=> (= x_95 (cons_0 x_93 x_94))
	    (tail_1 x_94 x_95))))
(assert (isnil_0 nil_0))
(assert (forall ((x_96 Nat_0) (x_97 list_0))
	(iscons_0 (cons_0 x_96 x_97))))
(assert (forall ((x_98 Nat_0) (x_99 list_0))
	(diseqlist_0 nil_0 (cons_0 x_98 x_99))))
(assert (forall ((x_100 Nat_0) (x_101 list_0))
	(diseqlist_0 (cons_0 x_100 x_101) nil_0)))
(assert (forall ((x_102 Nat_0) (x_103 list_0) (x_104 Nat_0) (x_105 list_0))
	(=> (diseqNat_0 x_102 x_104)
	    (diseqlist_0 (cons_0 x_102 x_103) (cons_0 x_104 x_105)))))
(assert (forall ((x_102 Nat_0) (x_103 list_0) (x_104 Nat_0) (x_105 list_0))
	(=> (diseqlist_0 x_103 x_105)
	    (diseqlist_0 (cons_0 x_102 x_103) (cons_0 x_104 x_105)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 list_0) (projpair_1 list_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (list_0 pair_0) Bool)
(declare-fun projpair_3 (list_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_108 pair_0) (x_106 list_0) (x_107 list_0))
	(=> (= x_108 (pair_1 x_106 x_107))
	    (projpair_2 x_106 x_108))))
(assert (forall ((x_108 pair_0) (x_106 list_0) (x_107 list_0))
	(=> (= x_108 (pair_1 x_106 x_107))
	    (projpair_3 x_107 x_108))))
(assert (forall ((x_109 list_0) (x_110 list_0))
	(ispair_0 (pair_1 x_109 x_110))))
(assert (forall ((x_111 list_0) (x_112 list_0) (x_113 list_0) (x_114 list_0))
	(=> (diseqlist_0 x_111 x_113)
	    (diseqpair_0 (pair_1 x_111 x_112) (pair_1 x_113 x_114)))))
(assert (forall ((x_111 list_0) (x_112 list_0) (x_113 list_0) (x_114 list_0))
	(=> (diseqlist_0 x_112 x_114)
	    (diseqpair_0 (pair_1 x_111 x_112) (pair_1 x_113 x_114)))))
(declare-fun third_0 (Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (x_16 Nat_0))
	(=>	(and (= x_16 Z_0)
			(= x_0 (S_0 (S_0 Z_0))))
		(third_0 x_16 x_0))))
(assert (forall ((x_0 Nat_0) (x_17 Nat_0))
	(=>	(and (= x_17 Z_0)
			(diseqNat_0 x_0 (S_0 (S_0 Z_0)))
			(= x_0 (S_0 Z_0)))
		(third_0 x_17 x_0))))
(assert (forall ((x_0 Nat_0) (x_18 Nat_0))
	(=>	(and (= x_18 Z_0)
			(= x_0 (S_0 (S_0 Z_0))))
		(third_0 x_18 x_0))))
(assert (forall ((x_0 Nat_0) (x_19 Nat_0))
	(=>	(and (= x_19 Z_0)
			(diseqNat_0 x_0 (S_0 (S_0 Z_0)))
			(diseqNat_0 x_0 (S_0 Z_0))
			(= x_0 Z_0))
		(third_0 x_19 x_0))))
(assert (forall ((x_0 Nat_0) (x_20 Nat_0))
	(=>	(and (= x_20 Z_0)
			(= x_0 (S_0 (S_0 Z_0))))
		(third_0 x_20 x_0))))
(assert (forall ((x_0 Nat_0) (x_21 Nat_0))
	(=>	(and (= x_21 Z_0)
			(diseqNat_0 x_0 (S_0 (S_0 Z_0)))
			(= x_0 (S_0 Z_0)))
		(third_0 x_21 x_0))))
(assert (forall ((x_0 Nat_0) (x_22 Nat_0))
	(=>	(and (= x_22 Z_0)
			(= x_0 (S_0 (S_0 Z_0))))
		(third_0 x_22 x_0))))
(assert (forall ((x_0 Nat_0) (x_23 Nat_0) (x_24 Nat_0) (x_79 Nat_0) (x_80 Nat_0))
	(=>	(and (= x_23 x_79)
			(third_0 x_24 x_80)
			(diseqNat_0 x_0 (S_0 (S_0 Z_0)))
			(diseqNat_0 x_0 (S_0 Z_0))
			(diseqNat_0 x_0 Z_0)
			(add_0 x_79 (S_0 Z_0) x_24)
			(minus_0 x_80 x_0 (S_0 (S_0 (S_0 Z_0)))))
		(third_0 x_23 x_0))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_1 Nat_0) (y_0 list_0) (x_25 list_0))
	(=>	(and (= x_25 nil_0)
			(le_0 x_1 Z_0))
		(take_0 x_25 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 list_0) (z_0 Nat_0) (xs_0 list_0) (x_26 list_0) (x_27 list_0) (x_81 Nat_0))
	(=>	(and (= x_26 (cons_0 z_0 x_27))
			(take_0 x_27 x_81 xs_0)
			(gt_0 x_1 Z_0)
			(= y_0 (cons_0 z_0 xs_0))
			(minus_0 x_81 x_1 (S_0 Z_0)))
		(take_0 x_26 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 list_0) (x_28 list_0))
	(=>	(and (= x_28 nil_0)
			(le_0 x_1 Z_0))
		(take_0 x_28 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 list_0) (x_29 list_0))
	(=>	(and (= x_29 nil_0)
			(gt_0 x_1 Z_0)
			(= y_0 nil_0))
		(take_0 x_29 x_1 y_0))))
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_2 Nat_0) (y_1 Nat_0) (x_30 list_0))
	(=>	(and (= x_30 (cons_0 x_2 (cons_0 y_1 nil_0)))
			(le_0 x_2 y_1))
		(sort_0 x_30 x_2 y_1))))
(assert (forall ((x_2 Nat_0) (y_1 Nat_0) (x_31 list_0))
	(=>	(and (= x_31 (cons_0 y_1 (cons_0 x_2 nil_0)))
			(gt_0 x_2 y_1))
		(sort_0 x_31 x_2 y_1))))
(declare-fun ordered_0 (Bool list_0) Bool)
(assert (forall ((x_3 list_0) (y_2 Nat_0) (z_1 list_0) (y_3 Nat_0) (xs_1 list_0) (x_32 Bool) (x_33 Bool))
	(=>	(and (= x_32 (and (le_0 y_2 y_3) x_33))
			(ordered_0 x_33 (cons_0 y_3 xs_1))
			(= x_3 (cons_0 y_2 z_1))
			(= z_1 (cons_0 y_3 xs_1)))
		(ordered_0 x_32 x_3))))
(assert (forall ((x_3 list_0) (y_2 Nat_0) (z_1 list_0) (x_34 Bool))
	(=>	(and (= x_34 true)
			(= x_3 (cons_0 y_2 z_1))
			(= z_1 nil_0))
		(ordered_0 x_34 x_3))))
(assert (forall ((x_3 list_0) (x_35 Bool))
	(=>	(and (= x_35 true)
			(= x_3 nil_0))
		(ordered_0 x_35 x_3))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_4 list_0) (y_4 Nat_0) (l_0 list_0) (x_36 Nat_0) (x_37 Nat_0) (x_82 Nat_0))
	(=>	(and (= x_36 x_82)
			(length_0 x_37 l_0)
			(= x_4 (cons_0 y_4 l_0))
			(add_0 x_82 (S_0 Z_0) x_37))
		(length_0 x_36 x_4))))
(assert (forall ((x_4 list_0) (x_38 Nat_0))
	(=>	(and (= x_38 Z_0)
			(= x_4 nil_0))
		(length_0 x_38 x_4))))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_5 Nat_0) (y_5 list_0) (x_39 list_0))
	(=>	(and (= x_39 y_5)
			(le_0 x_5 Z_0))
		(drop_0 x_39 x_5 y_5))))
(assert (forall ((x_5 Nat_0) (y_5 list_0) (z_2 Nat_0) (xs_2 list_0) (x_40 list_0) (x_41 list_0) (x_83 Nat_0))
	(=>	(and (= x_40 x_41)
			(drop_0 x_41 x_83 xs_2)
			(gt_0 x_5 Z_0)
			(= y_5 (cons_0 z_2 xs_2))
			(minus_0 x_83 x_5 (S_0 Z_0)))
		(drop_0 x_40 x_5 y_5))))
(assert (forall ((x_5 Nat_0) (y_5 list_0) (x_42 list_0))
	(=>	(and (= x_42 y_5)
			(le_0 x_5 Z_0))
		(drop_0 x_42 x_5 y_5))))
(assert (forall ((x_5 Nat_0) (y_5 list_0) (x_43 list_0))
	(=>	(and (= x_43 nil_0)
			(gt_0 x_5 Z_0)
			(= y_5 nil_0))
		(drop_0 x_43 x_5 y_5))))
(declare-fun splitAt_0 (pair_0 Nat_0 list_0) Bool)
(assert (forall ((x_6 Nat_0) (y_6 list_0) (x_44 pair_0) (x_45 list_0) (x_46 list_0))
	(=>	(and (= x_44 (pair_1 x_45 x_46))
			(take_0 x_45 x_6 y_6)
			(drop_0 x_46 x_6 y_6))
		(splitAt_0 x_44 x_6 y_6))))
(declare-fun x_7 (list_0 list_0 list_0) Bool)
(assert (forall ((x_8 list_0) (y_7 list_0) (z_3 Nat_0) (xs_3 list_0) (x_47 list_0) (x_48 list_0))
	(=>	(and (= x_47 (cons_0 z_3 x_48))
			(x_7 x_48 xs_3 y_7)
			(= x_8 (cons_0 z_3 xs_3)))
		(x_7 x_47 x_8 y_7))))
(assert (forall ((x_8 list_0) (y_7 list_0) (x_49 list_0))
	(=>	(and (= x_49 y_7)
			(= x_8 nil_0))
		(x_7 x_49 x_8 y_7))))
(declare-fun reverse_0 (list_0 list_0) Bool)
(assert (forall ((x_9 list_0) (y_8 Nat_0) (xs_4 list_0) (x_50 list_0) (x_51 list_0) (x_52 list_0))
	(=>	(and (= x_50 x_52)
			(reverse_0 x_51 xs_4)
			(x_7 x_52 x_51 (cons_0 y_8 nil_0))
			(= x_9 (cons_0 y_8 xs_4)))
		(reverse_0 x_50 x_9))))
(assert (forall ((x_9 list_0) (x_53 list_0))
	(=>	(and (= x_53 nil_0)
			(= x_9 nil_0))
		(reverse_0 x_53 x_9))))
(declare-fun nstoogesort_0 (list_0 list_0) Bool)
(declare-fun nstoogesort_1 (list_0 list_0) Bool)
(declare-fun nstoogesort_2 (list_0 list_0) Bool)
(assert (forall ((x_10 list_0) (ys_0 list_0) (zs_0 list_0) (x_58 list_0) (x_59 list_0) (x_60 list_0) (x_61 list_0) (x_54 Nat_0) (x_55 Nat_0) (x_56 list_0) (x_57 pair_0))
	(=>	(and (= x_58 x_61)
			(nstoogesort_1 x_59 zs_0)
			(reverse_0 x_60 ys_0)
			(x_7 x_61 x_59 x_60)
			(= x_57 (pair_1 ys_0 zs_0))
			(length_0 x_54 x_10)
			(third_0 x_55 x_54)
			(reverse_0 x_56 x_10)
			(splitAt_0 x_57 x_55 x_56))
		(nstoogesort_0 x_58 x_10))))
(assert (forall ((x_11 list_0) (y_9 Nat_0) (z_4 list_0) (y_10 Nat_0) (x_12 list_0) (x_13 Nat_0) (x_14 list_0) (x_62 list_0) (x_63 list_0) (x_64 list_0) (x_65 list_0))
	(=>	(and (= x_62 x_65)
			(nstoogesort_0 x_63 (cons_0 y_9 (cons_0 y_10 (cons_0 x_13 x_14))))
			(nstoogesort_2 x_64 x_63)
			(nstoogesort_0 x_65 x_64)
			(= x_11 (cons_0 y_9 z_4))
			(= z_4 (cons_0 y_10 x_12))
			(= x_12 (cons_0 x_13 x_14)))
		(nstoogesort_1 x_62 x_11))))
(assert (forall ((x_11 list_0) (y_9 Nat_0) (z_4 list_0) (y_10 Nat_0) (x_12 list_0) (x_66 list_0) (x_67 list_0))
	(=>	(and (= x_66 x_67)
			(sort_0 x_67 y_9 y_10)
			(= x_11 (cons_0 y_9 z_4))
			(= z_4 (cons_0 y_10 x_12))
			(= x_12 nil_0))
		(nstoogesort_1 x_66 x_11))))
(assert (forall ((x_11 list_0) (y_9 Nat_0) (z_4 list_0) (x_68 list_0))
	(=>	(and (= x_68 (cons_0 y_9 nil_0))
			(= x_11 (cons_0 y_9 z_4))
			(= z_4 nil_0))
		(nstoogesort_1 x_68 x_11))))
(assert (forall ((x_11 list_0) (x_69 list_0))
	(=>	(and (= x_69 nil_0)
			(= x_11 nil_0))
		(nstoogesort_1 x_69 x_11))))
(assert (forall ((x_15 list_0) (ys_1 list_0) (zs_1 list_0) (x_73 list_0) (x_74 list_0) (x_75 list_0) (x_70 Nat_0) (x_71 Nat_0) (x_72 pair_0))
	(=>	(and (= x_73 x_75)
			(nstoogesort_1 x_74 zs_1)
			(x_7 x_75 ys_1 x_74)
			(= x_72 (pair_1 ys_1 zs_1))
			(length_0 x_70 x_15)
			(third_0 x_71 x_70)
			(splitAt_0 x_72 x_71 x_15))
		(nstoogesort_2 x_73 x_15))))
(assert (forall ((xs_5 list_0) (x_76 list_0) (x_77 Bool))
	(=>	(and (= x_77 false)
			(nstoogesort_1 x_76 xs_5)
			(ordered_0 x_77 x_76))
		false)))
(check-sat)
