(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_5 ) (Z_6 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(declare-fun lmerge_0 (list_0 list_0 list_0) Bool)
(declare-fun length_0 (Nat_0 list_0) Bool)
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(declare-fun msorttd_0 (list_0 list_0) Bool)
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_58 Nat_0))
	(diseqNat_0 Z_5 (Z_6 x_58))))
(assert (forall ((x_59 Nat_0))
	(diseqNat_0 (Z_6 x_59) Z_5)))
(assert (forall ((x_60 Nat_0) (x_61 Nat_0))
	(=> (diseqNat_0 x_60 x_61) (diseqNat_0 (Z_6 x_60) (Z_6 x_61)))))
(assert (forall ((y_6 Nat_0))
	(add_0 y_6 Z_5 y_6)))
(assert (forall ((r_0 Nat_0) (x_48 Nat_0) (y_6 Nat_0))
	(=> (add_0 r_0 x_48 y_6) (add_0 (Z_6 r_0) (Z_6 x_48) y_6))))
(assert (forall ((y_6 Nat_0))
	(minus_0 Z_5 Z_5 y_6)))
(assert (forall ((r_0 Nat_0) (x_48 Nat_0) (y_6 Nat_0))
	(=> (minus_0 r_0 x_48 y_6) (minus_0 (Z_6 r_0) (Z_6 x_48) y_6))))
(assert (forall ((y_6 Nat_0))
	(le_0 Z_5 y_6)))
(assert (forall ((x_48 Nat_0) (y_6 Nat_0))
	(=> (le_0 x_48 y_6) (le_0 (Z_6 x_48) (Z_6 y_6)))))
(assert (forall ((y_6 Nat_0))
	(ge_0 y_6 Z_5)))
(assert (forall ((x_48 Nat_0) (y_6 Nat_0))
	(=> (ge_0 x_48 y_6) (ge_0 (Z_6 x_48) (Z_6 y_6)))))
(assert (forall ((y_6 Nat_0))
	(lt_0 Z_5 (Z_6 y_6))))
(assert (forall ((x_48 Nat_0) (y_6 Nat_0))
	(=> (lt_0 x_48 y_6) (lt_0 (Z_6 x_48) (Z_6 y_6)))))
(assert (forall ((y_6 Nat_0))
	(gt_0 (Z_6 y_6) Z_5)))
(assert (forall ((x_48 Nat_0) (y_6 Nat_0))
	(=> (gt_0 x_48 y_6) (gt_0 (Z_6 x_48) (Z_6 y_6)))))
(assert (forall ((x_48 Nat_0) (y_6 Nat_0))
	(=> (lt_0 x_48 y_6) (div_0 Z_5 x_48 y_6))))
(assert (forall ((r_0 Nat_0) (x_48 Nat_0) (y_6 Nat_0) (z_7 Nat_0))
	(=> (and (ge_0 x_48 y_6) (minus_0 z_7 x_48 y_6) (div_0 r_0 z_7 y_6)) (div_0 (Z_6 r_0) x_48 y_6))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_5) (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_49 Nat_0) (x_14 list_0) (z_0 Nat_0) (xs_0 list_0) (x_0 Nat_0))
	(=> (and (gt_0 x_0 Z_5) (take_0 x_14 x_49 xs_0) (minus_0 x_49 x_0 (Z_6 Z_5))) (take_0 (cons_0 z_0 x_14) x_0 (cons_0 z_0 xs_0)))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_5) (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_0 Nat_0))
	(=> (gt_0 x_0 Z_5) (take_0 nil_0 x_0 nil_0))))
(assert (forall ((x_18 list_0) (x_3 Nat_0) (x_4 list_0) (z_1 Nat_0) (x_2 list_0))
	(=> (and (le_0 z_1 x_3) (lmerge_0 x_18 x_2 (cons_0 x_3 x_4))) (lmerge_0 (cons_0 z_1 x_18) (cons_0 z_1 x_2) (cons_0 x_3 x_4)))))
(assert (forall ((x_20 list_0) (x_3 Nat_0) (x_4 list_0) (z_1 Nat_0) (x_2 list_0))
	(=> (and (gt_0 z_1 x_3) (lmerge_0 x_20 (cons_0 z_1 x_2) x_4)) (lmerge_0 (cons_0 x_3 x_20) (cons_0 z_1 x_2) (cons_0 x_3 x_4)))))
(assert (forall ((z_1 Nat_0) (x_2 list_0))
	(lmerge_0 (cons_0 z_1 x_2) (cons_0 z_1 x_2) nil_0)))
(assert (forall ((x_22 list_0))
	(lmerge_0 x_22 nil_0 x_22)))
(assert (forall ((x_23 Nat_0) (x_24 Nat_0) (y_2 Nat_0) (l_0 list_0))
	(=> (and (length_0 x_24 l_0) (add_0 x_23 (Z_6 Z_5) x_24)) (length_0 x_23 (cons_0 y_2 l_0)))))
(assert (length_0 Z_5 nil_0))
(assert (forall ((x_26 list_0) (x_6 Nat_0))
	(=> (le_0 x_6 Z_5) (drop_0 x_26 x_6 x_26))))
(assert (forall ((x_51 Nat_0) (x_27 list_0) (z_2 Nat_0) (xs_1 list_0) (x_6 Nat_0))
	(=> (and (gt_0 x_6 Z_5) (drop_0 x_27 x_51 xs_1) (minus_0 x_51 x_6 (Z_6 Z_5))) (drop_0 x_27 x_6 (cons_0 z_2 xs_1)))))
(assert (forall ((x_29 list_0) (x_6 Nat_0))
	(=> (le_0 x_6 Z_5) (drop_0 x_29 x_6 x_29))))
(assert (forall ((x_6 Nat_0))
	(=> (gt_0 x_6 Z_5) (drop_0 nil_0 x_6 nil_0))))
(assert (forall ((x_32 list_0) (x_33 list_0) (x_34 list_0) (x_35 list_0) (x_36 list_0) (x_31 Nat_0) (k_0 Nat_0) (x_8 Nat_0) (x_9 list_0) (y_4 Nat_0))
	(=> (and (take_0 x_33 k_0 (cons_0 y_4 (cons_0 x_8 x_9))) (msorttd_0 x_34 x_33) (drop_0 x_35 k_0 (cons_0 y_4 (cons_0 x_8 x_9))) (msorttd_0 x_36 x_35) (lmerge_0 x_32 x_34 x_36) (length_0 x_31 (cons_0 y_4 (cons_0 x_8 x_9))) (div_0 k_0 x_31 (Z_6 (Z_6 Z_5)))) (msorttd_0 x_32 (cons_0 y_4 (cons_0 x_8 x_9))))))
(assert (forall ((y_4 Nat_0))
	(msorttd_0 (cons_0 y_4 nil_0) (cons_0 y_4 nil_0))))
(assert (msorttd_0 nil_0 nil_0))
(assert (forall ((x_40 Nat_0) (x_41 Nat_0) (ys_0 list_0) (x_10 Nat_0))
	(=> (and (count_0 x_41 x_10 ys_0) (add_0 x_40 (Z_6 Z_5) x_41)) (count_0 x_40 x_10 (cons_0 x_10 ys_0)))))
(assert (forall ((x_42 Nat_0) (z_4 Nat_0) (ys_0 list_0) (x_10 Nat_0))
	(=> (and (diseqNat_0 x_10 z_4) (count_0 x_42 x_10 ys_0)) (count_0 x_42 x_10 (cons_0 z_4 ys_0)))))
(assert (forall ((x_10 Nat_0))
	(count_0 Z_5 x_10 nil_0)))
(assert (forall ((x_45 list_0) (x_46 Nat_0) (x_47 Nat_0) (x_11 Nat_0) (xs_2 list_0))
	(=> (and (diseqNat_0 x_46 x_47) (msorttd_0 x_45 xs_2) (count_0 x_46 x_11 x_45) (count_0 x_47 x_11 xs_2)) false)))
(check-sat)
(get-model)
