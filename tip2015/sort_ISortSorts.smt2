(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_2 ) (Z_3 (unS_0 Nat_0)))))
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun ordered_0 (Bool_0 list_0) Bool)
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((y_4 Nat_0))
	(le_0 Z_2 y_4)))
(assert (forall ((x_18 Nat_0) (y_4 Nat_0))
	(=> (le_0 x_18 y_4) (le_0 (Z_3 x_18) (Z_3 y_4)))))
(assert (forall ((y_4 Nat_0))
	(gt_0 (Z_3 y_4) Z_2)))
(assert (forall ((x_18 Nat_0) (y_4 Nat_0))
	(=> (gt_0 x_18 y_4) (gt_0 (Z_3 x_18) (Z_3 y_4)))))
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(assert (forall ((x_3 Bool_0) (y_1 Nat_0) (xs_0 list_0) (y_0 Nat_0))
	(=> (and (le_0 y_0 y_1) (ordered_0 x_3 (cons_0 y_1 xs_0))) (ordered_0 x_3 (cons_0 y_0 (cons_0 y_1 xs_0))))))
(assert (forall ((y_1 Nat_0) (xs_0 list_0) (y_0 Nat_0))
	(=> (gt_0 y_0 y_1) (ordered_0 false_0 (cons_0 y_0 (cons_0 y_1 xs_0))))))
(assert (forall ((y_0 Nat_0))
	(ordered_0 true_0 (cons_0 y_0 nil_0))))
(assert (ordered_0 true_0 nil_0))
(assert (forall ((z_1 Nat_0) (xs_1 list_0) (x_1 Nat_0))
	(=> (le_0 x_1 z_1) (insert_0 (cons_0 x_1 (cons_0 z_1 xs_1)) x_1 (cons_0 z_1 xs_1)))))
(assert (forall ((x_10 list_0) (z_1 Nat_0) (xs_1 list_0) (x_1 Nat_0))
	(=> (and (gt_0 x_1 z_1) (insert_0 x_10 x_1 xs_1)) (insert_0 (cons_0 z_1 x_10) x_1 (cons_0 z_1 xs_1)))))
(assert (forall ((x_1 Nat_0))
	(insert_0 (cons_0 x_1 nil_0) x_1 nil_0)))
(assert (forall ((x_12 list_0) (x_13 list_0) (y_3 Nat_0) (xs_2 list_0))
	(=> (and (isort_0 x_13 xs_2) (insert_0 x_12 y_3 x_13)) (isort_0 x_12 (cons_0 y_3 xs_2)))))
(assert (isort_0 nil_0 nil_0))
(assert (forall ((x_16 list_0) (x_17 Bool_0) (xs_3 list_0))
	(=> (and (diseqBool_0 x_17 true_0) (isort_0 x_16 xs_3) (ordered_0 x_17 x_16)) false)))
(check-sat)
(get-model)
