(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_69 Nat_0) (x_68 Nat_0))
	(=> (= x_69 (S_0 x_68))
	    (unS_1 x_68 x_69))))
(assert (isZ_0 Z_0))
(assert (forall ((x_70 Nat_0))
	(isS_0 (S_0 x_70))))
(assert (forall ((x_71 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_71))))
(assert (forall ((x_72 Nat_0))
	(diseqNat_0 (S_0 x_72) Z_0)))
(assert (forall ((x_73 Nat_0) (x_74 Nat_0))
	(=> (diseqNat_0 x_73 x_74)
	    (diseqNat_0 (S_0 x_73) (S_0 x_74)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_10 Nat_0))
	(add_0 y_10 Z_0 y_10)))
(assert (forall ((x_59 Nat_0) (y_10 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_59 y_10)
	    (add_0 (S_0 r_0) (S_0 x_59) y_10))))
(assert (forall ((y_10 Nat_0))
	(minus_0 Z_0 Z_0 y_10)))
(assert (forall ((x_59 Nat_0) (y_10 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_59 y_10)
	    (minus_0 (S_0 r_0) (S_0 x_59) y_10))))
(assert (forall ((y_10 Nat_0))
	(le_0 Z_0 y_10)))
(assert (forall ((x_59 Nat_0) (y_10 Nat_0))
	(=> (le_0 x_59 y_10)
	    (le_0 (S_0 x_59) (S_0 y_10)))))
(assert (forall ((y_10 Nat_0))
	(ge_0 y_10 Z_0)))
(assert (forall ((x_59 Nat_0) (y_10 Nat_0))
	(=> (ge_0 x_59 y_10)
	    (ge_0 (S_0 x_59) (S_0 y_10)))))
(assert (forall ((y_10 Nat_0))
	(lt_0 Z_0 (S_0 y_10))))
(assert (forall ((x_59 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_59 y_10)
	    (lt_0 (S_0 x_59) (S_0 y_10)))))
(assert (forall ((y_10 Nat_0))
	(gt_0 (S_0 y_10) Z_0)))
(assert (forall ((x_59 Nat_0) (y_10 Nat_0))
	(=> (gt_0 x_59 y_10)
	    (gt_0 (S_0 x_59) (S_0 y_10)))))
(assert (forall ((y_10 Nat_0))
	(mult_0 Z_0 Z_0 y_10)))
(assert (forall ((x_59 Nat_0) (y_10 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (mult_0 r_0 x_59 y_10)
			(add_0 z_5 r_0 y_10))
		(mult_0 z_5 (S_0 x_59) y_10))))
(assert (forall ((x_59 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_59 y_10)
	    (div_0 Z_0 x_59 y_10))))
(assert (forall ((x_59 Nat_0) (y_10 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (ge_0 x_59 y_10)
			(minus_0 z_5 x_59 y_10)
			(div_0 r_0 z_5 y_10))
		(div_0 (S_0 r_0) x_59 y_10))))
(assert (forall ((x_59 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_59 y_10)
	    (mod_0 x_59 x_59 y_10))))
(assert (forall ((x_59 Nat_0) (y_10 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (ge_0 x_59 y_10)
			(minus_0 z_5 x_59 y_10)
			(mod_0 r_0 z_5 y_10))
		(mod_0 r_0 x_59 y_10))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_78 list_0) (x_76 Nat_0) (x_77 list_0))
	(=> (= x_78 (cons_0 x_76 x_77))
	    (head_1 x_76 x_78))))
(assert (forall ((x_78 list_0) (x_76 Nat_0) (x_77 list_0))
	(=> (= x_78 (cons_0 x_76 x_77))
	    (tail_1 x_77 x_78))))
(assert (isnil_0 nil_0))
(assert (forall ((x_79 Nat_0) (x_80 list_0))
	(iscons_0 (cons_0 x_79 x_80))))
(assert (forall ((x_81 Nat_0) (x_82 list_0))
	(diseqlist_0 nil_0 (cons_0 x_81 x_82))))
(assert (forall ((x_83 Nat_0) (x_84 list_0))
	(diseqlist_0 (cons_0 x_83 x_84) nil_0)))
(assert (forall ((x_85 Nat_0) (x_86 list_0) (x_87 Nat_0) (x_88 list_0))
	(=> (diseqNat_0 x_85 x_87)
	    (diseqlist_0 (cons_0 x_85 x_86) (cons_0 x_87 x_88)))))
(assert (forall ((x_85 Nat_0) (x_86 list_0) (x_87 Nat_0) (x_88 list_0))
	(=> (diseqlist_0 x_86 x_88)
	    (diseqlist_0 (cons_0 x_85 x_86) (cons_0 x_87 x_88)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 list_0) (projpair_1 list_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (list_0 pair_0) Bool)
(declare-fun projpair_3 (list_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_91 pair_0) (x_89 list_0) (x_90 list_0))
	(=> (= x_91 (pair_1 x_89 x_90))
	    (projpair_2 x_89 x_91))))
(assert (forall ((x_91 pair_0) (x_89 list_0) (x_90 list_0))
	(=> (= x_91 (pair_1 x_89 x_90))
	    (projpair_3 x_90 x_91))))
(assert (forall ((x_92 list_0) (x_93 list_0))
	(ispair_0 (pair_1 x_92 x_93))))
(assert (forall ((x_94 list_0) (x_95 list_0) (x_96 list_0) (x_97 list_0))
	(=> (diseqlist_0 x_94 x_96)
	    (diseqpair_0 (pair_1 x_94 x_95) (pair_1 x_96 x_97)))))
(assert (forall ((x_94 list_0) (x_95 list_0) (x_96 list_0) (x_97 list_0))
	(=> (diseqlist_0 x_95 x_97)
	    (diseqpair_0 (pair_1 x_94 x_95) (pair_1 x_96 x_97)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_14 list_0))
	(=>	(and (= x_14 nil_0)
			(le_0 x_0 Z_0))
		(take_0 x_14 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (xs_0 list_0) (x_15 list_0) (x_16 list_0) (x_60 Nat_0))
	(=>	(and (= x_15 (cons_0 z_0 x_16))
			(take_0 x_16 x_60 xs_0)
			(gt_0 x_0 Z_0)
			(= y_0 (cons_0 z_0 xs_0))
			(minus_0 x_60 x_0 (S_0 Z_0)))
		(take_0 x_15 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_17 list_0))
	(=>	(and (= x_17 nil_0)
			(le_0 x_0 Z_0))
		(take_0 x_17 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_18 list_0))
	(=>	(and (= x_18 nil_0)
			(gt_0 x_0 Z_0)
			(= y_0 nil_0))
		(take_0 x_18 x_0 y_0))))
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (x_19 list_0))
	(=>	(and (= x_19 (cons_0 x_1 (cons_0 y_1 nil_0)))
			(le_0 x_1 y_1))
		(sort_0 x_19 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (x_20 list_0))
	(=>	(and (= x_20 (cons_0 y_1 (cons_0 x_1 nil_0)))
			(gt_0 x_1 y_1))
		(sort_0 x_20 x_1 y_1))))
(declare-fun ordered_0 (Bool list_0) Bool)
(assert (forall ((x_2 list_0) (y_2 Nat_0) (z_1 list_0) (y_3 Nat_0) (xs_1 list_0) (x_21 Bool) (x_22 Bool))
	(=>	(and (= x_21 (and (le_0 y_2 y_3) x_22))
			(ordered_0 x_22 (cons_0 y_3 xs_1))
			(= x_2 (cons_0 y_2 z_1))
			(= z_1 (cons_0 y_3 xs_1)))
		(ordered_0 x_21 x_2))))
(assert (forall ((x_2 list_0) (y_2 Nat_0) (z_1 list_0) (x_23 Bool))
	(=>	(and (= x_23 true)
			(= x_2 (cons_0 y_2 z_1))
			(= z_1 nil_0))
		(ordered_0 x_23 x_2))))
(assert (forall ((x_2 list_0) (x_24 Bool))
	(=>	(and (= x_24 true)
			(= x_2 nil_0))
		(ordered_0 x_24 x_2))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_3 list_0) (y_4 Nat_0) (l_0 list_0) (x_25 Nat_0) (x_26 Nat_0) (x_61 Nat_0))
	(=>	(and (= x_25 x_61)
			(length_0 x_26 l_0)
			(= x_3 (cons_0 y_4 l_0))
			(add_0 x_61 (S_0 Z_0) x_26))
		(length_0 x_25 x_3))))
(assert (forall ((x_3 list_0) (x_27 Nat_0))
	(=>	(and (= x_27 Z_0)
			(= x_3 nil_0))
		(length_0 x_27 x_3))))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_4 Nat_0) (y_5 list_0) (x_28 list_0))
	(=>	(and (= x_28 y_5)
			(le_0 x_4 Z_0))
		(drop_0 x_28 x_4 y_5))))
(assert (forall ((x_4 Nat_0) (y_5 list_0) (z_2 Nat_0) (xs_2 list_0) (x_29 list_0) (x_30 list_0) (x_62 Nat_0))
	(=>	(and (= x_29 x_30)
			(drop_0 x_30 x_62 xs_2)
			(gt_0 x_4 Z_0)
			(= y_5 (cons_0 z_2 xs_2))
			(minus_0 x_62 x_4 (S_0 Z_0)))
		(drop_0 x_29 x_4 y_5))))
(assert (forall ((x_4 Nat_0) (y_5 list_0) (x_31 list_0))
	(=>	(and (= x_31 y_5)
			(le_0 x_4 Z_0))
		(drop_0 x_31 x_4 y_5))))
(assert (forall ((x_4 Nat_0) (y_5 list_0) (x_32 list_0))
	(=>	(and (= x_32 nil_0)
			(gt_0 x_4 Z_0)
			(= y_5 nil_0))
		(drop_0 x_32 x_4 y_5))))
(declare-fun splitAt_0 (pair_0 Nat_0 list_0) Bool)
(assert (forall ((x_5 Nat_0) (y_6 list_0) (x_33 pair_0) (x_34 list_0) (x_35 list_0))
	(=>	(and (= x_33 (pair_1 x_34 x_35))
			(take_0 x_34 x_5 y_6)
			(drop_0 x_35 x_5 y_6))
		(splitAt_0 x_33 x_5 y_6))))
(declare-fun x_6 (list_0 list_0 list_0) Bool)
(assert (forall ((x_7 list_0) (y_7 list_0) (z_3 Nat_0) (xs_3 list_0) (x_36 list_0) (x_37 list_0))
	(=>	(and (= x_36 (cons_0 z_3 x_37))
			(x_6 x_37 xs_3 y_7)
			(= x_7 (cons_0 z_3 xs_3)))
		(x_6 x_36 x_7 y_7))))
(assert (forall ((x_7 list_0) (y_7 list_0) (x_38 list_0))
	(=>	(and (= x_38 y_7)
			(= x_7 nil_0))
		(x_6 x_38 x_7 y_7))))
(declare-fun stoogesort_0 (list_0 list_0) Bool)
(declare-fun stoogesort_1 (list_0 list_0) Bool)
(declare-fun stoogesort_2 (list_0 list_0) Bool)
(assert (forall ((x_8 list_0) (ys_0 list_0) (zs_0 list_0) (x_41 list_0) (x_42 list_0) (x_43 list_0) (x_39 Nat_0) (x_40 pair_0) (x_63 Nat_0) (x_64 Nat_0) (x_65 Nat_0))
	(=>	(and (= x_41 x_43)
			(stoogesort_1 x_42 ys_0)
			(x_6 x_43 x_42 zs_0)
			(= x_40 (pair_1 ys_0 zs_0))
			(length_0 x_39 x_8)
			(splitAt_0 x_40 x_65 x_8)
			(mult_0 x_63 (S_0 (S_0 Z_0)) x_39)
			(add_0 x_64 x_63 (S_0 Z_0))
			(div_0 x_65 x_64 (S_0 (S_0 (S_0 Z_0)))))
		(stoogesort_0 x_41 x_8))))
(assert (forall ((x_9 list_0) (y_8 Nat_0) (z_4 list_0) (y_9 Nat_0) (x_10 list_0) (x_11 Nat_0) (x_12 list_0) (x_44 list_0) (x_45 list_0) (x_46 list_0) (x_47 list_0))
	(=>	(and (= x_44 x_47)
			(stoogesort_0 x_45 (cons_0 y_8 (cons_0 y_9 (cons_0 x_11 x_12))))
			(stoogesort_2 x_46 x_45)
			(stoogesort_0 x_47 x_46)
			(= x_9 (cons_0 y_8 z_4))
			(= z_4 (cons_0 y_9 x_10))
			(= x_10 (cons_0 x_11 x_12)))
		(stoogesort_1 x_44 x_9))))
(assert (forall ((x_9 list_0) (y_8 Nat_0) (z_4 list_0) (y_9 Nat_0) (x_10 list_0) (x_48 list_0) (x_49 list_0))
	(=>	(and (= x_48 x_49)
			(sort_0 x_49 y_8 y_9)
			(= x_9 (cons_0 y_8 z_4))
			(= z_4 (cons_0 y_9 x_10))
			(= x_10 nil_0))
		(stoogesort_1 x_48 x_9))))
(assert (forall ((x_9 list_0) (y_8 Nat_0) (z_4 list_0) (x_50 list_0))
	(=>	(and (= x_50 (cons_0 y_8 nil_0))
			(= x_9 (cons_0 y_8 z_4))
			(= z_4 nil_0))
		(stoogesort_1 x_50 x_9))))
(assert (forall ((x_9 list_0) (x_51 list_0))
	(=>	(and (= x_51 nil_0)
			(= x_9 nil_0))
		(stoogesort_1 x_51 x_9))))
(assert (forall ((x_13 list_0) (ys_1 list_0) (zs_1 list_0) (x_54 list_0) (x_55 list_0) (x_56 list_0) (x_52 Nat_0) (x_53 pair_0) (x_66 Nat_0))
	(=>	(and (= x_54 x_56)
			(stoogesort_1 x_55 zs_1)
			(x_6 x_56 ys_1 x_55)
			(= x_53 (pair_1 ys_1 zs_1))
			(length_0 x_52 x_13)
			(splitAt_0 x_53 x_66 x_13)
			(div_0 x_66 x_52 (S_0 (S_0 (S_0 Z_0)))))
		(stoogesort_2 x_54 x_13))))
(assert (forall ((xs_4 list_0) (x_57 list_0) (x_58 Bool))
	(=>	(and (= x_58 false)
			(stoogesort_1 x_57 xs_4)
			(ordered_0 x_58 x_57))
		false)))
(check-sat)
