(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_11 Nat_0) (x_10 Nat_0))
	(=> (= x_11 (S_0 x_10))
	    (unS_1 x_10 x_11))))
(assert (isZ_0 Z_0))
(assert (forall ((x_12 Nat_0))
	(isS_0 (S_0 x_12))))
(assert (forall ((x_13 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_13))))
(assert (forall ((x_14 Nat_0))
	(diseqNat_0 (S_0 x_14) Z_0)))
(assert (forall ((x_15 Nat_0) (x_16 Nat_0))
	(=> (diseqNat_0 x_15 x_16)
	    (diseqNat_0 (S_0 x_15) (S_0 x_16)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_0 Nat_0))
	(add_0 y_0 Z_0 y_0)))
(assert (forall ((x_6 Nat_0) (y_0 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_6 y_0)
	    (add_0 (S_0 r_0) (S_0 x_6) y_0))))
(assert (forall ((y_0 Nat_0))
	(minus_0 Z_0 Z_0 y_0)))
(assert (forall ((x_6 Nat_0) (y_0 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_6 y_0)
	    (minus_0 (S_0 r_0) (S_0 x_6) y_0))))
(assert (forall ((y_0 Nat_0))
	(le_0 Z_0 y_0)))
(assert (forall ((x_6 Nat_0) (y_0 Nat_0))
	(=> (le_0 x_6 y_0)
	    (le_0 (S_0 x_6) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(ge_0 y_0 Z_0)))
(assert (forall ((x_6 Nat_0) (y_0 Nat_0))
	(=> (ge_0 x_6 y_0)
	    (ge_0 (S_0 x_6) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(lt_0 Z_0 (S_0 y_0))))
(assert (forall ((x_6 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_6 y_0)
	    (lt_0 (S_0 x_6) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(gt_0 (S_0 y_0) Z_0)))
(assert (forall ((x_6 Nat_0) (y_0 Nat_0))
	(=> (gt_0 x_6 y_0)
	    (gt_0 (S_0 x_6) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(mult_0 Z_0 Z_0 y_0)))
(assert (forall ((x_6 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_0 Nat_0))
	(=>	(and (mult_0 r_0 x_6 y_0)
			(add_0 z_0 r_0 y_0))
		(mult_0 z_0 (S_0 x_6) y_0))))
(assert (forall ((x_6 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_6 y_0)
	    (div_0 Z_0 x_6 y_0))))
(assert (forall ((x_6 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_0 Nat_0))
	(=>	(and (ge_0 x_6 y_0)
			(minus_0 z_0 x_6 y_0)
			(div_0 r_0 z_0 y_0))
		(div_0 (S_0 r_0) x_6 y_0))))
(assert (forall ((x_6 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_6 y_0)
	    (mod_0 x_6 x_6 y_0))))
(assert (forall ((x_6 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_0 Nat_0))
	(=>	(and (ge_0 x_6 y_0)
			(minus_0 z_0 x_6 y_0)
			(mod_0 r_0 z_0 y_0))
		(mod_0 r_0 x_6 y_0))))
(declare-fun m_0 (Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (x_1 Nat_0) (x_7 Nat_0))
	(=>	(and (= x_1 x_7)
			(gt_0 x
			(minus_0 x_7 x_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))))))))))
		(m_0 x_1 x_0))))
(assert (forall ((x_0 Nat_0) (x_2 Nat_0) (x_3 Nat_0) (x_4 Nat_0) (x_8 Nat_0))
	(=>	(and (= x_2 x_4)
			(m_0 x_3 x_8)
			(m_0 x_4 x_3)
			(le_0 x
			(add_0 x_8 x_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0)))))))))))))
		(m_0 x_2 x_0))))
(assert (forall ((n_0 Nat_0) (x_5 Nat_0))
	(=>	(and (diseqNat_0 x_5 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
			(le_0 n
			(m_0 x_5 n_0))
		false)))
(check-sat)
