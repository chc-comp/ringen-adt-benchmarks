(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_90 Nat_0) (x_89 Nat_0))
	(=> (= x_90 (S_0 x_89))
	    (unS_1 x_89 x_90))))
(assert (isZ_0 Z_0))
(assert (forall ((x_91 Nat_0))
	(isS_0 (S_0 x_91))))
(assert (forall ((x_92 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_92))))
(assert (forall ((x_93 Nat_0))
	(diseqNat_0 (S_0 x_93) Z_0)))
(assert (forall ((x_94 Nat_0) (x_95 Nat_0))
	(=> (diseqNat_0 x_94 x_95)
	    (diseqNat_0 (S_0 x_94) (S_0 x_95)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_9 Nat_0))
	(add_0 y_9 Z_0 y_9)))
(assert (forall ((x_86 Nat_0) (y_9 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_86 y_9)
	    (add_0 (S_0 r_0) (S_0 x_86) y_9))))
(assert (forall ((y_9 Nat_0))
	(minus_0 Z_0 Z_0 y_9)))
(assert (forall ((x_86 Nat_0) (y_9 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_86 y_9)
	    (minus_0 (S_0 r_0) (S_0 x_86) y_9))))
(assert (forall ((y_9 Nat_0))
	(le_0 Z_0 y_9)))
(assert (forall ((x_86 Nat_0) (y_9 Nat_0))
	(=> (le_0 x_86 y_9)
	    (le_0 (S_0 x_86) (S_0 y_9)))))
(assert (forall ((y_9 Nat_0))
	(ge_0 y_9 Z_0)))
(assert (forall ((x_86 Nat_0) (y_9 Nat_0))
	(=> (ge_0 x_86 y_9)
	    (ge_0 (S_0 x_86) (S_0 y_9)))))
(assert (forall ((y_9 Nat_0))
	(lt_0 Z_0 (S_0 y_9))))
(assert (forall ((x_86 Nat_0) (y_9 Nat_0))
	(=> (lt_0 x_86 y_9)
	    (lt_0 (S_0 x_86) (S_0 y_9)))))
(assert (forall ((y_9 Nat_0))
	(gt_0 (S_0 y_9) Z_0)))
(assert (forall ((x_86 Nat_0) (y_9 Nat_0))
	(=> (gt_0 x_86 y_9)
	    (gt_0 (S_0 x_86) (S_0 y_9)))))
(assert (forall ((y_9 Nat_0))
	(mult_0 Z_0 Z_0 y_9)))
(assert (forall ((x_86 Nat_0) (y_9 Nat_0) (r_0 Nat_0) (z_6 Nat_0))
	(=>	(and (mult_0 r_0 x_86 y_9)
			(add_0 z_6 r_0 y_9))
		(mult_0 z_6 (S_0 x_86) y_9))))
(assert (forall ((x_86 Nat_0) (y_9 Nat_0))
	(=> (lt_0 x_86 y_9)
	    (div_0 Z_0 x_86 y_9))))
(assert (forall ((x_86 Nat_0) (y_9 Nat_0) (r_0 Nat_0) (z_6 Nat_0))
	(=>	(and (ge_0 x_86 y_9)
			(minus_0 z_6 x_86 y_9)
			(div_0 r_0 z_6 y_9))
		(div_0 (S_0 r_0) x_86 y_9))))
(assert (forall ((x_86 Nat_0) (y_9 Nat_0))
	(=> (lt_0 x_86 y_9)
	    (mod_0 x_86 x_86 y_9))))
(assert (forall ((x_86 Nat_0) (y_9 Nat_0) (r_0 Nat_0) (z_6 Nat_0))
	(=>	(and (ge_0 x_86 y_9)
			(minus_0 z_6 x_86 y_9)
			(mod_0 r_0 z_6 y_9))
		(mod_0 r_0 x_86 y_9))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_99 list_0) (x_97 Nat_0) (x_98 list_0))
	(=> (= x_99 (cons_0 x_97 x_98))
	    (head_1 x_97 x_99))))
(assert (forall ((x_99 list_0) (x_97 Nat_0) (x_98 list_0))
	(=> (= x_99 (cons_0 x_97 x_98))
	    (tail_1 x_98 x_99))))
(assert (isnil_0 nil_0))
(assert (forall ((x_100 Nat_0) (x_101 list_0))
	(iscons_0 (cons_0 x_100 x_101))))
(assert (forall ((x_102 Nat_0) (x_103 list_0))
	(diseqlist_0 nil_0 (cons_0 x_102 x_103))))
(assert (forall ((x_104 Nat_0) (x_105 list_0))
	(diseqlist_0 (cons_0 x_104 x_105) nil_0)))
(assert (forall ((x_106 Nat_0) (x_107 list_0) (x_108 Nat_0) (x_109 list_0))
	(=> (diseqNat_0 x_106 x_108)
	    (diseqlist_0 (cons_0 x_106 x_107) (cons_0 x_108 x_109)))))
(assert (forall ((x_106 Nat_0) (x_107 list_0) (x_108 Nat_0) (x_109 list_0))
	(=> (diseqlist_0 x_107 x_109)
	    (diseqlist_0 (cons_0 x_106 x_107) (cons_0 x_108 x_109)))))
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_23 list_0))
	(=>	(and (= x_23 (cons_0 x_0 (cons_0 y_0 nil_0)))
			(le_0 x_0 y_0))
		(sort_0 x_23 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_24 list_0))
	(=>	(and (= x_24 (cons_0 y_0 (cons_0 x_0 nil_0)))
			(gt_0 x_0 y_0))
		(sort_0 x_24 x_0 y_0))))
(declare-fun evens_0 (list_0 list_0) Bool)
(declare-fun odds_0 (list_0 list_0) Bool)
(assert (forall ((x_1 list_0) (y_1 Nat_0) (xs_0 list_0) (x_25 list_0) (x_26 list_0))
	(=>	(and (= x_25 (cons_0 y_1 x_26))
			(odds_0 x_26 xs_0)
			(= x_1 (cons_0 y_1 xs_0)))
		(evens_0 x_25 x_1))))
(assert (forall ((x_1 list_0) (x_27 list_0))
	(=>	(and (= x_27 nil_0)
			(= x_1 nil_0))
		(evens_0 x_27 x_1))))
(assert (forall ((x_2 list_0) (y_2 Nat_0) (xs_1 list_0) (x_28 list_0) (x_29 list_0))
	(=>	(and (= x_28 x_29)
			(evens_0 x_29 xs_1)
			(= x_2 (cons_0 y_2 xs_1)))
		(odds_0 x_28 x_2))))
(assert (forall ((x_2 list_0) (x_30 list_0))
	(=>	(and (= x_30 nil_0)
			(= x_2 nil_0))
		(odds_0 x_30 x_2))))
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_3 Nat_0) (y_3 list_0) (z_0 Nat_0) (ys_0 list_0) (x_31 Nat_0) (x_32 Nat_0) (x_87 Nat_0))
	(=>	(and (= x_31 x_87)
			(count_0 x_32 x_3 ys_0)
			(= y_3 (cons_0 z_0 ys_0))
			(= x_3 z_0)
			(add_0 x_87 (S_0 Z_0) x_32))
		(count_0 x_31 x_3 y_3))))
(assert (forall ((x_3 Nat_0) (y_3 list_0) (z_0 Nat_0) (ys_0 list_0) (x_33 Nat_0) (x_34 Nat_0))
	(=>	(and (= x_33 x_34)
			(count_0 x_34 x_3 ys_0)
			(= y_3 (cons_0 z_0 ys_0))
			(diseqNat_0 x_3 z_0))
		(count_0 x_33 x_3 y_3))))
(assert (forall ((x_3 Nat_0) (y_3 list_0) (x_35 Nat_0))
	(=>	(and (= x_35 Z_0)
			(= y_3 nil_0))
		(count_0 x_35 x_3 y_3))))
(declare-fun x_4 (list_0 list_0 list_0) Bool)
(assert (forall ((x_5 list_0) (y_4 list_0) (z_1 Nat_0) (xs_2 list_0) (x_36 list_0) (x_37 list_0))
	(=>	(and (= x_36 (cons_0 z_1 x_37))
			(x_4 x_37 xs_2 y_4)
			(= x_5 (cons_0 z_1 xs_2)))
		(x_4 x_36 x_5 y_4))))
(assert (forall ((x_5 list_0) (y_4 list_0) (x_38 list_0))
	(=>	(and (= x_38 y_4)
			(= x_5 nil_0))
		(x_4 x_38 x_5 y_4))))
(declare-fun pairs_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_6 list_0) (y_5 list_0) (z_2 Nat_0) (x_7 list_0) (x_8 Nat_0) (x_9 list_0) (x_39 list_0) (x_40 list_0) (x_41 list_0) (x_42 list_0))
	(=>	(and (= x_39 x_42)
			(sort_0 x_40 z_2 x_8)
			(pairs_0 x_41 x_7 x_9)
			(x_4 x_42 x_40 x_41)
			(= x_6 (cons_0 z_2 x_7))
			(= y_5 (cons_0 x_8 x_9)))
		(pairs_0 x_39 x_6 y_5))))
(assert (forall ((x_6 list_0) (y_5 list_0) (z_2 Nat_0) (x_7 list_0) (x_43 list_0))
	(=>	(and (= x_43 (cons_0 z_2 x_7))
			(= x_6 (cons_0 z_2 x_7))
			(= y_5 nil_0))
		(pairs_0 x_43 x_6 y_5))))
(assert (forall ((x_6 list_0) (y_5 list_0) (x_44 list_0))
	(=>	(and (= x_44 y_5)
			(= x_6 nil_0))
		(pairs_0 x_44 x_6 y_5))))
(declare-fun stitch_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_10 list_0) (y_6 list_0) (z_3 Nat_0) (xs_3 list_0) (x_45 list_0) (x_46 list_0))
	(=>	(and (= x_45 (cons_0 z_3 x_46))
			(pairs_0 x_46 xs_3 y_6)
			(= x_10 (cons_0 z_3 xs_3)))
		(stitch_0 x_45 x_10 y_6))))
(assert (forall ((x_10 list_0) (y_6 list_0) (x_47 list_0))
	(=>	(and (= x_47 y_6)
			(= x_10 nil_0))
		(stitch_0 x_47 x_10 y_6))))
(declare-fun bmerge_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_11 list_0) (y_7 list_0) (z_4 Nat_0) (x_12 list_0) (x_13 Nat_0) (x_14 list_0) (fail_0 list_0) (x_15 Nat_0) (x_16 list_0) (x_55 list_0) (x_48 list_0) (x_49 list_0) (x_50 list_0) (x_51 list_0) (x_52 list_0) (x_53 list_0) (x_54 list_0))
	(=>	(and (= x_55 fail_0)
			(= x_11 (cons_0 z_4 x_12))
			(= y_7 (cons_0 x_13 x_14))
			(= fail_0 x_54)
			(= x_12 (cons_0 x_15 x_16))
			(evens_0 x_48 (cons_0 z_4 x_12))
			(evens_0 x_49 (cons_0 x_13 x_14))
			(bmerge_0 x_50 x_48 x_49)
			(odds_0 x_51 (cons_0 z_4 x_12))
			(odds_0 x_52 (cons_0 x_13 x_14))
			(bmerge_0 x_53 x_51 x_52)
			(stitch_0 x_54 x_50 x_53))
		(bmerge_0 x_55 x_11 y_7))))
(assert (forall ((x_11 list_0) (y_7 list_0) (z_4 Nat_0) (x_12 list_0) (x_13 Nat_0) (x_14 list_0) (fail_0 list_0) (x_17 Nat_0) (x_18 list_0) (x_63 list_0) (x_56 list_0) (x_57 list_0) (x_58 list_0) (x_59 list_0) (x_60 list_0) (x_61 list_0) (x_62 list_0))
	(=>	(and (= x_63 fail_0)
			(= x_11 (cons_0 z_4 x_12))
			(= y_7 (cons_0 x_13 x_14))
			(= fail_0 x_62)
			(= x_12 nil_0)
			(= x_14 (cons_0 x_17 x_18))
			(evens_0 x_56 (cons_0 z_4 x_12))
			(evens_0 x_57 (cons_0 x_13 x_14))
			(bmerge_0 x_58 x_56 x_57)
			(odds_0 x_59 (cons_0 z_4 x_12))
			(odds_0 x_60 (cons_0 x_13 x_14))
			(bmerge_0 x_61 x_59 x_60)
			(stitch_0 x_62 x_58 x_61))
		(bmerge_0 x_63 x_11 y_7))))
(assert (forall ((x_11 list_0) (y_7 list_0) (z_4 Nat_0) (x_12 list_0) (x_13 Nat_0) (x_14 list_0) (fail_0 list_0) (x_71 list_0) (x_72 list_0) (x_64 list_0) (x_65 list_0) (x_66 list_0) (x_67 list_0) (x_68 list_0) (x_69 list_0) (x_70 list_0))
	(=>	(and (= x_71 x_72)
			(sort_0 x_72 z_4 x_13)
			(= x_11 (cons_0 z_4 x_12))
			(= y_7 (cons_0 x_13 x_14))
			(= fail_0 x_70)
			(= x_12 nil_0)
			(= x_14 nil_0)
			(evens_0 x_64 (cons_0 z_4 x_12))
			(evens_0 x_65 (cons_0 x_13 x_14))
			(bmerge_0 x_66 x_64 x_65)
			(odds_0 x_67 (cons_0 z_4 x_12))
			(odds_0 x_68 (cons_0 x_13 x_14))
			(bmerge_0 x_69 x_67 x_68)
			(stitch_0 x_70 x_66 x_69))
		(bmerge_0 x_71 x_11 y_7))))
(assert (forall ((x_11 list_0) (y_7 list_0) (z_4 Nat_0) (x_12 list_0) (x_73 list_0))
	(=>	(and (= x_73 (cons_0 z_4 x_12))
			(= x_11 (cons_0 z_4 x_12))
			(= y_7 nil_0))
		(bmerge_0 x_73 x_11 y_7))))
(assert (forall ((x_11 list_0) (y_7 list_0) (x_74 list_0))
	(=>	(and (= x_74 nil_0)
			(= x_11 nil_0))
		(bmerge_0 x_74 x_11 y_7))))
(declare-fun bsort_0 (list_0 list_0) Bool)
(assert (forall ((x_19 list_0) (y_8 Nat_0) (z_5 list_0) (x_20 Nat_0) (x_21 list_0) (x_75 list_0) (x_76 list_0) (x_77 list_0) (x_78 list_0) (x_79 list_0) (x_80 list_0))
	(=>	(and (= x_75 x_80)
			(evens_0 x_76 (cons_0 y_8 (cons_0 x_20 x_21)))
			(bsort_0 x_77 x_76)
			(odds_0 x_78 (cons_0 y_8 (cons_0 x_20 x_21)))
			(bsort_0 x_79 x_78)
			(bmerge_0 x_80 x_77 x_79)
			(= x_19 (cons_0 y_8 z_5))
			(= z_5 (cons_0 x_20 x_21)))
		(bsort_0 x_75 x_19))))
(assert (forall ((x_19 list_0) (y_8 Nat_0) (z_5 list_0) (x_81 list_0))
	(=>	(and (= x_81 (cons_0 y_8 nil_0))
			(= x_19 (cons_0 y_8 z_5))
			(= z_5 nil_0))
		(bsort_0 x_81 x_19))))
(assert (forall ((x_19 list_0) (x_82 list_0))
	(=>	(and (= x_82 nil_0)
			(= x_19 nil_0))
		(bsort_0 x_82 x_19))))
(assert (forall ((x_22 Nat_0) (xs_4 list_0) (x_83 list_0) (x_84 Nat_0) (x_85 Nat_0))
	(=>	(and (diseqNat_0 x_84 x_85)
			(bsort_0 x_83 xs_4)
			(count_0 x_84 x_22 x_83)
			(count_0 x_85 x_22 xs_4))
		false)))
(check-sat)
