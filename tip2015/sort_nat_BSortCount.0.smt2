(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_0 ) (S_0 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_114 Nat_1) (x_113 Nat_1))
	(=> (= x_114 (S_0 x_113))
	    (unS_1 x_113 x_114))))
(assert (isZ_0 Z_0))
(assert (forall ((x_115 Nat_1))
	(isS_0 (S_0 x_115))))
(assert (forall ((x_116 Nat_1))
	(diseqNat_0 Z_0 (S_0 x_116))))
(assert (forall ((x_117 Nat_1))
	(diseqNat_0 (S_0 x_117) Z_0)))
(assert (forall ((x_118 Nat_1) (x_119 Nat_1))
	(=> (diseqNat_0 x_118 x_119)
	    (diseqNat_0 (S_0 x_118) (S_0 x_119)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_13 Nat_1))
	(add_0 y_13 Z_0 y_13)))
(assert (forall ((x_111 Nat_1) (y_13 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_111 y_13)
	    (add_0 (S_0 r_0) (S_0 x_111) y_13))))
(assert (forall ((y_13 Nat_1))
	(minus_0 Z_0 Z_0 y_13)))
(assert (forall ((x_111 Nat_1) (y_13 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_111 y_13)
	    (minus_0 (S_0 r_0) (S_0 x_111) y_13))))
(assert (forall ((y_13 Nat_1))
	(le_0 Z_0 y_13)))
(assert (forall ((x_111 Nat_1) (y_13 Nat_1))
	(=> (le_0 x_111 y_13)
	    (le_0 (S_0 x_111) (S_0 y_13)))))
(assert (forall ((y_13 Nat_1))
	(ge_0 y_13 Z_0)))
(assert (forall ((x_111 Nat_1) (y_13 Nat_1))
	(=> (ge_0 x_111 y_13)
	    (ge_0 (S_0 x_111) (S_0 y_13)))))
(assert (forall ((y_13 Nat_1))
	(lt_0 Z_0 (S_0 y_13))))
(assert (forall ((x_111 Nat_1) (y_13 Nat_1))
	(=> (lt_0 x_111 y_13)
	    (lt_0 (S_0 x_111) (S_0 y_13)))))
(assert (forall ((y_13 Nat_1))
	(gt_0 (S_0 y_13) Z_0)))
(assert (forall ((x_111 Nat_1) (y_13 Nat_1))
	(=> (gt_0 x_111 y_13)
	    (gt_0 (S_0 x_111) (S_0 y_13)))))
(assert (forall ((y_13 Nat_1))
	(mult_0 Z_0 Z_0 y_13)))
(assert (forall ((x_111 Nat_1) (y_13 Nat_1) (r_0 Nat_1) (z_9 Nat_1))
	(=>	(and (mult_0 r_0 x_111 y_13)
			(add_0 z_9 r_0 y_13))
		(mult_0 z_9 (S_0 x_111) y_13))))
(assert (forall ((x_111 Nat_1) (y_13 Nat_1))
	(=> (lt_0 x_111 y_13)
	    (div_0 Z_0 x_111 y_13))))
(assert (forall ((x_111 Nat_1) (y_13 Nat_1) (r_0 Nat_1) (z_9 Nat_1))
	(=>	(and (ge_0 x_111 y_13)
			(minus_0 z_9 x_111 y_13)
			(div_0 r_0 z_9 y_13))
		(div_0 (S_0 r_0) x_111 y_13))))
(assert (forall ((x_111 Nat_1) (y_13 Nat_1))
	(=> (lt_0 x_111 y_13)
	    (mod_0 x_111 x_111 y_13))))
(assert (forall ((x_111 Nat_1) (y_13 Nat_1) (r_0 Nat_1) (z_9 Nat_1))
	(=>	(and (ge_0 x_111 y_13)
			(minus_0 z_9 x_111 y_13)
			(mod_0 r_0 z_9 y_13))
		(mod_0 r_0 x_111 y_13))))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_122 Nat_0) (x_121 Nat_0))
	(=> (= x_122 (succ_0 x_121))
	    (p_1 x_121 x_122))))
(assert (iszero_0 zero_0))
(assert (forall ((x_123 Nat_0))
	(issucc_0 (succ_0 x_123))))
(assert (forall ((x_124 Nat_0))
	(diseqNat_1 zero_0 (succ_0 x_124))))
(assert (forall ((x_125 Nat_0))
	(diseqNat_1 (succ_0 x_125) zero_0)))
(assert (forall ((x_126 Nat_0) (x_127 Nat_0))
	(=> (diseqNat_1 x_126 x_127)
	    (diseqNat_1 (succ_0 x_126) (succ_0 x_127)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_131 list_0) (x_129 Nat_0) (x_130 list_0))
	(=> (= x_131 (cons_0 x_129 x_130))
	    (head_1 x_129 x_131))))
(assert (forall ((x_131 list_0) (x_129 Nat_0) (x_130 list_0))
	(=> (= x_131 (cons_0 x_129 x_130))
	    (tail_1 x_130 x_131))))
(assert (isnil_0 nil_0))
(assert (forall ((x_132 Nat_0) (x_133 list_0))
	(iscons_0 (cons_0 x_132 x_133))))
(assert (forall ((x_134 Nat_0) (x_135 list_0))
	(diseqlist_0 nil_0 (cons_0 x_134 x_135))))
(assert (forall ((x_136 Nat_0) (x_137 list_0))
	(diseqlist_0 (cons_0 x_136 x_137) nil_0)))
(assert (forall ((x_138 Nat_0) (x_139 list_0) (x_140 Nat_0) (x_141 list_0))
	(=> (diseqNat_1 x_138 x_140)
	    (diseqlist_0 (cons_0 x_138 x_139) (cons_0 x_140 x_141)))))
(assert (forall ((x_138 Nat_0) (x_139 list_0) (x_140 Nat_0) (x_141 list_0))
	(=> (diseqlist_0 x_139 x_141)
	    (diseqlist_0 (cons_0 x_138 x_139) (cons_0 x_140 x_141)))))
(declare-fun plus_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_30 Nat_0) (x_31 Nat_0))
	(=>	(and (= x_30 (succ_0 x_31))
			(plus_0 x_31 z_0 y_0)
			(= x_0 (succ_0 z_0)))
		(plus_0 x_30 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_32 Nat_0))
	(=>	(and (= x_32 y_0)
			(= x_0 zero_0))
		(plus_0 x_32 x_0 y_0))))
(declare-fun leq_0 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (z_1 Nat_0) (x_2 Nat_0) (x_33 Bool) (x_34 Bool))
	(=>	(and (= x_33 x_34)
			(leq_0 x_34 z_1 x_2)
			(= x_1 (succ_0 z_1))
			(= y_1 (succ_0 x_2)))
		(leq_0 x_33 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (z_1 Nat_0) (x_35 Bool))
	(=>	(and (= x_35 false)
			(= x_1 (succ_0 z_1))
			(= y_1 zero_0))
		(leq_0 x_35 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (x_36 Bool))
	(=>	(and (= x_36 true)
			(= x_1 zero_0))
		(leq_0 x_36 x_1 y_1))))
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_3 Nat_0) (y_2 Nat_0) (x_38 list_0) (x_37 Bool))
	(=>	(and (= x_38 (cons_0 x_3 (cons_0 y_2 nil_0)))
			(= x_37 true)
			(leq_0 x_37 x_3 y_2))
		(sort_0 x_38 x_3 y_2))))
(assert (forall ((x_3 Nat_0) (y_2 Nat_0) (x_40 list_0) (x_39 Bool))
	(=>	(and (= x_40 (cons_0 y_2 (cons_0 x_3 nil_0)))
			(= x_39 false)
			(leq_0 x_39 x_3 y_2))
		(sort_0 x_40 x_3 y_2))))
(declare-fun evens_0 (list_0 list_0) Bool)
(declare-fun odds_0 (list_0 list_0) Bool)
(assert (forall ((x_4 list_0) (y_3 Nat_0) (xs_0 list_0) (x_41 list_0) (x_42 list_0))
	(=>	(and (= x_41 (cons_0 y_3 x_42))
			(odds_0 x_42 xs_0)
			(= x_4 (cons_0 y_3 xs_0)))
		(evens_0 x_41 x_4))))
(assert (forall ((x_4 list_0) (x_43 list_0))
	(=>	(and (= x_43 nil_0)
			(= x_4 nil_0))
		(evens_0 x_43 x_4))))
(assert (forall ((x_5 list_0) (y_4 Nat_0) (xs_1 list_0) (x_44 list_0) (x_45 list_0))
	(=>	(and (= x_44 x_45)
			(evens_0 x_45 xs_1)
			(= x_5 (cons_0 y_4 xs_1)))
		(odds_0 x_44 x_5))))
(assert (forall ((x_5 list_0) (x_46 list_0))
	(=>	(and (= x_46 nil_0)
			(= x_5 nil_0))
		(odds_0 x_46 x_5))))
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_6 Nat_0) (y_5 list_0) (z_2 Nat_0) (ys_0 list_0) (x_47 Nat_0) (x_48 Nat_0) (x_49 Nat_0))
	(=>	(and (= x_47 x_49)
			(count_0 x_48 x_6 ys_0)
			(plus_0 x_49 (succ_0 zero_0) x_48)
			(= y_5 (cons_0 z_2 ys_0))
			(= x_6 z_2))
		(count_0 x_47 x_6 y_5))))
(assert (forall ((x_6 Nat_0) (y_5 list_0) (z_2 Nat_0) (ys_0 list_0) (x_50 Nat_0) (x_51 Nat_0))
	(=>	(and (= x_50 x_51)
			(count_0 x_51 x_6 ys_0)
			(= y_5 (cons_0 z_2 ys_0))
			(diseqNat_1 x_6 z_2))
		(count_0 x_50 x_6 y_5))))
(assert (forall ((x_6 Nat_0) (y_5 list_0) (x_52 Nat_0))
	(=>	(and (= x_52 zero_0)
			(= y_5 nil_0))
		(count_0 x_52 x_6 y_5))))
(declare-fun x_7 (list_0 list_0 list_0) Bool)
(assert (forall ((x_8 list_0) (y_6 list_0) (z_3 Nat_0) (xs_2 list_0) (x_53 list_0) (x_54 list_0))
	(=>	(and (= x_53 (cons_0 z_3 x_54))
			(x_7 x_54 xs_2 y_6)
			(= x_8 (cons_0 z_3 xs_2)))
		(x_7 x_53 x_8 y_6))))
(assert (forall ((x_8 list_0) (y_6 list_0) (x_55 list_0))
	(=>	(and (= x_55 y_6)
			(= x_8 nil_0))
		(x_7 x_55 x_8 y_6))))
(declare-fun pairs_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_9 list_0) (y_7 list_0) (z_4 Nat_0) (x_10 list_0) (x_11 Nat_0) (x_12 list_0) (x_56 list_0) (x_57 list_0) (x_58 list_0) (x_59 list_0))
	(=>	(and (= x_56 x_59)
			(sort_0 x_57 z_4 x_11)
			(pairs_0 x_58 x_10 x_12)
			(x_7 x_59 x_57 x_58)
			(= x_9 (cons_0 z_4 x_10))
			(= y_7 (cons_0 x_11 x_12)))
		(pairs_0 x_56 x_9 y_7))))
(assert (forall ((x_9 list_0) (y_7 list_0) (z_4 Nat_0) (x_10 list_0) (x_60 list_0))
	(=>	(and (= x_60 (cons_0 z_4 x_10))
			(= x_9 (cons_0 z_4 x_10))
			(= y_7 nil_0))
		(pairs_0 x_60 x_9 y_7))))
(assert (forall ((x_9 list_0) (y_7 list_0) (x_61 list_0))
	(=>	(and (= x_61 y_7)
			(= x_9 nil_0))
		(pairs_0 x_61 x_9 y_7))))
(declare-fun stitch_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_13 list_0) (y_8 list_0) (z_5 Nat_0) (xs_3 list_0) (x_62 list_0) (x_63 list_0))
	(=>	(and (= x_62 (cons_0 z_5 x_63))
			(pairs_0 x_63 xs_3 y_8)
			(= x_13 (cons_0 z_5 xs_3)))
		(stitch_0 x_62 x_13 y_8))))
(assert (forall ((x_13 list_0) (y_8 list_0) (x_64 list_0))
	(=>	(and (= x_64 y_8)
			(= x_13 nil_0))
		(stitch_0 x_64 x_13 y_8))))
(declare-fun bmerge_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_14 list_0) (y_9 list_0) (z_6 Nat_0) (x_15 list_0) (x_16 Nat_0) (x_17 list_0) (fail_0 list_0) (x_18 Nat_0) (x_19 list_0) (x_72 list_0) (x_65 list_0) (x_66 list_0) (x_67 list_0) (x_68 list_0) (x_69 list_0) (x_70 list_0) (x_71 list_0))
	(=>	(and (= x_72 fail_0)
			(= x_14 (cons_0 z_6 x_15))
			(= y_9 (cons_0 x_16 x_17))
			(= fail_0 x_71)
			(= x_15 (cons_0 x_18 x_19))
			(evens_0 x_65 (cons_0 z_6 x_15))
			(evens_0 x_66 (cons_0 x_16 x_17))
			(bmerge_0 x_67 x_65 x_66)
			(odds_0 x_68 (cons_0 z_6 x_15))
			(odds_0 x_69 (cons_0 x_16 x_17))
			(bmerge_0 x_70 x_68 x_69)
			(stitch_0 x_71 x_67 x_70))
		(bmerge_0 x_72 x_14 y_9))))
(assert (forall ((x_14 list_0) (y_9 list_0) (z_6 Nat_0) (x_15 list_0) (x_16 Nat_0) (x_17 list_0) (fail_0 list_0) (x_20 Nat_0) (x_21 list_0) (x_80 list_0) (x_73 list_0) (x_74 list_0) (x_75 list_0) (x_76 list_0) (x_77 list_0) (x_78 list_0) (x_79 list_0))
	(=>	(and (= x_80 fail_0)
			(= x_14 (cons_0 z_6 x_15))
			(= y_9 (cons_0 x_16 x_17))
			(= fail_0 x_79)
			(= x_15 nil_0)
			(= x_17 (cons_0 x_20 x_21))
			(evens_0 x_73 (cons_0 z_6 x_15))
			(evens_0 x_74 (cons_0 x_16 x_17))
			(bmerge_0 x_75 x_73 x_74)
			(odds_0 x_76 (cons_0 z_6 x_15))
			(odds_0 x_77 (cons_0 x_16 x_17))
			(bmerge_0 x_78 x_76 x_77)
			(stitch_0 x_79 x_75 x_78))
		(bmerge_0 x_80 x_14 y_9))))
(assert (forall ((x_14 list_0) (y_9 list_0) (z_6 Nat_0) (x_15 list_0) (x_16 Nat_0) (x_17 list_0) (fail_0 list_0) (x_88 list_0) (x_89 list_0) (x_81 list_0) (x_82 list_0) (x_83 list_0) (x_84 list_0) (x_85 list_0) (x_86 list_0) (x_87 list_0))
	(=>	(and (= x_88 x_89)
			(sort_0 x_89 z_6 x_16)
			(= x_14 (cons_0 z_6 x_15))
			(= y_9 (cons_0 x_16 x_17))
			(= fail_0 x_87)
			(= x_15 nil_0)
			(= x_17 nil_0)
			(evens_0 x_81 (cons_0 z_6 x_15))
			(evens_0 x_82 (cons_0 x_16 x_17))
			(bmerge_0 x_83 x_81 x_82)
			(odds_0 x_84 (cons_0 z_6 x_15))
			(odds_0 x_85 (cons_0 x_16 x_17))
			(bmerge_0 x_86 x_84 x_85)
			(stitch_0 x_87 x_83 x_86))
		(bmerge_0 x_88 x_14 y_9))))
(assert (forall ((x_14 list_0) (y_9 list_0) (z_6 Nat_0) (x_15 list_0) (x_90 list_0))
	(=>	(and (= x_90 (cons_0 z_6 x_15))
			(= x_14 (cons_0 z_6 x_15))
			(= y_9 nil_0))
		(bmerge_0 x_90 x_14 y_9))))
(assert (forall ((x_14 list_0) (y_9 list_0) (x_91 list_0))
	(=>	(and (= x_91 nil_0)
			(= x_14 nil_0))
		(bmerge_0 x_91 x_14 y_9))))
(declare-fun bsort_0 (list_0 list_0) Bool)
(assert (forall ((x_22 list_0) (y_10 Nat_0) (z_7 list_0) (x_23 Nat_0) (x_24 list_0) (x_92 list_0) (x_93 list_0) (x_94 list_0) (x_95 list_0) (x_96 list_0) (x_97 list_0))
	(=>	(and (= x_92 x_97)
			(evens_0 x_93 (cons_0 y_10 (cons_0 x_23 x_24)))
			(bsort_0 x_94 x_93)
			(odds_0 x_95 (cons_0 y_10 (cons_0 x_23 x_24)))
			(bsort_0 x_96 x_95)
			(bmerge_0 x_97 x_94 x_96)
			(= x_22 (cons_0 y_10 z_7))
			(= z_7 (cons_0 x_23 x_24)))
		(bsort_0 x_92 x_22))))
(assert (forall ((x_22 list_0) (y_10 Nat_0) (z_7 list_0) (x_98 list_0))
	(=>	(and (= x_98 (cons_0 y_10 nil_0))
			(= x_22 (cons_0 y_10 z_7))
			(= z_7 nil_0))
		(bsort_0 x_98 x_22))))
(assert (forall ((x_22 list_0) (x_99 list_0))
	(=>	(and (= x_99 nil_0)
			(= x_22 nil_0))
		(bsort_0 x_99 x_22))))
(assert (forall ((x_25 Nat_0) (y_11 Nat_0) (z_8 Nat_0) (x_100 Nat_0) (x_101 Nat_0) (x_102 Nat_0) (x_103 Nat_0))
	(=>	(and (diseqNat_1 x_101 x_103)
			(plus_0 x_100 y_11 z_8)
			(plus_0 x_101 x_25 x_100)
			(plus_0 x_102 x_25 y_11)
			(plus_0 x_103 x_102 z_8))
		false)))
(assert (forall ((x_26 Nat_0) (y_12 Nat_0) (x_104 Nat_0) (x_105 Nat_0))
	(=>	(and (diseqNat_1 x_104 x_105)
			(plus_0 x_104 x_26 y_12)
			(plus_0 x_105 y_12 x_26))
		false)))
(assert (forall ((x_27 Nat_0) (x_106 Nat_0))
	(=>	(and (diseqNat_1 x_106 x_27)
			(plus_0 x_106 x_27 zero_0))
		false)))
(assert (forall ((x_28 Nat_0) (x_107 Nat_0))
	(=>	(and (diseqNat_1 x_107 x_28)
			(plus_0 x_107 zero_0 x_28))
		false)))
(assert (forall ((x_29 Nat_0) (xs_4 list_0) (x_108 list_0) (x_109 Nat_0) (x_110 Nat_0))
	(=>	(and (diseqNat_1 x_109 x_110)
			(bsort_0 x_108 xs_4)
			(count_0 x_109 x_29 x_108)
			(count_0 x_110 x_29 xs_4))
		false)))
(check-sat)
