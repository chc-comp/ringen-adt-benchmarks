(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_8 ) (Z_9 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-fun or_1 (Bool_0 Bool_0 Bool_0) Bool)
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Bool_0)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Bool_0) (tail_0 list_0)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 pair_0) (tail_1 list_1)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 list_1) (tail_2 list_2)))))
(declare-datatypes ((Form_0 0)) (((x_0 (proj_0 Form_0) (proj_1 Form_0)) (Not_0 (projNot_0 Form_0)) (Var_0 (projVar_0 Nat_0)))))
(declare-fun or_0 (Bool_0 list_0) Bool)
(declare-fun models_0 (list_1 Nat_0 list_1) Bool)
(declare-fun models_1 (list_0 Nat_0 list_1) Bool)
(declare-fun models_2 (list_0 Nat_0 list_1) Bool)
(declare-fun x_10 (list_2 list_2 list_2) Bool)
(declare-fun models_3 (list_2 Form_0 list_1) Bool)
(declare-fun models_4 (list_2 Form_0 list_2) Bool)
(declare-fun models_5 (list_2 list_2 Form_0 list_2) Bool)
(declare-fun valid_0 (Bool_0 Form_0) Bool)
(assert (forall ((x_90 Nat_0))
	(diseqNat_0 Z_8 (Z_9 x_90))))
(assert (forall ((x_91 Nat_0))
	(diseqNat_0 (Z_9 x_91) Z_8)))
(assert (forall ((x_92 Nat_0) (x_93 Nat_0))
	(=> (diseqNat_0 x_92 x_93) (diseqNat_0 (Z_9 x_92) (Z_9 x_93)))))
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(assert (or_1 false_0 false_0 false_0))
(assert (or_1 true_0 true_0 false_0))
(assert (or_1 true_0 false_0 true_0))
(assert (or_1 true_0 true_0 true_0))
(assert (forall ((x_22 Bool_0) (x_23 Bool_0) (y_0 Bool_0) (xs_0 list_0))
	(=> (and (or_0 x_23 xs_0) (or_1 x_22 y_0 x_23)) (or_0 x_22 (cons_0 y_0 xs_0)))))
(assert (or_0 false_0 nil_0))
(assert (forall ((x_26 list_1) (x_3 Nat_0) (y_2 Bool_0) (xs_1 list_1) (x_2 Nat_0))
	(=> (and (diseqNat_0 x_2 x_3) (models_0 x_26 x_2 xs_1)) (models_0 (cons_1 (pair_1 x_3 y_2) x_26) x_2 (cons_1 (pair_1 x_3 y_2) xs_1)))))
(assert (forall ((x_27 list_1) (y_2 Bool_0) (xs_1 list_1) (x_2 Nat_0))
	(=> (models_0 x_27 x_2 xs_1) (models_0 x_27 x_2 (cons_1 (pair_1 x_2 y_2) xs_1)))))
(assert (forall ((x_2 Nat_0))
	(models_0 nil_1 x_2 nil_1)))
(assert (forall ((x_30 list_0) (y_4 Nat_0) (x_5 list_1) (x_4 Nat_0))
	(=> (models_1 x_30 x_4 x_5) (models_1 x_30 x_4 (cons_1 (pair_1 y_4 true_0) x_5)))))
(assert (forall ((x_33 list_0) (x_6 Bool_0) (x_5 list_1) (x_4 Nat_0))
	(=> (and (diseqBool_0 x_6 true_0) (models_1 x_33 x_4 x_5)) (models_1 (cons_0 true_0 x_33) x_4 (cons_1 (pair_1 x_4 x_6) x_5)))))
(assert (forall ((x_35 list_0) (y_4 Nat_0) (x_6 Bool_0) (x_5 list_1) (x_4 Nat_0))
	(=> (and (diseqNat_0 x_4 y_4) (diseqBool_0 x_6 true_0) (models_1 x_35 x_4 x_5)) (models_1 (cons_0 false_0 x_35) x_4 (cons_1 (pair_1 y_4 x_6) x_5)))))
(assert (forall ((x_4 Nat_0))
	(models_1 nil_0 x_4 nil_1)))
(assert (forall ((x_38 list_0) (x_8 list_1) (x_7 Nat_0))
	(=> (models_2 x_38 x_7 x_8) (models_2 (cons_0 true_0 x_38) x_7 (cons_1 (pair_1 x_7 true_0) x_8)))))
(assert (forall ((x_40 list_0) (y_6 Nat_0) (x_8 list_1) (x_7 Nat_0))
	(=> (and (diseqNat_0 x_7 y_6) (models_2 x_40 x_7 x_8)) (models_2 (cons_0 false_0 x_40) x_7 (cons_1 (pair_1 y_6 true_0) x_8)))))
(assert (forall ((x_41 list_0) (y_6 Nat_0) (x_9 Bool_0) (x_8 list_1) (x_7 Nat_0))
	(=> (and (diseqBool_0 x_9 true_0) (models_2 x_41 x_7 x_8)) (models_2 x_41 x_7 (cons_1 (pair_1 y_6 x_9) x_8)))))
(assert (forall ((x_7 Nat_0))
	(models_2 nil_0 x_7 nil_1)))
(assert (forall ((x_45 list_2) (z_3 list_1) (xs_2 list_2) (y_7 list_2))
	(=> (x_10 x_45 xs_2 y_7) (x_10 (cons_2 z_3 x_45) (cons_2 z_3 xs_2) y_7))))
(assert (forall ((x_46 list_2))
	(x_10 x_46 nil_2 x_46)))
(assert (forall ((x_50 list_1) (x_47 list_0) (x_48 Bool_0) (x_17 Nat_0) (y_10 list_1))
	(=> (and (diseqBool_0 x_48 true_0) (models_0 x_50 x_17 y_10) (models_1 x_47 x_17 y_10) (or_0 x_48 x_47)) (models_3 (cons_2 (cons_1 (pair_1 x_17 true_0) x_50) nil_2) (Var_0 x_17) y_10))))
(assert (forall ((x_51 list_0) (x_17 Nat_0) (y_10 list_1))
	(=> (and (models_1 x_51 x_17 y_10) (or_0 true_0 x_51)) (models_3 nil_2 (Var_0 x_17) y_10))))
(assert (forall ((x_57 list_1) (x_54 list_0) (x_55 Bool_0) (x_16 Nat_0) (y_10 list_1))
	(=> (and (diseqBool_0 x_55 true_0) (models_0 x_57 x_16 y_10) (models_2 x_54 x_16 y_10) (or_0 x_55 x_54)) (models_3 (cons_2 (cons_1 (pair_1 x_16 false_0) x_57) nil_2) (Not_0 (Var_0 x_16)) y_10))))
(assert (forall ((x_58 list_0) (x_16 Nat_0) (y_10 list_1))
	(=> (and (models_2 x_58 x_16 y_10) (or_0 true_0 x_58)) (models_3 nil_2 (Not_0 (Var_0 x_16)) y_10))))
(assert (forall ((x_61 list_2) (p_1 Form_0) (y_10 list_1))
	(=> (models_3 x_61 p_1 y_10) (models_3 x_61 (Not_0 (Not_0 p_1)) y_10))))
(assert (forall ((x_63 list_2) (x_64 list_2) (x_65 list_2) (r_0 Form_0) (q_3 Form_0) (y_10 list_1))
	(=> (and (models_3 x_64 (Not_0 r_0) y_10) (models_3 x_65 (x_0 r_0 (Not_0 q_3)) y_10) (x_10 x_63 x_64 x_65)) (models_3 x_63 (Not_0 (x_0 r_0 q_3)) y_10))))
(assert (forall ((x_67 list_2) (x_68 list_2) (p_0 Form_0) (q_2 Form_0) (y_10 list_1))
	(=> (and (models_3 x_68 p_0 y_10) (models_4 x_67 q_2 x_68)) (models_3 x_67 (x_0 p_0 q_2) y_10))))
(assert (forall ((x_70 list_2) (x_71 list_2) (y_11 list_1) (z_5 list_2) (q_4 Form_0))
	(=> (and (models_3 x_71 q_4 y_11) (models_5 x_70 z_5 q_4 x_71)) (models_4 x_70 q_4 (cons_2 y_11 z_5)))))
(assert (forall ((q_4 Form_0))
	(models_4 nil_2 q_4 nil_2)))
(assert (forall ((x_75 list_2) (z_6 list_1) (x_20 list_2) (x_19 list_2) (q_5 Form_0))
	(=> (models_5 x_75 x_19 q_5 x_20) (models_5 (cons_2 z_6 x_75) x_19 q_5 (cons_2 z_6 x_20)))))
(assert (forall ((x_76 list_2) (x_19 list_2) (q_5 Form_0))
	(=> (models_4 x_76 q_5 x_19) (models_5 x_76 x_19 q_5 nil_2))))
(assert (forall ((y_13 list_1) (z_7 list_2) (x_21 Form_0))
	(=> (models_3 (cons_2 y_13 z_7) (Not_0 x_21) nil_1) (valid_0 false_0 x_21))))
(assert (forall ((x_21 Form_0))
	(=> (models_3 nil_2 (Not_0 x_21) nil_1) (valid_0 true_0 x_21))))
(assert (forall ((x_82 Bool_0) (p_2 Form_0) (q_6 Form_0))
	(=> (and (diseqBool_0 x_82 true_0) (valid_0 true_0 (x_0 p_2 q_6)) (valid_0 x_82 q_6)) false)))
(check-sat)
(get-model)
