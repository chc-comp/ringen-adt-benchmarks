(set-logic HORN)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 list_0) (projpair_1 list_0)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(declare-fun plus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Bool_0 Nat_0 Nat_0) Bool)
(declare-fun leq_0 (Bool_0 Nat_0 Nat_0) Bool)
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(declare-fun length_0 (Nat_0 list_0) Bool)
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(declare-fun isort_0 (list_0 list_0) Bool)
(declare-fun idiv_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(declare-fun splitAt_0 (pair_0 Nat_0 list_0) Bool)
(declare-fun x_13 (list_0 list_0 list_0) Bool)
(declare-fun reverse_0 (list_0 list_0) Bool)
(declare-fun stoogesort_0 (list_0 list_0) Bool)
(declare-fun stoogesort_1 (list_0 list_0) Bool)
(declare-fun stoogesort_2 (list_0 list_0) Bool)
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(assert (forall ((x_125 Nat_0))
	(diseqNat_0 zero_0 (succ_0 x_125))))
(assert (forall ((x_126 Nat_0))
	(diseqNat_0 (succ_0 x_126) zero_0)))
(assert (forall ((x_127 Nat_0) (x_128 Nat_0))
	(=> (diseqNat_0 x_127 x_128) (diseqNat_0 (succ_0 x_127) (succ_0 x_128)))))
(assert (forall ((x_135 Nat_0) (x_136 list_0))
	(diseqlist_0 nil_0 (cons_0 x_135 x_136))))
(assert (forall ((x_137 Nat_0) (x_138 list_0))
	(diseqlist_0 (cons_0 x_137 x_138) nil_0)))
(assert (forall ((x_139 Nat_0) (x_140 list_0) (x_141 Nat_0) (x_142 list_0))
	(=> (diseqNat_0 x_139 x_141) (diseqlist_0 (cons_0 x_139 x_140) (cons_0 x_141 x_142)))))
(assert (forall ((x_139 Nat_0) (x_140 list_0) (x_141 Nat_0) (x_142 list_0))
	(=> (diseqlist_0 x_140 x_142) (diseqlist_0 (cons_0 x_139 x_140) (cons_0 x_141 x_142)))))
(assert (forall ((x_30 list_0) (z_1 Nat_0) (xs_0 list_0) (z_0 Nat_0))
	(=> (take_0 x_30 z_0 xs_0) (take_0 (cons_0 z_1 x_30) (succ_0 z_0) (cons_0 z_1 xs_0)))))
(assert (forall ((z_0 Nat_0))
	(take_0 nil_0 (succ_0 z_0) nil_0)))
(assert (forall ((y_0 list_0))
	(take_0 nil_0 zero_0 y_0)))
(assert (forall ((x_34 Nat_0) (z_2 Nat_0) (y_1 Nat_0))
	(=> (plus_0 x_34 z_2 y_1) (plus_0 (succ_0 x_34) (succ_0 z_2) y_1))))
(assert (forall ((x_35 Nat_0))
	(plus_0 x_35 zero_0 x_35)))
(assert (forall ((x_36 Nat_0) (y_3 Nat_0) (z_3 Nat_0))
	(=> (minus_0 x_36 z_3 y_3) (minus_0 x_36 (succ_0 z_3) (succ_0 y_3)))))
(assert (forall ((z_3 Nat_0))
	(minus_0 zero_0 (succ_0 z_3) zero_0)))
(assert (forall ((y_2 Nat_0))
	(minus_0 zero_0 zero_0 y_2)))
(assert (forall ((x_40 Bool_0) (n_0 Nat_0) (z_4 Nat_0))
	(=> (lt_0 x_40 n_0 z_4) (lt_0 x_40 (succ_0 n_0) (succ_0 z_4)))))
(assert (forall ((z_4 Nat_0))
	(lt_0 true_0 zero_0 (succ_0 z_4))))
(assert (forall ((x_3 Nat_0))
	(lt_0 false_0 x_3 zero_0)))
(assert (forall ((x_44 Bool_0) (x_5 Nat_0) (z_5 Nat_0))
	(=> (leq_0 x_44 z_5 x_5) (leq_0 x_44 (succ_0 z_5) (succ_0 x_5)))))
(assert (forall ((z_5 Nat_0))
	(leq_0 false_0 (succ_0 z_5) zero_0)))
(assert (forall ((y_5 Nat_0))
	(leq_0 true_0 zero_0 y_5)))
(assert (forall ((x_6 Nat_0) (y_6 Nat_0))
	(=> (leq_0 true_0 x_6 y_6) (sort_0 (cons_0 x_6 (cons_0 y_6 nil_0)) x_6 y_6))))
(assert (forall ((x_50 Bool_0) (x_6 Nat_0) (y_6 Nat_0))
	(=> (and (diseqBool_0 x_50 true_0) (leq_0 x_50 x_6 y_6)) (sort_0 (cons_0 y_6 (cons_0 x_6 nil_0)) x_6 y_6))))
(assert (forall ((x_52 Nat_0) (x_53 Nat_0) (y_7 Nat_0) (l_0 list_0))
	(=> (and (length_0 x_53 l_0) (plus_0 x_52 (succ_0 zero_0) x_53)) (length_0 x_52 (cons_0 y_7 l_0)))))
(assert (length_0 zero_0 nil_0))
(assert (forall ((z_6 Nat_0) (xs_1 list_0) (x_8 Nat_0))
	(=> (leq_0 true_0 x_8 z_6) (insert_0 (cons_0 x_8 (cons_0 z_6 xs_1)) x_8 (cons_0 z_6 xs_1)))))
(assert (forall ((x_60 list_0) (x_58 Bool_0) (z_6 Nat_0) (xs_1 list_0) (x_8 Nat_0))
	(=> (and (diseqBool_0 x_58 true_0) (insert_0 x_60 x_8 xs_1) (leq_0 x_58 x_8 z_6)) (insert_0 (cons_0 z_6 x_60) x_8 (cons_0 z_6 xs_1)))))
(assert (forall ((x_8 Nat_0))
	(insert_0 (cons_0 x_8 nil_0) x_8 nil_0)))
(assert (forall ((x_62 list_0) (x_63 list_0) (y_9 Nat_0) (xs_2 list_0))
	(=> (and (isort_0 x_63 xs_2) (insert_0 x_62 y_9 x_63)) (isort_0 x_62 (cons_0 y_9 xs_2)))))
(assert (isort_0 nil_0 nil_0))
(assert (forall ((x_10 Nat_0) (y_10 Nat_0))
	(=> (lt_0 true_0 x_10 y_10) (idiv_0 zero_0 x_10 y_10))))
(assert (forall ((x_70 Nat_0) (x_71 Nat_0) (x_68 Bool_0) (x_10 Nat_0) (y_10 Nat_0))
	(=> (and (diseqBool_0 x_68 true_0) (minus_0 x_70 x_10 y_10) (idiv_0 x_71 x_70 y_10) (lt_0 x_68 x_10 y_10)) (idiv_0 (succ_0 x_71) x_10 y_10))))
(assert (forall ((x_72 list_0) (z_8 Nat_0) (xs_3 list_0) (z_7 Nat_0))
	(=> (drop_0 x_72 z_7 xs_3) (drop_0 x_72 (succ_0 z_7) (cons_0 z_8 xs_3)))))
(assert (forall ((z_7 Nat_0))
	(drop_0 nil_0 (succ_0 z_7) nil_0)))
(assert (forall ((x_75 list_0))
	(drop_0 x_75 zero_0 x_75)))
(assert (forall ((x_77 list_0) (x_78 list_0) (x_12 Nat_0) (y_12 list_0))
	(=> (and (take_0 x_77 x_12 y_12) (drop_0 x_78 x_12 y_12)) (splitAt_0 (pair_1 x_77 x_78) x_12 y_12))))
(assert (forall ((x_80 list_0) (z_9 Nat_0) (xs_4 list_0) (y_13 list_0))
	(=> (x_13 x_80 xs_4 y_13) (x_13 (cons_0 z_9 x_80) (cons_0 z_9 xs_4) y_13))))
(assert (forall ((x_81 list_0))
	(x_13 x_81 nil_0 x_81)))
(assert (forall ((x_82 list_0) (x_83 list_0) (y_14 Nat_0) (xs_5 list_0))
	(=> (and (reverse_0 x_83 xs_5) (x_13 x_82 x_83 (cons_0 y_14 nil_0))) (reverse_0 x_82 (cons_0 y_14 xs_5)))))
(assert (reverse_0 nil_0 nil_0))
(assert (forall ((x_90 list_0) (x_91 list_0) (x_92 list_0) (x_86 Nat_0) (x_87 Nat_0) (x_88 list_0) (ys_0 list_0) (zs_0 list_0) (x_19 list_0))
	(=> (and (stoogesort_1 x_91 zs_0) (reverse_0 x_92 ys_0) (x_13 x_90 x_91 x_92) (length_0 x_86 x_19) (idiv_0 x_87 x_86 (succ_0 (succ_0 (succ_0 zero_0)))) (reverse_0 x_88 x_19) (splitAt_0 (pair_1 ys_0 zs_0) x_87 x_88)) (stoogesort_0 x_90 x_19))))
(assert (forall ((x_94 list_0) (x_95 list_0) (x_96 list_0) (x_22 Nat_0) (x_23 list_0) (y_16 Nat_0) (y_15 Nat_0))
	(=> (and (stoogesort_0 x_95 (cons_0 y_15 (cons_0 y_16 (cons_0 x_22 x_23)))) (stoogesort_2 x_96 x_95) (stoogesort_0 x_94 x_96)) (stoogesort_1 x_94 (cons_0 y_15 (cons_0 y_16 (cons_0 x_22 x_23)))))))
(assert (forall ((x_98 list_0) (y_16 Nat_0) (y_15 Nat_0))
	(=> (sort_0 x_98 y_15 y_16) (stoogesort_1 x_98 (cons_0 y_15 (cons_0 y_16 nil_0))))))
(assert (forall ((y_15 Nat_0))
	(stoogesort_1 (cons_0 y_15 nil_0) (cons_0 y_15 nil_0))))
(assert (stoogesort_1 nil_0 nil_0))
(assert (forall ((x_105 list_0) (x_106 list_0) (x_102 Nat_0) (x_103 Nat_0) (ys_1 list_0) (zs_1 list_0) (x_24 list_0))
	(=> (and (stoogesort_1 x_106 zs_1) (x_13 x_105 ys_1 x_106) (length_0 x_102 x_24) (idiv_0 x_103 x_102 (succ_0 (succ_0 (succ_0 zero_0)))) (splitAt_0 (pair_1 ys_1 zs_1) x_103 x_24)) (stoogesort_2 x_105 x_24))))
(assert (forall ((x_108 Nat_0) (x_109 Nat_0) (x_110 Nat_0) (x_111 Nat_0) (x_25 Nat_0) (y_17 Nat_0) (z_11 Nat_0))
	(=> (and (diseqNat_0 x_109 x_111) (plus_0 x_108 y_17 z_11) (plus_0 x_109 x_25 x_108) (plus_0 x_110 x_25 y_17) (plus_0 x_111 x_110 z_11)) false)))
(assert (forall ((x_112 Nat_0) (x_113 Nat_0) (x_26 Nat_0) (y_18 Nat_0))
	(=> (and (diseqNat_0 x_112 x_113) (plus_0 x_112 x_26 y_18) (plus_0 x_113 y_18 x_26)) false)))
(assert (forall ((x_114 Nat_0) (x_27 Nat_0))
	(=> (and (diseqNat_0 x_114 x_27) (plus_0 x_114 x_27 zero_0)) false)))
(assert (forall ((x_115 Nat_0) (x_28 Nat_0))
	(=> (and (diseqNat_0 x_115 x_28) (plus_0 x_115 zero_0 x_28)) false)))
(assert (forall ((x_116 list_0) (x_117 list_0) (xs_6 list_0))
	(=> (and (diseqlist_0 x_116 x_117) (stoogesort_1 x_116 xs_6) (isort_0 x_117 xs_6)) false)))
(check-sat)
(get-model)
