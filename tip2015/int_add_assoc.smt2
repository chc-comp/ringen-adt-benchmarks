(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((Integer_0 0)) (((P_1 (projP_0 Nat_0)) (N_0 (projN_0 Nat_0)))))
(declare-fun diseqInteger_0 (Integer_0 Integer_0) Bool)
(declare-fun plus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun x_1 (Integer_0 Nat_0 Nat_0) Bool)
(declare-fun plus_1 (Integer_0 Integer_0 Integer_0) Bool)
(assert (forall ((x_55 Nat_0))
	(diseqNat_0 zero_0 (succ_0 x_55))))
(assert (forall ((x_56 Nat_0))
	(diseqNat_0 (succ_0 x_56) zero_0)))
(assert (forall ((x_57 Nat_0) (x_58 Nat_0))
	(=> (diseqNat_0 x_57 x_58) (diseqNat_0 (succ_0 x_57) (succ_0 x_58)))))
(assert (forall ((x_65 Nat_0) (x_66 Nat_0))
	(diseqInteger_0 (P_1 x_65) (N_0 x_66))))
(assert (forall ((x_67 Nat_0) (x_68 Nat_0))
	(diseqInteger_0 (N_0 x_67) (P_1 x_68))))
(assert (forall ((x_69 Nat_0) (x_70 Nat_0))
	(=> (diseqNat_0 x_69 x_70) (diseqInteger_0 (P_1 x_69) (P_1 x_70)))))
(assert (forall ((x_71 Nat_0) (x_72 Nat_0))
	(=> (diseqNat_0 x_71 x_72) (diseqInteger_0 (N_0 x_71) (N_0 x_72)))))
(assert (forall ((x_13 Nat_0) (z_0 Nat_0) (y_0 Nat_0))
	(=> (plus_0 x_13 z_0 y_0) (plus_0 (succ_0 x_13) (succ_0 z_0) y_0))))
(assert (forall ((x_14 Nat_0))
	(plus_0 x_14 zero_0 x_14)))
(assert (forall ((x_3 Nat_0) (z_1 Nat_0) (fail_0 Integer_0))
	(=> (x_1 fail_0 x_3 z_1) (x_1 fail_0 (succ_0 x_3) (succ_0 z_1)))))
(assert (forall ((x_4 Nat_0))
	(x_1 (N_0 (succ_0 x_4)) zero_0 (succ_0 x_4))))
(assert (forall ((x_5 Nat_0))
	(x_1 (P_1 (succ_0 x_5)) (succ_0 x_5) zero_0)))
(assert (x_1 (P_1 zero_0) zero_0 zero_0))
(assert (forall ((x_28 Nat_0) (x_29 Nat_0) (n_3 Nat_0) (m_1 Nat_0))
	(=> (and (plus_0 x_28 (succ_0 zero_0) m_1) (plus_0 x_29 x_28 n_3)) (plus_1 (N_0 x_29) (N_0 m_1) (N_0 n_3)))))
(assert (forall ((x_30 Integer_0) (x_31 Nat_0) (n_2 Nat_0) (m_1 Nat_0))
	(=> (and (plus_0 x_31 (succ_0 zero_0) m_1) (x_1 x_30 n_2 x_31)) (plus_1 x_30 (N_0 m_1) (P_1 n_2)))))
(assert (forall ((x_33 Integer_0) (x_34 Nat_0) (o_0 Nat_0) (m_0 Nat_0))
	(=> (and (plus_0 x_34 (succ_0 zero_0) o_0) (x_1 x_33 m_0 x_34)) (plus_1 x_33 (P_1 m_0) (N_0 o_0)))))
(assert (forall ((x_37 Nat_0) (n_1 Nat_0) (m_0 Nat_0))
	(=> (plus_0 x_37 m_0 n_1) (plus_1 (P_1 x_37) (P_1 m_0) (P_1 n_1)))))
(assert (forall ((x_38 Integer_0) (x_39 Integer_0) (x_40 Integer_0) (x_41 Integer_0) (x_7 Integer_0) (y_3 Integer_0) (z_2 Integer_0))
	(=> (and (diseqInteger_0 x_39 x_41) (plus_1 x_38 y_3 z_2) (plus_1 x_39 x_7 x_38) (plus_1 x_40 x_7 y_3) (plus_1 x_41 x_40 z_2)) false)))
(assert (forall ((x_42 Nat_0) (x_43 Nat_0) (x_44 Nat_0) (x_45 Nat_0) (x_8 Nat_0) (y_4 Nat_0) (z_3 Nat_0))
	(=> (and (diseqNat_0 x_43 x_45) (plus_0 x_42 y_4 z_3) (plus_0 x_43 x_8 x_42) (plus_0 x_44 x_8 y_4) (plus_0 x_45 x_44 z_3)) false)))
(assert (forall ((x_46 Nat_0) (x_47 Nat_0) (x_9 Nat_0) (y_5 Nat_0))
	(=> (and (diseqNat_0 x_46 x_47) (plus_0 x_46 x_9 y_5) (plus_0 x_47 y_5 x_9)) false)))
(assert (forall ((x_48 Nat_0) (x_10 Nat_0))
	(=> (and (diseqNat_0 x_48 x_10) (plus_0 x_48 x_10 zero_0)) false)))
(assert (forall ((x_49 Nat_0) (x_11 Nat_0))
	(=> (and (diseqNat_0 x_49 x_11) (plus_0 x_49 zero_0 x_11)) false)))
(check-sat)
(get-model)
