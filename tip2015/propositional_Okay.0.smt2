(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_94 Nat_0) (x_93 Nat_0))
	(=> (= x_94 (S_0 x_93))
	    (unS_1 x_93 x_94))))
(assert (isZ_0 Z_0))
(assert (forall ((x_95 Nat_0))
	(isS_0 (S_0 x_95))))
(assert (forall ((x_96 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_96))))
(assert (forall ((x_97 Nat_0))
	(diseqNat_0 (S_0 x_97) Z_0)))
(assert (forall ((x_98 Nat_0) (x_99 Nat_0))
	(=> (diseqNat_0 x_98 x_99)
	    (diseqNat_0 (S_0 x_98) (S_0 x_99)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_16 Nat_0))
	(add_0 y_16 Z_0 y_16)))
(assert (forall ((x_91 Nat_0) (y_16 Nat_0) (r_1 Nat_0))
	(=> (add_0 r_1 x_91 y_16)
	    (add_0 (S_0 r_1) (S_0 x_91) y_16))))
(assert (forall ((y_16 Nat_0))
	(minus_0 Z_0 Z_0 y_16)))
(assert (forall ((x_91 Nat_0) (y_16 Nat_0) (r_1 Nat_0))
	(=> (minus_0 r_1 x_91 y_16)
	    (minus_0 (S_0 r_1) (S_0 x_91) y_16))))
(assert (forall ((y_16 Nat_0))
	(le_0 Z_0 y_16)))
(assert (forall ((x_91 Nat_0) (y_16 Nat_0))
	(=> (le_0 x_91 y_16)
	    (le_0 (S_0 x_91) (S_0 y_16)))))
(assert (forall ((y_16 Nat_0))
	(ge_0 y_16 Z_0)))
(assert (forall ((x_91 Nat_0) (y_16 Nat_0))
	(=> (ge_0 x_91 y_16)
	    (ge_0 (S_0 x_91) (S_0 y_16)))))
(assert (forall ((y_16 Nat_0))
	(lt_0 Z_0 (S_0 y_16))))
(assert (forall ((x_91 Nat_0) (y_16 Nat_0))
	(=> (lt_0 x_91 y_16)
	    (lt_0 (S_0 x_91) (S_0 y_16)))))
(assert (forall ((y_16 Nat_0))
	(gt_0 (S_0 y_16) Z_0)))
(assert (forall ((x_91 Nat_0) (y_16 Nat_0))
	(=> (gt_0 x_91 y_16)
	    (gt_0 (S_0 x_91) (S_0 y_16)))))
(assert (forall ((y_16 Nat_0))
	(mult_0 Z_0 Z_0 y_16)))
(assert (forall ((x_91 Nat_0) (y_16 Nat_0) (r_1 Nat_0) (z_10 Nat_0))
	(=>	(and (mult_0 r_1 x_91 y_16)
			(add_0 z_10 r_1 y_16))
		(mult_0 z_10 (S_0 x_91) y_16))))
(assert (forall ((x_91 Nat_0) (y_16 Nat_0))
	(=> (lt_0 x_91 y_16)
	    (div_0 Z_0 x_91 y_16))))
(assert (forall ((x_91 Nat_0) (y_16 Nat_0) (r_1 Nat_0) (z_10 Nat_0))
	(=>	(and (ge_0 x_91 y_16)
			(minus_0 z_10 x_91 y_16)
			(div_0 r_1 z_10 y_16))
		(div_0 (S_0 r_1) x_91 y_16))))
(assert (forall ((x_91 Nat_0) (y_16 Nat_0))
	(=> (lt_0 x_91 y_16)
	    (mod_0 x_91 x_91 y_16))))
(assert (forall ((x_91 Nat_0) (y_16 Nat_0) (r_1 Nat_0) (z_10 Nat_0))
	(=>	(and (ge_0 x_91 y_16)
			(minus_0 z_10 x_91 y_16)
			(mod_0 r_1 z_10 y_16))
		(mod_0 r_1 x_91 y_16))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Bool)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (Nat_0 pair_0) Bool)
(declare-fun projpair_3 (Bool pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_102 pair_0) (x_100 Nat_0) (x_101 Bool))
	(=> (= x_102 (pair_1 x_100 x_101))
	    (projpair_2 x_100 x_102))))
(assert (forall ((x_102 pair_0) (x_100 Nat_0) (x_101 Bool))
	(=> (= x_102 (pair_1 x_100 x_101))
	    (projpair_3 x_101 x_102))))
(assert (forall ((x_103 Nat_0) (x_104 Bool))
	(ispair_0 (pair_1 x_103 x_104))))
(assert (forall ((x_105 Nat_0) (x_106 Bool) (x_107 Nat_0) (x_108 Bool))
	(=> (diseqNat_0 x_105 x_107)
	    (diseqpair_0 (pair_1 x_105 x_106) (pair_1 x_107 x_108)))))
(assert (forall ((x_105 Nat_0) (x_106 Bool) (x_107 Nat_0) (x_108 Bool))
	(=> (not (= x_106 x_108))
	    (diseqpair_0 (pair_1 x_105 x_106) (pair_1 x_107 x_108)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Bool) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_4 (Bool list_0) Bool)
(declare-fun tail_4 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_112 list_0) (x_110 Bool) (x_111 list_0))
	(=> (= x_112 (cons_0 x_110 x_111))
	    (head_4 x_110 x_112))))
(assert (forall ((x_112 list_0) (x_110 Bool) (x_111 list_0))
	(=> (= x_112 (cons_0 x_110 x_111))
	    (tail_4 x_111 x_112))))
(assert (isnil_0 nil_0))
(assert (forall ((x_113 Bool) (x_114 list_0))
	(iscons_0 (cons_0 x_113 x_114))))
(assert (forall ((x_115 Bool) (x_116 list_0))
	(diseqlist_0 nil_0 (cons_0 x_115 x_116))))
(assert (forall ((x_117 Bool) (x_118 list_0))
	(diseqlist_0 (cons_0 x_117 x_118) nil_0)))
(assert (forall ((x_119 Bool) (x_120 list_0) (x_121 Bool) (x_122 list_0))
	(=> (not (= x_119 x_121))
	    (diseqlist_0 (cons_0 x_119 x_120) (cons_0 x_121 x_122)))))
(assert (forall ((x_119 Bool) (x_120 list_0) (x_121 Bool) (x_122 list_0))
	(=> (diseqlist_0 x_120 x_122)
	    (diseqlist_0 (cons_0 x_119 x_120) (cons_0 x_121 x_122)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 Nat_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_5 (Nat_0 list_1) Bool)
(declare-fun tail_5 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_126 list_1) (x_124 Nat_0) (x_125 list_1))
	(=> (= x_126 (cons_1 x_124 x_125))
	    (head_5 x_124 x_126))))
(assert (forall ((x_126 list_1) (x_124 Nat_0) (x_125 list_1))
	(=> (= x_126 (cons_1 x_124 x_125))
	    (tail_5 x_125 x_126))))
(assert (isnil_1 nil_1))
(assert (forall ((x_127 Nat_0) (x_128 list_1))
	(iscons_1 (cons_1 x_127 x_128))))
(assert (forall ((x_129 Nat_0) (x_130 list_1))
	(diseqlist_1 nil_1 (cons_1 x_129 x_130))))
(assert (forall ((x_131 Nat_0) (x_132 list_1))
	(diseqlist_1 (cons_1 x_131 x_132) nil_1)))
(assert (forall ((x_133 Nat_0) (x_134 list_1) (x_135 Nat_0) (x_136 list_1))
	(=> (diseqNat_0 x_133 x_135)
	    (diseqlist_1 (cons_1 x_133 x_134) (cons_1 x_135 x_136)))))
(assert (forall ((x_133 Nat_0) (x_134 list_1) (x_135 Nat_0) (x_136 list_1))
	(=> (diseqlist_1 x_134 x_136)
	    (diseqlist_1 (cons_1 x_133 x_134) (cons_1 x_135 x_136)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 pair_0) (tail_2 list_2)))))
(declare-fun diseqlist_2 (list_2 list_2) Bool)
(declare-fun head_6 (pair_0 list_2) Bool)
(declare-fun tail_6 (list_2 list_2) Bool)
(declare-fun isnil_2 (list_2) Bool)
(declare-fun iscons_2 (list_2) Bool)
(assert (forall ((x_140 list_2) (x_138 pair_0) (x_139 list_2))
	(=> (= x_140 (cons_2 x_138 x_139))
	    (head_6 x_138 x_140))))
(assert (forall ((x_140 list_2) (x_138 pair_0) (x_139 list_2))
	(=> (= x_140 (cons_2 x_138 x_139))
	    (tail_6 x_139 x_140))))
(assert (isnil_2 nil_2))
(assert (forall ((x_141 pair_0) (x_142 list_2))
	(iscons_2 (cons_2 x_141 x_142))))
(assert (forall ((x_143 pair_0) (x_144 list_2))
	(diseqlist_2 nil_2 (cons_2 x_143 x_144))))
(assert (forall ((x_145 pair_0) (x_146 list_2))
	(diseqlist_2 (cons_2 x_145 x_146) nil_2)))
(assert (forall ((x_147 pair_0) (x_148 list_2) (x_149 pair_0) (x_150 list_2))
	(=> (diseqpair_0 x_147 x_149)
	    (diseqlist_2 (cons_2 x_147 x_148) (cons_2 x_149 x_150)))))
(assert (forall ((x_147 pair_0) (x_148 list_2) (x_149 pair_0) (x_150 list_2))
	(=> (diseqlist_2 x_148 x_150)
	    (diseqlist_2 (cons_2 x_147 x_148) (cons_2 x_149 x_150)))))
(declare-datatypes ((list_3 0)) (((nil_3 ) (cons_3 (head_3 list_2) (tail_3 list_3)))))
(declare-fun diseqlist_3 (list_3 list_3) Bool)
(declare-fun head_7 (list_2 list_3) Bool)
(declare-fun tail_7 (list_3 list_3) Bool)
(declare-fun isnil_3 (list_3) Bool)
(declare-fun iscons_3 (list_3) Bool)
(assert (forall ((x_154 list_3) (x_152 list_2) (x_153 list_3))
	(=> (= x_154 (cons_3 x_152 x_153))
	    (head_7 x_152 x_154))))
(assert (forall ((x_154 list_3) (x_152 list_2) (x_153 list_3))
	(=> (= x_154 (cons_3 x_152 x_153))
	    (tail_7 x_153 x_154))))
(assert (isnil_3 nil_3))
(assert (forall ((x_155 list_2) (x_156 list_3))
	(iscons_3 (cons_3 x_155 x_156))))
(assert (forall ((x_157 list_2) (x_158 list_3))
	(diseqlist_3 nil_3 (cons_3 x_157 x_158))))
(assert (forall ((x_159 list_2) (x_160 list_3))
	(diseqlist_3 (cons_3 x_159 x_160) nil_3)))
(assert (forall ((x_161 list_2) (x_162 list_3) (x_163 list_2) (x_164 list_3))
	(=> (diseqlist_2 x_161 x_163)
	    (diseqlist_3 (cons_3 x_161 x_162) (cons_3 x_163 x_164)))))
(assert (forall ((x_161 list_2) (x_162 list_3) (x_163 list_2) (x_164 list_3))
	(=> (diseqlist_3 x_162 x_164)
	    (diseqlist_3 (cons_3 x_161 x_162) (cons_3 x_163 x_164)))))
(declare-datatypes ((Form_0 0)) (((x_0 (proj_0 Form_0) (proj_1 Form_0)) (Not_0 (projNot_0 Form_0)) (Var_0 (projVar_0 Nat_0)))))
(declare-fun diseqForm_0 (Form_0 Form_0) Bool)
(declare-fun proj_2 (Form_0 Form_0) Bool)
(declare-fun proj_3 (Form_0 Form_0) Bool)
(declare-fun projNot_1 (Form_0 Form_0) Bool)
(declare-fun projVar_1 (Nat_0 Form_0) Bool)
(declare-fun isx_0 (Form_0) Bool)
(declare-fun isNot_0 (Form_0) Bool)
(declare-fun isVar_0 (Form_0) Bool)
(assert (forall ((x_167 Form_0) (x_165 Form_0) (x_166 Form_0))
	(=> (= x_167 (x_0 x_165 x_166))
	    (proj_2 x_165 x_167))))
(assert (forall ((x_167 Form_0) (x_165 Form_0) (x_166 Form_0))
	(=> (= x_167 (x_0 x_165 x_166))
	    (proj_3 x_166 x_167))))
(assert (forall ((x_169 Form_0) (x_168 Form_0))
	(=> (= x_169 (Not_0 x_168))
	    (projNot_1 x_168 x_169))))
(assert (forall ((x_171 Form_0) (x_170 Nat_0))
	(=> (= x_171 (Var_0 x_170))
	    (projVar_1 x_170 x_171))))
(assert (forall ((x_172 Form_0) (x_173 Form_0))
	(isx_0 (x_0 x_172 x_173))))
(assert (forall ((x_174 Form_0))
	(isNot_0 (Not_0 x_174))))
(assert (forall ((x_175 Nat_0))
	(isVar_0 (Var_0 x_175))))
(assert (forall ((x_176 Form_0) (x_177 Form_0) (x_178 Form_0))
	(diseqForm_0 (x_0 x_176 x_177) (Not_0 x_178))))
(assert (forall ((x_179 Form_0) (x_180 Form_0) (x_181 Nat_0))
	(diseqForm_0 (x_0 x_179 x_180) (Var_0 x_181))))
(assert (forall ((x_182 Form_0) (x_183 Form_0) (x_184 Form_0))
	(diseqForm_0 (Not_0 x_182) (x_0 x_183 x_184))))
(assert (forall ((x_185 Nat_0) (x_186 Form_0) (x_187 Form_0))
	(diseqForm_0 (Var_0 x_185) (x_0 x_186 x_187))))
(assert (forall ((x_188 Form_0) (x_189 Nat_0))
	(diseqForm_0 (Not_0 x_188) (Var_0 x_189))))
(assert (forall ((x_190 Nat_0) (x_191 Form_0))
	(diseqForm_0 (Var_0 x_190) (Not_0 x_191))))
(assert (forall ((x_192 Form_0) (x_193 Form_0) (x_194 Form_0) (x_195 Form_0))
	(=> (diseqForm_0 x_192 x_194)
	    (diseqForm_0 (x_0 x_192 x_193) (x_0 x_194 x_195)))))
(assert (forall ((x_192 Form_0) (x_193 Form_0) (x_194 Form_0) (x_195 Form_0))
	(=> (diseqForm_0 x_193 x_195)
	    (diseqForm_0 (x_0 x_192 x_193) (x_0 x_194 x_195)))))
(assert (forall ((x_196 Form_0) (x_197 Form_0))
	(=> (diseqForm_0 x_196 x_197)
	    (diseqForm_0 (Not_0 x_196) (Not_0 x_197)))))
(assert (forall ((x_198 Nat_0) (x_199 Nat_0))
	(=> (diseqNat_0 x_198 x_199)
	    (diseqForm_0 (Var_0 x_198) (Var_0 x_199)))))
(declare-fun or_0 (Bool list_0) Bool)
(assert (forall ((x_1 list_0) (y_0 Bool) (xs_0 list_0) (x_22 Bool) (x_23 Bool))
	(=>	(and (= x_22 (or y_0 x_23))
			(or_0 x_23 xs_0)
			(= x_1 (cons_0 y_0 xs_0)))
		(or_0 x_22 x_1))))
(assert (forall ((x_1 list_0) (x_24 Bool))
	(=>	(and (= x_24 false)
			(= x_1 nil_0))
		(or_0 x_24 x_1))))
(declare-fun okay_0 (list_1 list_2) Bool)
(assert (forall ((x_2 list_2) (y_1 pair_0) (xs_1 list_2) (z_0 Nat_0) (y_2 Bool) (x_25 list_1) (x_26 list_1))
	(=>	(and (= x_25 (cons_1 z_0 x_26))
			(okay_0 x_26 xs_1)
			(= x_2 (cons_2 y_1 xs_1))
			(= y_1 (pair_1 z_0 y_2)))
		(okay_0 x_25 x_2))))
(assert (forall ((x_2 list_2) (x_27 list_1))
	(=>	(and (= x_27 nil_1)
			(= x_2 nil_2))
		(okay_0 x_27 x_2))))
(declare-fun models_0 (list_2 Nat_0 list_2) Bool)
(assert (forall ((x_3 Nat_0) (y_3 list_2) (z_1 pair_0) (xs_2 list_2) (x_4 Nat_0) (y_4 Bool) (x_28 list_2) (x_29 list_2))
	(=>	(and (= x_28 (cons_2 z_1 x_29))
			(models_0 x_29 x_3 xs_2)
			(= y_3 (cons_2 z_1 xs_2))
			(diseqNat_0 x_3 x_4)
			(= z_1 (pair_1 x_4 y_4)))
		(models_0 x_28 x_3 y_3))))
(assert (forall ((x_3 Nat_0) (y_3 list_2) (z_1 pair_0) (xs_2 list_2) (x_4 Nat_0) (y_4 Bool) (x_30 list_2) (x_31 list_2))
	(=>	(and (= x_30 x_31)
			(models_0 x_31 x_3 xs_2)
			(= y_3 (cons_2 z_1 xs_2))
			(= x_3 x_4)
			(= z_1 (pair_1 x_4 y_4)))
		(models_0 x_30 x_3 y_3))))
(assert (forall ((x_3 Nat_0) (y_3 list_2) (x_32 list_2))
	(=>	(and (= x_32 nil_2)
			(= y_3 nil_2))
		(models_0 x_32 x_3 y_3))))
(declare-fun models_1 (list_0 Nat_0 list_2) Bool)
(assert (forall ((x_5 Nat_0) (y_5 list_2) (z_2 pair_0) (x_6 list_2) (y_6 Nat_0) (x_7 Bool) (x_33 list_0) (x_34 list_0))
	(=>	(and (= x_33 x_34)
			(models_1 x_34 x_5 x_6)
			(= y_5 (cons_2 z_2 x_6))
			(= z_2 (pair_1 y_6 x_7))
			x_7)
		(models_1 x_33 x_5 y_5))))
(assert (forall ((x_5 Nat_0) (y_5 list_2) (z_2 pair_0) (x_6 list_2) (y_6 Nat_0) (x_7 Bool) (x_35 list_0) (x_36 list_0))
	(=>	(and (= x_35 (cons_0 (= x_5 y_6) x_36))
			(models_1 x_36 x_5 x_6)
			(= y_5 (cons_2 z_2 x_6))
			(= z_2 (pair_1 y_6 x_7))
			(not x_7))
		(models_1 x_35 x_5 y_5))))
(assert (forall ((x_5 Nat_0) (y_5 list_2) (x_37 list_0))
	(=>	(and (= x_37 nil_0)
			(= y_5 nil_2))
		(models_1 x_37 x_5 y_5))))
(declare-fun models_2 (list_0 Nat_0 list_2) Bool)
(assert (forall ((x_8 Nat_0) (y_7 list_2) (z_3 pair_0) (x_9 list_2) (y_8 Nat_0) (x_10 Bool) (x_38 list_0) (x_39 list_0))
	(=>	(and (= x_38 (cons_0 (= x_8 y_8) x_39))
			(models_2 x_39 x_8 x_9)
			(= y_7 (cons_2 z_3 x_9))
			(= z_3 (pair_1 y_8 x_10))
			x_10)
		(models_2 x_38 x_8 y_7))))
(assert (forall ((x_8 Nat_0) (y_7 list_2) (z_3 pair_0) (x_9 list_2) (y_8 Nat_0) (x_10 Bool) (x_40 list_0) (x_41 list_0))
	(=>	(and (= x_40 x_41)
			(models_2 x_41 x_8 x_9)
			(= y_7 (cons_2 z_3 x_9))
			(= z_3 (pair_1 y_8 x_10))
			(not x_10))
		(models_2 x_40 x_8 y_7))))
(assert (forall ((x_8 Nat_0) (y_7 list_2) (x_42 list_0))
	(=>	(and (= x_42 nil_0)
			(= y_7 nil_2))
		(models_2 x_42 x_8 y_7))))
(declare-fun elem_0 (Bool Nat_0 list_1) Bool)
(assert (forall ((x_11 Nat_0) (y_9 list_1) (z_4 Nat_0) (xs_3 list_1) (x_43 Bool) (x_44 Bool))
	(=>	(and (= x_43 (or (= z_4 x_11) x_44))
			(elem_0 x_44 x_11 xs_3)
			(= y_9 (cons_1 z_4 xs_3)))
		(elem_0 x_43 x_11 y_9))))
(assert (forall ((x_11 Nat_0) (y_9 list_1) (x_45 Bool))
	(=>	(and (= x_45 false)
			(= y_9 nil_1))
		(elem_0 x_45 x_11 y_9))))
(declare-fun okay_1 (Bool list_2) Bool)
(assert (forall ((x_12 list_2) (y_10 pair_0) (m_0 list_2) (z_5 Nat_0) (c_0 Bool) (x_46 Bool) (x_47 list_1) (x_48 Bool) (x_49 Bool))
	(=>	(and (= x_46 (and (not x_48) x_49))
			(okay_0 x_47 m_0)
			(elem_0 x_48 z_5 x_47)
			(okay_1 x_49 m_0)
			(= x_12 (cons_2 y_10 m_0))
			(= y_10 (pair_1 z_5 c_0)))
		(okay_1 x_46 x_12))))
(assert (forall ((x_12 list_2) (x_50 Bool))
	(=>	(and (= x_50 true)
			(= x_12 nil_2))
		(okay_1 x_50 x_12))))
(declare-fun formula_0 (Bool list_3) Bool)
(assert (forall ((x_13 list_3) (y_11 list_2) (xs_4 list_3) (x_51 Bool) (x_52 Bool) (x_53 Bool))
	(=>	(and (= x_51 (and x_52 x_53))
			(okay_1 x_52 y_11)
			(formula_0 x_53 xs_4)
			(= x_13 (cons_3 y_11 xs_4)))
		(formula_0 x_51 x_13))))
(assert (forall ((x_13 list_3) (x_54 Bool))
	(=>	(and (= x_54 true)
			(= x_13 nil_3))
		(formula_0 x_54 x_13))))
(declare-fun x_14 (list_3 list_3 list_3) Bool)
(assert (forall ((x_15 list_3) (y_12 list_3) (z_6 list_2) (xs_5 list_3) (x_55 list_3) (x_56 list_3))
	(=>	(and (= x_55 (cons_3 z_6 x_56))
			(x_14 x_56 xs_5 y_12)
			(= x_15 (cons_3 z_6 xs_5)))
		(x_14 x_55 x_15 y_12))))
(assert (forall ((x_15 list_3) (y_12 list_3) (x_57 list_3))
	(=>	(and (= x_57 y_12)
			(= x_15 nil_3))
		(x_14 x_57 x_15 y_12))))
(declare-fun models_3 (list_3 Form_0 list_2) Bool)
(declare-fun models_4 (list_3 Form_0 list_3) Bool)
(declare-fun models_5 (list_3 list_3 Form_0 list_3) Bool)
(assert (forall ((x_16 Form_0) (y_13 list_2) (x_17 Nat_0) (x_60 list_3) (x_61 list_2) (x_58 list_0) (x_59 Bool))
	(=>	(and (= x_60 (cons_3 (cons_2 (pair_1 x_17 true) x_61) nil_3))
			(models_0 x_61 x_17 y_13)
			(= x_16 (Var_0 x_17))
			(= x_59 false)
			(models_1 x_58 x_17 y_13)
			(or_0 x_59 x_58))
		(models_3 x_60 x_16 y_13))))
(assert (forall ((x_16 Form_0) (y_13 list_2) (x_17 Nat_0) (x_64 list_3) (x_62 list_0) (x_63 Bool))
	(=>	(and (= x_64 nil_3)
			(= x_16 (Var_0 x_17))
			(= x_63 true)
			(models_1 x_62 x_17 y_13)
			(or_0 x_63 x_62))
		(models_3 x_64 x_16 y_13))))
(assert (forall ((x_16 Form_0) (y_13 list_2) (z_7 Form_0) (x_18 Nat_0) (x_67 list_3) (x_68 list_2) (x_65 list_0) (x_66 Bool))
	(=>	(and (= x_67 (cons_3 (cons_2 (pair_1 x_18 false) x_68) nil_3))
			(models_0 x_68 x_18 y_13)
			(= x_16 (Not_0 z_7))
			(= z_7 (Var_0 x_18))
			(= x_66 false)
			(models_2 x_65 x_18 y_13)
			(or_0 x_66 x_65))
		(models_3 x_67 x_16 y_13))))
(assert (forall ((x_16 Form_0) (y_13 list_2) (z_7 Form_0) (x_18 Nat_0) (x_71 list_3) (x_69 list_0) (x_70 Bool))
	(=>	(and (= x_71 nil_3)
			(= x_16 (Not_0 z_7))
			(= z_7 (Var_0 x_18))
			(= x_70 true)
			(models_2 x_69 x_18 y_13)
			(or_0 x_70 x_69))
		(models_3 x_71 x_16 y_13))))
(assert (forall ((x_16 Form_0) (y_13 list_2) (z_7 Form_0) (p_0 Form_0) (x_72 list_3) (x_73 list_3))
	(=>	(and (= x_72 x_73)
			(models_3 x_73 p_0 y_13)
			(= x_16 (Not_0 z_7))
			(= z_7 (Not_0 p_0)))
		(models_3 x_72 x_16 y_13))))
(assert (forall ((x_16 Form_0) (y_13 list_2) (z_7 Form_0) (r_0 Form_0) (q_0 Form_0) (x_74 list_3) (x_75 list_3) (x_76 list_3) (x_77 list_3))
	(=>	(and (= x_74 x_77)
			(models_3 x_75 (Not_0 r_0) y_13)
			(models_3 x_76 (x_0 r_0 (Not_0 q_0)) y_13)
			(x_14 x_77 x_75 x_76)
			(= x_16 (Not_0 z_7))
			(= z_7 (x_0 r_0 q_0)))
		(models_3 x_74 x_16 y_13))))
(assert (forall ((x_16 Form_0) (y_13 list_2) (p_1 Form_0) (q_1 Form_0) (x_78 list_3) (x_79 list_3) (x_80 list_3))
	(=>	(and (= x_78 x_80)
			(models_3 x_79 p_1 y_13)
			(models_4 x_80 q_1 x_79)
			(= x_16 (x_0 p_1 q_1)))
		(models_3 x_78 x_16 y_13))))
(assert (forall ((q_2 Form_0) (x_19 list_3) (y_14 list_2) (z_8 list_3) (x_81 list_3) (x_82 list_3) (x_83 list_3))
	(=>	(and (= x_81 x_83)
			(models_3 x_82 q_2 y_14)
			(models_5 x_83 z_8 q_2 x_82)
			(= x_19 (cons_3 y_14 z_8)))
		(models_4 x_81 q_2 x_19))))
(assert (forall ((q_2 Form_0) (x_19 list_3) (x_84 list_3))
	(=>	(and (= x_84 nil_3)
			(= x_19 nil_3))
		(models_4 x_84 q_2 x_19))))
(assert (forall ((x_20 list_3) (q_3 Form_0) (y_15 list_3) (z_9 list_2) (x_21 list_3) (x_85 list_3) (x_86 list_3))
	(=>	(and (= x_85 (cons_3 z_9 x_86))
			(models_5 x_86 x_20 q_3 x_21)
			(= y_15 (cons_3 z_9 x_21)))
		(models_5 x_85 x_20 q_3 y_15))))
(assert (forall ((x_20 list_3) (q_3 Form_0) (y_15 list_3) (x_87 list_3) (x_88 list_3))
	(=>	(and (= x_87 x_88)
			(models_4 x_88 q_3 x_20)
			(= y_15 nil_3))
		(models_5 x_87 x_20 q_3 y_15))))
(assert (forall ((p_2 Form_0) (x_89 list_3) (x_90 Bool))
	(=>	(and (= x_90 false)
			(models_3 x_89 p_2 nil_2)
			(formula_0 x_90 x_89))
		false)))
(check-sat)
