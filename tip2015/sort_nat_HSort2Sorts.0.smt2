(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_0 ) (S_0 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_48 Nat_1) (x_47 Nat_1))
	(=> (= x_48 (S_0 x_47))
	    (unS_1 x_47 x_48))))
(assert (isZ_0 Z_0))
(assert (forall ((x_49 Nat_1))
	(isS_0 (S_0 x_49))))
(assert (forall ((x_50 Nat_1))
	(diseqNat_0 Z_0 (S_0 x_50))))
(assert (forall ((x_51 Nat_1))
	(diseqNat_0 (S_0 x_51) Z_0)))
(assert (forall ((x_52 Nat_1) (x_53 Nat_1))
	(=> (diseqNat_0 x_52 x_53)
	    (diseqNat_0 (S_0 x_52) (S_0 x_53)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_7 Nat_1))
	(add_0 y_7 Z_0 y_7)))
(assert (forall ((x_45 Nat_1) (y_7 Nat_1) (r_1 Nat_1))
	(=> (add_0 r_1 x_45 y_7)
	    (add_0 (S_0 r_1) (S_0 x_45) y_7))))
(assert (forall ((y_7 Nat_1))
	(minus_0 Z_0 Z_0 y_7)))
(assert (forall ((x_45 Nat_1) (y_7 Nat_1) (r_1 Nat_1))
	(=> (minus_0 r_1 x_45 y_7)
	    (minus_0 (S_0 r_1) (S_0 x_45) y_7))))
(assert (forall ((y_7 Nat_1))
	(le_0 Z_0 y_7)))
(assert (forall ((x_45 Nat_1) (y_7 Nat_1))
	(=> (le_0 x_45 y_7)
	    (le_0 (S_0 x_45) (S_0 y_7)))))
(assert (forall ((y_7 Nat_1))
	(ge_0 y_7 Z_0)))
(assert (forall ((x_45 Nat_1) (y_7 Nat_1))
	(=> (ge_0 x_45 y_7)
	    (ge_0 (S_0 x_45) (S_0 y_7)))))
(assert (forall ((y_7 Nat_1))
	(lt_0 Z_0 (S_0 y_7))))
(assert (forall ((x_45 Nat_1) (y_7 Nat_1))
	(=> (lt_0 x_45 y_7)
	    (lt_0 (S_0 x_45) (S_0 y_7)))))
(assert (forall ((y_7 Nat_1))
	(gt_0 (S_0 y_7) Z_0)))
(assert (forall ((x_45 Nat_1) (y_7 Nat_1))
	(=> (gt_0 x_45 y_7)
	    (gt_0 (S_0 x_45) (S_0 y_7)))))
(assert (forall ((y_7 Nat_1))
	(mult_0 Z_0 Z_0 y_7)))
(assert (forall ((x_45 Nat_1) (y_7 Nat_1) (r_1 Nat_1) (z_3 Nat_1))
	(=>	(and (mult_0 r_1 x_45 y_7)
			(add_0 z_3 r_1 y_7))
		(mult_0 z_3 (S_0 x_45) y_7))))
(assert (forall ((x_45 Nat_1) (y_7 Nat_1))
	(=> (lt_0 x_45 y_7)
	    (div_0 Z_0 x_45 y_7))))
(assert (forall ((x_45 Nat_1) (y_7 Nat_1) (r_1 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_45 y_7)
			(minus_0 z_3 x_45 y_7)
			(div_0 r_1 z_3 y_7))
		(div_0 (S_0 r_1) x_45 y_7))))
(assert (forall ((x_45 Nat_1) (y_7 Nat_1))
	(=> (lt_0 x_45 y_7)
	    (mod_0 x_45 x_45 y_7))))
(assert (forall ((x_45 Nat_1) (y_7 Nat_1) (r_1 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_45 y_7)
			(minus_0 z_3 x_45 y_7)
			(mod_0 r_1 z_3 y_7))
		(mod_0 r_1 x_45 y_7))))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_56 Nat_0) (x_55 Nat_0))
	(=> (= x_56 (succ_0 x_55))
	    (p_1 x_55 x_56))))
(assert (iszero_0 zero_0))
(assert (forall ((x_57 Nat_0))
	(issucc_0 (succ_0 x_57))))
(assert (forall ((x_58 Nat_0))
	(diseqNat_1 zero_0 (succ_0 x_58))))
(assert (forall ((x_59 Nat_0))
	(diseqNat_1 (succ_0 x_59) zero_0)))
(assert (forall ((x_60 Nat_0) (x_61 Nat_0))
	(=> (diseqNat_1 x_60 x_61)
	    (diseqNat_1 (succ_0 x_60) (succ_0 x_61)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_65 list_0) (x_63 Nat_0) (x_64 list_0))
	(=> (= x_65 (cons_0 x_63 x_64))
	    (head_1 x_63 x_65))))
(assert (forall ((x_65 list_0) (x_63 Nat_0) (x_64 list_0))
	(=> (= x_65 (cons_0 x_63 x_64))
	    (tail_1 x_64 x_65))))
(assert (isnil_0 nil_0))
(assert (forall ((x_66 Nat_0) (x_67 list_0))
	(iscons_0 (cons_0 x_66 x_67))))
(assert (forall ((x_68 Nat_0) (x_69 list_0))
	(diseqlist_0 nil_0 (cons_0 x_68 x_69))))
(assert (forall ((x_70 Nat_0) (x_71 list_0))
	(diseqlist_0 (cons_0 x_70 x_71) nil_0)))
(assert (forall ((x_72 Nat_0) (x_73 list_0) (x_74 Nat_0) (x_75 list_0))
	(=> (diseqNat_1 x_72 x_74)
	    (diseqlist_0 (cons_0 x_72 x_73) (cons_0 x_74 x_75)))))
(assert (forall ((x_72 Nat_0) (x_73 list_0) (x_74 Nat_0) (x_75 list_0))
	(=> (diseqlist_0 x_73 x_75)
	    (diseqlist_0 (cons_0 x_72 x_73) (cons_0 x_74 x_75)))))
(declare-datatypes ((Heap_0 0)) (((Node_0 (projNode_0 Heap_0) (projNode_1 Nat_0) (projNode_2 Heap_0)) (Nil_0 ))))
(declare-fun diseqHeap_0 (Heap_0 Heap_0) Bool)
(declare-fun projNode_3 (Heap_0 Heap_0) Bool)
(declare-fun projNode_4 (Nat_0 Heap_0) Bool)
(declare-fun projNode_5 (Heap_0 Heap_0) Bool)
(declare-fun isNode_0 (Heap_0) Bool)
(declare-fun isNil_0 (Heap_0) Bool)
(assert (forall ((x_79 Heap_0) (x_76 Heap_0) (x_77 Nat_0) (x_78 Heap_0))
	(=> (= x_79 (Node_0 x_76 x_77 x_78))
	    (projNode_3 x_76 x_79))))
(assert (forall ((x_79 Heap_0) (x_76 Heap_0) (x_77 Nat_0) (x_78 Heap_0))
	(=> (= x_79 (Node_0 x_76 x_77 x_78))
	    (projNode_4 x_77 x_79))))
(assert (forall ((x_79 Heap_0) (x_76 Heap_0) (x_77 Nat_0) (x_78 Heap_0))
	(=> (= x_79 (Node_0 x_76 x_77 x_78))
	    (projNode_5 x_78 x_79))))
(assert (forall ((x_81 Heap_0) (x_82 Nat_0) (x_83 Heap_0))
	(isNode_0 (Node_0 x_81 x_82 x_83))))
(assert (isNil_0 Nil_0))
(assert (forall ((x_84 Heap_0) (x_85 Nat_0) (x_86 Heap_0))
	(diseqHeap_0 (Node_0 x_84 x_85 x_86) Nil_0)))
(assert (forall ((x_87 Heap_0) (x_88 Nat_0) (x_89 Heap_0))
	(diseqHeap_0 Nil_0 (Node_0 x_87 x_88 x_89))))
(assert (forall ((x_90 Heap_0) (x_91 Nat_0) (x_92 Heap_0) (x_93 Heap_0) (x_94 Nat_0) (x_95 Heap_0))
	(=> (diseqHeap_0 x_90 x_93)
	    (diseqHeap_0 (Node_0 x_90 x_91 x_92) (Node_0 x_93 x_94 x_95)))))
(assert (forall ((x_90 Heap_0) (x_91 Nat_0) (x_92 Heap_0) (x_93 Heap_0) (x_94 Nat_0) (x_95 Heap_0))
	(=> (diseqNat_1 x_91 x_94)
	    (diseqHeap_0 (Node_0 x_90 x_91 x_92) (Node_0 x_93 x_94 x_95)))))
(assert (forall ((x_90 Heap_0) (x_91 Nat_0) (x_92 Heap_0) (x_93 Heap_0) (x_94 Nat_0) (x_95 Heap_0))
	(=> (diseqHeap_0 x_92 x_95)
	    (diseqHeap_0 (Node_0 x_90 x_91 x_92) (Node_0 x_93 x_94 x_95)))))
(declare-fun leq_0 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_1 Nat_0) (x_13 Bool) (x_14 Bool))
	(=>	(and (= x_13 x_14)
			(leq_0 x_14 z_0 x_1)
			(= x_0 (succ_0 z_0))
			(= y_0 (succ_0 x_1)))
		(leq_0 x_13 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_15 Bool))
	(=>	(and (= x_15 false)
			(= x_0 (succ_0 z_0))
			(= y_0 zero_0))
		(leq_0 x_15 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_16 Bool))
	(=>	(and (= x_16 true)
			(= x_0 zero_0))
		(leq_0 x_16 x_0 y_0))))
(declare-fun ordered_0 (Bool list_0) Bool)
(assert (forall ((x_2 list_0) (y_1 Nat_0) (z_1 list_0) (y_2 Nat_0) (xs_0 list_0) (x_17 Bool) (x_18 Bool) (x_19 Bool))
	(=>	(and (= x_17 (and x_18 x_19))
			(leq_0 x_18 y_1 y_2)
			(ordered_0 x_19 (cons_0 y_2 xs_0))
			(= x_2 (cons_0 y_1 z_1))
			(= z_1 (cons_0 y_2 xs_0)))
		(ordered_0 x_17 x_2))))
(assert (forall ((x_2 list_0) (y_1 Nat_0) (z_1 list_0) (x_20 Bool))
	(=>	(and (= x_20 true)
			(= x_2 (cons_0 y_1 z_1))
			(= z_1 nil_0))
		(ordered_0 x_20 x_2))))
(assert (forall ((x_2 list_0) (x_21 Bool))
	(=>	(and (= x_21 true)
			(= x_2 nil_0))
		(ordered_0 x_21 x_2))))
(declare-fun hmerge_0 (Heap_0 Heap_0 Heap_0) Bool)
(assert (forall ((x_3 Heap_0) (y_3 Heap_0) (x_22 Heap_0))
	(=>	(and (= x_22 y_3)
			(= x_3 Nil_0))
		(hmerge_0 x_22 x_3 y_3))))
(assert (forall ((x_3 Heap_0) (y_3 Heap_0) (z_2 Heap_0) (x_4 Nat_0) (x_5 Heap_0) (x_23 Heap_0))
	(=>	(and (= x_23 (Node_0 z_2 x_4 x_5))
			(= x_3 (Node_0 z_2 x_4 x_5))
			(= y_3 Nil_0))
		(hmerge_0 x_23 x_3 y_3))))
(assert (forall ((x_3 Heap_0) (y_3 Heap_0) (z_2 Heap_0) (x_4 Nat_0) (x_5 Heap_0) (x_6 Heap_0) (x_7 Nat_0) (x_8 Heap_0) (x_25 Heap_0) (x_26 Heap_0) (x_24 Bool))
	(=>	(and (= x_25 (Node_0 x_26 x_4 z_2))
			(hmerge_0 x_26 x_5 (Node_0 x_6 x_7 x_8))
			(= x_3 (Node_0 z_2 x_4 x_5))
			(= y_3 (Node_0 x_6 x_7 x_8))
			(= x_24 true)
			(leq_0 x_24 x_4 x_7))
		(hmerge_0 x_25 x_3 y_3))))
(assert (forall ((x_3 Heap_0) (y_3 Heap_0) (z_2 Heap_0) (x_4 Nat_0) (x_5 Heap_0) (x_6 Heap_0) (x_7 Nat_0) (x_8 Heap_0) (x_28 Heap_0) (x_29 Heap_0) (x_27 Bool))
	(=>	(and (= x_28 (Node_0 x_29 x_7 x_6))
			(hmerge_0 x_29 (Node_0 z_2 x_4 x_5) x_8)
			(= x_3 (Node_0 z_2 x_4 x_5))
			(= y_3 (Node_0 x_6 x_7 x_8))
			(= x_27 false)
			(leq_0 x_27 x_4 x_7))
		(hmerge_0 x_28 x_3 y_3))))
(declare-fun toList_0 (list_0 Heap_0) Bool)
(assert (forall ((x_9 Heap_0) (x_30 list_0))
	(=>	(and (= x_30 nil_0)
			(= x_9 Nil_0))
		(toList_0 x_30 x_9))))
(assert (forall ((x_9 Heap_0) (q_0 Heap_0) (y_4 Nat_0) (r_0 Heap_0) (x_31 list_0) (x_32 Heap_0) (x_33 list_0))
	(=>	(and (= x_31 (cons_0 y_4 x_33))
			(hmerge_0 x_32 q_0 r_0)
			(toList_0 x_33 x_32)
			(= x_9 (Node_0 q_0 y_4 r_0)))
		(toList_0 x_31 x_9))))
(declare-fun hinsert_0 (Heap_0 Nat_0 Heap_0) Bool)
(assert (forall ((x_10 Nat_0) (y_5 Heap_0) (x_34 Heap_0) (x_35 Heap_0))
	(=>	(and (= x_34 x_35)
			(hmerge_0 x_35 (Node_0 Nil_0 x_10 Nil_0) y_5))
		(hinsert_0 x_34 x_10 y_5))))
(declare-fun toHeap_0 (Heap_0 list_0) Bool)
(assert (forall ((x_11 list_0) (y_6 Nat_0) (xs_1 list_0) (x_36 Heap_0) (x_37 Heap_0) (x_38 Heap_0))
	(=>	(and (= x_36 x_38)
			(toHeap_0 x_37 xs_1)
			(hinsert_0 x_38 y_6 x_37)
			(= x_11 (cons_0 y_6 xs_1)))
		(toHeap_0 x_36 x_11))))
(assert (forall ((x_11 list_0) (x_39 Heap_0))
	(=>	(and (= x_39 Nil_0)
			(= x_11 nil_0))
		(toHeap_0 x_39 x_11))))
(declare-fun hsort_0 (list_0 list_0) Bool)
(assert (forall ((x_12 list_0) (x_40 list_0) (x_41 Heap_0) (x_42 list_0))
	(=>	(and (= x_40 x_42)
			(toHeap_0 x_41 x_12)
			(toList_0 x_42 x_41))
		(hsort_0 x_40 x_12))))
(assert (forall ((xs_2 list_0) (x_43 list_0) (x_44 Bool))
	(=>	(and (= x_44 false)
			(hsort_0 x_43 xs_2)
			(ordered_0 x_44 x_43))
		false)))
(check-sat)
