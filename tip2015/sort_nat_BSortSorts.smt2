(set-logic HORN)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-fun and_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun leq_0 (Bool_0 Nat_0 Nat_0) Bool)
(declare-fun ordered_0 (Bool_0 list_0) Bool)
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(declare-fun evens_0 (list_0 list_0) Bool)
(declare-fun odds_0 (list_0 list_0) Bool)
(declare-fun x_8 (list_0 list_0 list_0) Bool)
(declare-fun pairs_0 (list_0 list_0 list_0) Bool)
(declare-fun stitch_0 (list_0 list_0 list_0) Bool)
(declare-fun bmerge_0 (list_0 list_0 list_0) Bool)
(declare-fun bsort_0 (list_0 list_0) Bool)
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(assert (and_0 false_0 false_0 false_0))
(assert (and_0 false_0 true_0 false_0))
(assert (and_0 false_0 false_0 true_0))
(assert (and_0 true_0 true_0 true_0))
(assert (forall ((x_26 Bool_0) (x_1 Nat_0) (z_0 Nat_0))
	(=> (leq_0 x_26 z_0 x_1) (leq_0 x_26 (succ_0 z_0) (succ_0 x_1)))))
(assert (forall ((z_0 Nat_0))
	(leq_0 false_0 (succ_0 z_0) zero_0)))
(assert (forall ((y_0 Nat_0))
	(leq_0 true_0 zero_0 y_0)))
(assert (forall ((x_30 Bool_0) (x_31 Bool_0) (x_32 Bool_0) (y_2 Nat_0) (xs_0 list_0) (y_1 Nat_0))
	(=> (and (leq_0 x_31 y_1 y_2) (ordered_0 x_32 (cons_0 y_2 xs_0)) (and_0 x_30 x_31 x_32)) (ordered_0 x_30 (cons_0 y_1 (cons_0 y_2 xs_0))))))
(assert (forall ((y_1 Nat_0))
	(ordered_0 true_0 (cons_0 y_1 nil_0))))
(assert (ordered_0 true_0 nil_0))
(assert (forall ((x_3 Nat_0) (y_3 Nat_0))
	(=> (leq_0 true_0 x_3 y_3) (sort_0 (cons_0 x_3 (cons_0 y_3 nil_0)) x_3 y_3))))
(assert (forall ((x_37 Bool_0) (x_3 Nat_0) (y_3 Nat_0))
	(=> (and (diseqBool_0 x_37 true_0) (leq_0 x_37 x_3 y_3)) (sort_0 (cons_0 y_3 (cons_0 x_3 nil_0)) x_3 y_3))))
(assert (forall ((x_40 list_0) (y_4 Nat_0) (xs_1 list_0))
	(=> (odds_0 x_40 xs_1) (evens_0 (cons_0 y_4 x_40) (cons_0 y_4 xs_1)))))
(assert (evens_0 nil_0 nil_0))
(assert (forall ((x_42 list_0) (y_5 Nat_0) (xs_2 list_0))
	(=> (evens_0 x_42 xs_2) (odds_0 x_42 (cons_0 y_5 xs_2)))))
(assert (odds_0 nil_0 nil_0))
(assert (forall ((x_46 list_0) (z_2 Nat_0) (xs_3 list_0) (y_6 list_0))
	(=> (x_8 x_46 xs_3 y_6) (x_8 (cons_0 z_2 x_46) (cons_0 z_2 xs_3) y_6))))
(assert (forall ((x_47 list_0))
	(x_8 x_47 nil_0 x_47)))
(assert (forall ((x_48 list_0) (x_49 list_0) (x_50 list_0) (x_12 Nat_0) (x_13 list_0) (z_3 Nat_0) (x_11 list_0))
	(=> (and (sort_0 x_49 z_3 x_12) (pairs_0 x_50 x_11 x_13) (x_8 x_48 x_49 x_50)) (pairs_0 x_48 (cons_0 z_3 x_11) (cons_0 x_12 x_13)))))
(assert (forall ((z_3 Nat_0) (x_11 list_0))
	(pairs_0 (cons_0 z_3 x_11) (cons_0 z_3 x_11) nil_0)))
(assert (forall ((x_53 list_0))
	(pairs_0 x_53 nil_0 x_53)))
(assert (forall ((x_55 list_0) (z_4 Nat_0) (xs_4 list_0) (y_8 list_0))
	(=> (pairs_0 x_55 xs_4 y_8) (stitch_0 (cons_0 z_4 x_55) (cons_0 z_4 xs_4) y_8))))
(assert (forall ((x_56 list_0))
	(stitch_0 x_56 nil_0 x_56)))
(assert (forall ((x_57 list_0) (x_58 list_0) (x_59 list_0) (x_60 list_0) (x_61 list_0) (x_62 list_0) (x_21 Nat_0) (x_22 list_0) (fail_0 list_0) (x_17 Nat_0) (x_18 list_0) (z_5 Nat_0))
	(=> (and (evens_0 x_57 (cons_0 z_5 (cons_0 x_21 x_22))) (evens_0 x_58 (cons_0 x_17 x_18)) (bmerge_0 x_59 x_57 x_58) (odds_0 x_60 (cons_0 z_5 (cons_0 x_21 x_22))) (odds_0 x_61 (cons_0 x_17 x_18)) (bmerge_0 x_62 x_60 x_61) (stitch_0 fail_0 x_59 x_62)) (bmerge_0 fail_0 (cons_0 z_5 (cons_0 x_21 x_22)) (cons_0 x_17 x_18)))))
(assert (forall ((x_65 list_0) (x_66 list_0) (x_67 list_0) (x_68 list_0) (x_69 list_0) (x_70 list_0) (x_19 Nat_0) (x_20 list_0) (fail_0 list_0) (x_17 Nat_0) (z_5 Nat_0))
	(=> (and (evens_0 x_65 (cons_0 z_5 nil_0)) (evens_0 x_66 (cons_0 x_17 (cons_0 x_19 x_20))) (bmerge_0 x_67 x_65 x_66) (odds_0 x_68 (cons_0 z_5 nil_0)) (odds_0 x_69 (cons_0 x_17 (cons_0 x_19 x_20))) (bmerge_0 x_70 x_68 x_69) (stitch_0 fail_0 x_67 x_70)) (bmerge_0 fail_0 (cons_0 z_5 nil_0) (cons_0 x_17 (cons_0 x_19 x_20))))))
(assert (forall ((x_80 list_0) (x_73 list_0) (x_74 list_0) (x_75 list_0) (x_76 list_0) (x_77 list_0) (x_78 list_0) (fail_0 list_0) (x_17 Nat_0) (z_5 Nat_0))
	(=> (and (sort_0 x_80 z_5 x_17) (evens_0 x_73 (cons_0 z_5 nil_0)) (evens_0 x_74 (cons_0 x_17 nil_0)) (bmerge_0 x_75 x_73 x_74) (odds_0 x_76 (cons_0 z_5 nil_0)) (odds_0 x_77 (cons_0 x_17 nil_0)) (bmerge_0 x_78 x_76 x_77) (stitch_0 fail_0 x_75 x_78)) (bmerge_0 x_80 (cons_0 z_5 nil_0) (cons_0 x_17 nil_0)))))
(assert (forall ((z_5 Nat_0) (x_16 list_0))
	(bmerge_0 (cons_0 z_5 x_16) (cons_0 z_5 x_16) nil_0)))
(assert (forall ((y_9 list_0))
	(bmerge_0 nil_0 nil_0 y_9)))
(assert (forall ((x_84 list_0) (x_85 list_0) (x_86 list_0) (x_87 list_0) (x_88 list_0) (x_24 Nat_0) (x_25 list_0) (y_10 Nat_0))
	(=> (and (evens_0 x_85 (cons_0 y_10 (cons_0 x_24 x_25))) (bsort_0 x_86 x_85) (odds_0 x_87 (cons_0 y_10 (cons_0 x_24 x_25))) (bsort_0 x_88 x_87) (bmerge_0 x_84 x_86 x_88)) (bsort_0 x_84 (cons_0 y_10 (cons_0 x_24 x_25))))))
(assert (forall ((y_10 Nat_0))
	(bsort_0 (cons_0 y_10 nil_0) (cons_0 y_10 nil_0))))
(assert (bsort_0 nil_0 nil_0))
(assert (forall ((x_92 list_0) (x_93 Bool_0) (xs_5 list_0))
	(=> (and (diseqBool_0 x_93 true_0) (bsort_0 x_92 xs_5) (ordered_0 x_93 x_92)) false)))
(check-sat)
(get-model)
