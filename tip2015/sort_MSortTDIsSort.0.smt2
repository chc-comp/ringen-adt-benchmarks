(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_57 Nat_0) (x_56 Nat_0))
	(=> (= x_57 (S_0 x_56))
	    (unS_1 x_56 x_57))))
(assert (isZ_0 Z_0))
(assert (forall ((x_58 Nat_0))
	(isS_0 (S_0 x_58))))
(assert (forall ((x_59 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_59))))
(assert (forall ((x_60 Nat_0))
	(diseqNat_0 (S_0 x_60) Z_0)))
(assert (forall ((x_61 Nat_0) (x_62 Nat_0))
	(=> (diseqNat_0 x_61 x_62)
	    (diseqNat_0 (S_0 x_61) (S_0 x_62)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_7 Nat_0))
	(add_0 y_7 Z_0 y_7)))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_50 y_7)
	    (add_0 (S_0 r_0) (S_0 x_50) y_7))))
(assert (forall ((y_7 Nat_0))
	(minus_0 Z_0 Z_0 y_7)))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_50 y_7)
	    (minus_0 (S_0 r_0) (S_0 x_50) y_7))))
(assert (forall ((y_7 Nat_0))
	(le_0 Z_0 y_7)))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0))
	(=> (le_0 x_50 y_7)
	    (le_0 (S_0 x_50) (S_0 y_7)))))
(assert (forall ((y_7 Nat_0))
	(ge_0 y_7 Z_0)))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0))
	(=> (ge_0 x_50 y_7)
	    (ge_0 (S_0 x_50) (S_0 y_7)))))
(assert (forall ((y_7 Nat_0))
	(lt_0 Z_0 (S_0 y_7))))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0))
	(=> (lt_0 x_50 y_7)
	    (lt_0 (S_0 x_50) (S_0 y_7)))))
(assert (forall ((y_7 Nat_0))
	(gt_0 (S_0 y_7) Z_0)))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0))
	(=> (gt_0 x_50 y_7)
	    (gt_0 (S_0 x_50) (S_0 y_7)))))
(assert (forall ((y_7 Nat_0))
	(mult_0 Z_0 Z_0 y_7)))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (mult_0 r_0 x_50 y_7)
			(add_0 z_5 r_0 y_7))
		(mult_0 z_5 (S_0 x_50) y_7))))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0))
	(=> (lt_0 x_50 y_7)
	    (div_0 Z_0 x_50 y_7))))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (ge_0 x_50 y_7)
			(minus_0 z_5 x_50 y_7)
			(div_0 r_0 z_5 y_7))
		(div_0 (S_0 r_0) x_50 y_7))))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0))
	(=> (lt_0 x_50 y_7)
	    (mod_0 x_50 x_50 y_7))))
(assert (forall ((x_50 Nat_0) (y_7 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (ge_0 x_50 y_7)
			(minus_0 z_5 x_50 y_7)
			(mod_0 r_0 z_5 y_7))
		(mod_0 r_0 x_50 y_7))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_66 list_0) (x_64 Nat_0) (x_65 list_0))
	(=> (= x_66 (cons_0 x_64 x_65))
	    (head_1 x_64 x_66))))
(assert (forall ((x_66 list_0) (x_64 Nat_0) (x_65 list_0))
	(=> (= x_66 (cons_0 x_64 x_65))
	    (tail_1 x_65 x_66))))
(assert (isnil_0 nil_0))
(assert (forall ((x_67 Nat_0) (x_68 list_0))
	(iscons_0 (cons_0 x_67 x_68))))
(assert (forall ((x_69 Nat_0) (x_70 list_0))
	(diseqlist_0 nil_0 (cons_0 x_69 x_70))))
(assert (forall ((x_71 Nat_0) (x_72 list_0))
	(diseqlist_0 (cons_0 x_71 x_72) nil_0)))
(assert (forall ((x_73 Nat_0) (x_74 list_0) (x_75 Nat_0) (x_76 list_0))
	(=> (diseqNat_0 x_73 x_75)
	    (diseqlist_0 (cons_0 x_73 x_74) (cons_0 x_75 x_76)))))
(assert (forall ((x_73 Nat_0) (x_74 list_0) (x_75 Nat_0) (x_76 list_0))
	(=> (diseqlist_0 x_74 x_76)
	    (diseqlist_0 (cons_0 x_73 x_74) (cons_0 x_75 x_76)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_12 list_0))
	(=>	(and (= x_12 nil_0)
			(le_0 x_0 Z_0))
		(take_0 x_12 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (xs_0 list_0) (x_13 list_0) (x_14 list_0) (x_51 Nat_0))
	(=>	(and (= x_13 (cons_0 z_0 x_14))
			(take_0 x_14 x_51 xs_0)
			(gt_0 x_0 Z_0)
			(= y_0 (cons_0 z_0 xs_0))
			(minus_0 x_51 x_0 (S_0 Z_0)))
		(take_0 x_13 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_15 list_0))
	(=>	(and (= x_15 nil_0)
			(le_0 x_0 Z_0))
		(take_0 x_15 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_16 list_0))
	(=>	(and (= x_16 nil_0)
			(gt_0 x_0 Z_0)
			(= y_0 nil_0))
		(take_0 x_16 x_0 y_0))))
(declare-fun lmerge_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_1 list_0) (y_1 list_0) (z_1 Nat_0) (x_2 list_0) (x_3 Nat_0) (x_4 list_0) (x_17 list_0) (x_18 list_0))
	(=>	(and (= x_17 (cons_0 z_1 x_18))
			(lmerge_0 x_18 x_2 (cons_0 x_3 x_4))
			(= x_1 (cons_0 z_1 x_2))
			(= y_1 (cons_0 x_3 x_4))
			(le_0 z_1 x_3))
		(lmerge_0 x_17 x_1 y_1))))
(assert (forall ((x_1 list_0) (y_1 list_0) (z_1 Nat_0) (x_2 list_0) (x_3 Nat_0) (x_4 list_0) (x_19 list_0) (x_20 list_0))
	(=>	(and (= x_19 (cons_0 x_3 x_20))
			(lmerge_0 x_20 (cons_0 z_1 x_2) x_4)
			(= x_1 (cons_0 z_1 x_2))
			(= y_1 (cons_0 x_3 x_4))
			(gt_0 z_1 x_3))
		(lmerge_0 x_19 x_1 y_1))))
(assert (forall ((x_1 list_0) (y_1 list_0) (z_1 Nat_0) (x_2 list_0) (x_21 list_0))
	(=>	(and (= x_21 (cons_0 z_1 x_2))
			(= x_1 (cons_0 z_1 x_2))
			(= y_1 nil_0))
		(lmerge_0 x_21 x_1 y_1))))
(assert (forall ((x_1 list_0) (y_1 list_0) (x_22 list_0))
	(=>	(and (= x_22 y_1)
			(= x_1 nil_0))
		(lmerge_0 x_22 x_1 y_1))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_5 list_0) (y_2 Nat_0) (l_0 list_0) (x_23 Nat_0) (x_24 Nat_0) (x_52 Nat_0))
	(=>	(and (= x_23 x_52)
			(length_0 x_24 l_0)
			(= x_5 (cons_0 y_2 l_0))
			(add_0 x_52 (S_0 Z_0) x_24))
		(length_0 x_23 x_5))))
(assert (forall ((x_5 list_0) (x_25 Nat_0))
	(=>	(and (= x_25 Z_0)
			(= x_5 nil_0))
		(length_0 x_25 x_5))))
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_6 Nat_0) (y_3 list_0) (z_2 Nat_0) (xs_1 list_0) (x_26 list_0))
	(=>	(and (= x_26 (cons_0 x_6 (cons_0 z_2 xs_1)))
			(= y_3 (cons_0 z_2 xs_1))
			(le_0 x_6 z_2))
		(insert_0 x_26 x_6 y_3))))
(assert (forall ((x_6 Nat_0) (y_3 list_0) (z_2 Nat_0) (xs_1 list_0) (x_27 list_0) (x_28 list_0))
	(=>	(and (= x_27 (cons_0 z_2 x_28))
			(insert_0 x_28 x_6 xs_1)
			(= y_3 (cons_0 z_2 xs_1))
			(gt_0 x_6 z_2))
		(insert_0 x_27 x_6 y_3))))
(assert (forall ((x_6 Nat_0) (y_3 list_0) (x_29 list_0))
	(=>	(and (= x_29 (cons_0 x_6 nil_0))
			(= y_3 nil_0))
		(insert_0 x_29 x_6 y_3))))
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_7 list_0) (y_4 Nat_0) (xs_2 list_0) (x_30 list_0) (x_31 list_0) (x_32 list_0))
	(=>	(and (= x_30 x_32)
			(isort_0 x_31 xs_2)
			(insert_0 x_32 y_4 x_31)
			(= x_7 (cons_0 y_4 xs_2)))
		(isort_0 x_30 x_7))))
(assert (forall ((x_7 list_0) (x_33 list_0))
	(=>	(and (= x_33 nil_0)
			(= x_7 nil_0))
		(isort_0 x_33 x_7))))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_8 Nat_0) (y_5 list_0) (x_34 list_0))
	(=>	(and (= x_34 y_5)
			(le_0 x_8 Z_0))
		(drop_0 x_34 x_8 y_5))))
(assert (forall ((x_8 Nat_0) (y_5 list_0) (z_3 Nat_0) (xs_3 list_0) (x_35 list_0) (x_36 list_0) (x_53 Nat_0))
	(=>	(and (= x_35 x_36)
			(drop_0 x_36 x_53 xs_3)
			(gt_0 x_8 Z_0)
			(= y_5 (cons_0 z_3 xs_3))
			(minus_0 x_53 x_8 (S_0 Z_0)))
		(drop_0 x_35 x_8 y_5))))
(assert (forall ((x_8 Nat_0) (y_5 list_0) (x_37 list_0))
	(=>	(and (= x_37 y_5)
			(le_0 x_8 Z_0))
		(drop_0 x_37 x_8 y_5))))
(assert (forall ((x_8 Nat_0) (y_5 list_0) (x_38 list_0))
	(=>	(and (= x_38 nil_0)
			(gt_0 x_8 Z_0)
			(= y_5 nil_0))
		(drop_0 x_38 x_8 y_5))))
(declare-fun msorttd_0 (list_0 list_0) Bool)
(assert (forall ((x_9 list_0) (y_6 Nat_0) (z_4 list_0) (x_10 Nat_0) (x_11 list_0) (k_0 Nat_0) (x_40 list_0) (x_41 list_0) (x_42 list_0) (x_43 list_0) (x_44 list_0) (x_45 list_0) (x_39 Nat_0) (x_54 Nat_0))
	(=>	(and (= x_40 x_45)
			(take_0 x_41 k_0 (cons_0 y_6 (cons_0 x_10 x_11)))
			(msorttd_0 x_42 x_41)
			(drop_0 x_43 k_0 (cons_0 y_6 (cons_0 x_10 x_11)))
			(msorttd_0 x_44 x_43)
			(lmerge_0 x_45 x_42 x_44)
			(= x_9 (cons_0 y_6 z_4))
			(= z_4 (cons_0 x_10 x_11))
			(= k_0 x_54)
			(length_0 x_39 (cons_0 y_6 (cons_0 x_10 x_11)))
			(div_0 x_54 x_39 (S_0 (S_0 Z_0))))
		(msorttd_0 x_40 x_9))))
(assert (forall ((x_9 list_0) (y_6 Nat_0) (z_4 list_0) (x_46 list_0))
	(=>	(and (= x_46 (cons_0 y_6 nil_0))
			(= x_9 (cons_0 y_6 z_4))
			(= z_4 nil_0))
		(msorttd_0 x_46 x_9))))
(assert (forall ((x_9 list_0) (x_47 list_0))
	(=>	(and (= x_47 nil_0)
			(= x_9 nil_0))
		(msorttd_0 x_47 x_9))))
(assert (forall ((xs_4 list_0) (x_48 list_0) (x_49 list_0))
	(=>	(and (diseqlist_0 x_48 x_49)
			(msorttd_0 x_48 xs_4)
			(isort_0 x_49 xs_4))
		false)))
(check-sat)
