(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_28 Nat_0) (x_27 Nat_0))
	(=> (= x_28 (S_0 x_27))
	    (unS_1 x_27 x_28))))
(assert (isZ_0 Z_0))
(assert (forall ((x_29 Nat_0))
	(isS_0 (S_0 x_29))))
(assert (forall ((x_30 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_30))))
(assert (forall ((x_31 Nat_0))
	(diseqNat_0 (S_0 x_31) Z_0)))
(assert (forall ((x_32 Nat_0) (x_33 Nat_0))
	(=> (diseqNat_0 x_32 x_33)
	    (diseqNat_0 (S_0 x_32) (S_0 x_33)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_4 Nat_0))
	(add_0 y_4 Z_0 y_4)))
(assert (forall ((x_25 Nat_0) (y_4 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_25 y_4)
	    (add_0 (S_0 r_0) (S_0 x_25) y_4))))
(assert (forall ((y_4 Nat_0))
	(minus_0 Z_0 Z_0 y_4)))
(assert (forall ((x_25 Nat_0) (y_4 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_25 y_4)
	    (minus_0 (S_0 r_0) (S_0 x_25) y_4))))
(assert (forall ((y_4 Nat_0))
	(le_0 Z_0 y_4)))
(assert (forall ((x_25 Nat_0) (y_4 Nat_0))
	(=> (le_0 x_25 y_4)
	    (le_0 (S_0 x_25) (S_0 y_4)))))
(assert (forall ((y_4 Nat_0))
	(ge_0 y_4 Z_0)))
(assert (forall ((x_25 Nat_0) (y_4 Nat_0))
	(=> (ge_0 x_25 y_4)
	    (ge_0 (S_0 x_25) (S_0 y_4)))))
(assert (forall ((y_4 Nat_0))
	(lt_0 Z_0 (S_0 y_4))))
(assert (forall ((x_25 Nat_0) (y_4 Nat_0))
	(=> (lt_0 x_25 y_4)
	    (lt_0 (S_0 x_25) (S_0 y_4)))))
(assert (forall ((y_4 Nat_0))
	(gt_0 (S_0 y_4) Z_0)))
(assert (forall ((x_25 Nat_0) (y_4 Nat_0))
	(=> (gt_0 x_25 y_4)
	    (gt_0 (S_0 x_25) (S_0 y_4)))))
(assert (forall ((y_4 Nat_0))
	(mult_0 Z_0 Z_0 y_4)))
(assert (forall ((x_25 Nat_0) (y_4 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (mult_0 r_0 x_25 y_4)
			(add_0 z_2 r_0 y_4))
		(mult_0 z_2 (S_0 x_25) y_4))))
(assert (forall ((x_25 Nat_0) (y_4 Nat_0))
	(=> (lt_0 x_25 y_4)
	    (div_0 Z_0 x_25 y_4))))
(assert (forall ((x_25 Nat_0) (y_4 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (ge_0 x_25 y_4)
			(minus_0 z_2 x_25 y_4)
			(div_0 r_0 z_2 y_4))
		(div_0 (S_0 r_0) x_25 y_4))))
(assert (forall ((x_25 Nat_0) (y_4 Nat_0))
	(=> (lt_0 x_25 y_4)
	    (mod_0 x_25 x_25 y_4))))
(assert (forall ((x_25 Nat_0) (y_4 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (ge_0 x_25 y_4)
			(minus_0 z_2 x_25 y_4)
			(mod_0 r_0 z_2 y_4))
		(mod_0 r_0 x_25 y_4))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_37 list_0) (x_35 Nat_0) (x_36 list_0))
	(=> (= x_37 (cons_0 x_35 x_36))
	    (head_1 x_35 x_37))))
(assert (forall ((x_37 list_0) (x_35 Nat_0) (x_36 list_0))
	(=> (= x_37 (cons_0 x_35 x_36))
	    (tail_1 x_36 x_37))))
(assert (isnil_0 nil_0))
(assert (forall ((x_38 Nat_0) (x_39 list_0))
	(iscons_0 (cons_0 x_38 x_39))))
(assert (forall ((x_40 Nat_0) (x_41 list_0))
	(diseqlist_0 nil_0 (cons_0 x_40 x_41))))
(assert (forall ((x_42 Nat_0) (x_43 list_0))
	(diseqlist_0 (cons_0 x_42 x_43) nil_0)))
(assert (forall ((x_44 Nat_0) (x_45 list_0) (x_46 Nat_0) (x_47 list_0))
	(=> (diseqNat_0 x_44 x_46)
	    (diseqlist_0 (cons_0 x_44 x_45) (cons_0 x_46 x_47)))))
(assert (forall ((x_44 Nat_0) (x_45 list_0) (x_46 Nat_0) (x_47 list_0))
	(=> (diseqlist_0 x_45 x_47)
	    (diseqlist_0 (cons_0 x_44 x_45) (cons_0 x_46 x_47)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Bool) (projpair_1 list_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (Bool pair_0) Bool)
(declare-fun projpair_3 (list_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_50 pair_0) (x_48 Bool) (x_49 list_0))
	(=> (= x_50 (pair_1 x_48 x_49))
	    (projpair_2 x_48 x_50))))
(assert (forall ((x_50 pair_0) (x_48 Bool) (x_49 list_0))
	(=> (= x_50 (pair_1 x_48 x_49))
	    (projpair_3 x_49 x_50))))
(assert (forall ((x_51 Bool) (x_52 list_0))
	(ispair_0 (pair_1 x_51 x_52))))
(assert (forall ((x_53 Bool) (x_54 list_0) (x_55 Bool) (x_56 list_0))
	(=> (not (= x_53 x_55))
	    (diseqpair_0 (pair_1 x_53 x_54) (pair_1 x_55 x_56)))))
(assert (forall ((x_53 Bool) (x_54 list_0) (x_55 Bool) (x_56 list_0))
	(=> (diseqlist_0 x_54 x_56)
	    (diseqpair_0 (pair_1 x_53 x_54) (pair_1 x_55 x_56)))))
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (xs_0 list_0) (x_4 list_0))
	(=>	(and (= x_4 (cons_0 x_0 (cons_0 z_0 xs_0)))
			(= y_0 (cons_0 z_0 xs_0))
			(le_0 x_0 z_0))
		(insert_0 x_4 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (xs_0 list_0) (x_5 list_0) (x_6 list_0))
	(=>	(and (= x_5 (cons_0 z_0 x_6))
			(insert_0 x_6 x_0 xs_0)
			(= y_0 (cons_0 z_0 xs_0))
			(gt_0 x_0 z_0))
		(insert_0 x_5 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_7 list_0))
	(=>	(and (= x_7 (cons_0 x_0 nil_0))
			(= y_0 nil_0))
		(insert_0 x_7 x_0 y_0))))
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_1 list_0) (y_1 Nat_0) (xs_1 list_0) (x_8 list_0) (x_9 list_0) (x_10 list_0))
	(=>	(and (= x_8 x_10)
			(isort_0 x_9 xs_1)
			(insert_0 x_10 y_1 x_9)
			(= x_1 (cons_0 y_1 xs_1)))
		(isort_0 x_8 x_1))))
(assert (forall ((x_1 list_0) (x_11 list_0))
	(=>	(and (= x_11 nil_0)
			(= x_1 nil_0))
		(isort_0 x_11 x_1))))
(declare-fun bubble_0 (pair_0 list_0) Bool)
(assert (forall ((x_2 list_0) (y_2 Nat_0) (z_1 list_0) (y_3 Nat_0) (xs_2 list_0) (b_0 Bool) (ys_0 list_0) (x_13 pair_0) (x_12 pair_0))
	(=>	(and (= x_13 (pair_1 b_0 (cons_0 y_2 ys_0)))
			(= x_2 (cons_0 y_2 z_1))
			(= z_1 (cons_0 y_3 xs_2))
			(le_0 y_2 y_3)
			(= x_12 (pair_1 b_0 ys_0))
			(bubble_0 x_12 (cons_0 y_3 xs_2)))
		(bubble_0 x_13 x_2))))
(assert (forall ((x_2 list_0) (y_2 Nat_0) (z_1 list_0) (y_3 Nat_0) (xs_2 list_0) (b_1 Bool) (ys_1 list_0) (x_15 pair_0) (x_14 pair_0))
	(=>	(and (= x_15 (pair_1 true (cons_0 y_3 ys_1)))
			(= x_2 (cons_0 y_2 z_1))
			(= z_1 (cons_0 y_3 xs_2))
			(gt_0 y_2 y_3)
			(= x_14 (pair_1 b_1 ys_1))
			(bubble_0 x_14 (cons_0 y_2 xs_2)))
		(bubble_0 x_15 x_2))))
(assert (forall ((x_2 list_0) (y_2 Nat_0) (z_1 list_0) (x_16 pair_0))
	(=>	(and (= x_16 (pair_1 false (cons_0 y_2 nil_0)))
			(= x_2 (cons_0 y_2 z_1))
			(= z_1 nil_0))
		(bubble_0 x_16 x_2))))
(assert (forall ((x_2 list_0) (x_17 pair_0))
	(=>	(and (= x_17 (pair_1 false nil_0))
			(= x_2 nil_0))
		(bubble_0 x_17 x_2))))
(declare-fun bubsort_0 (list_0 list_0) Bool)
(assert (forall ((x_3 list_0) (c_0 Bool) (ys_2 list_0) (x_19 list_0) (x_20 list_0) (x_18 pair_0))
	(=>	(and (= x_19 x_20)
			(bubsort_0 x_20 ys_2)
			(= x_18 (pair_1 c_0 ys_2))
			c_0
			(bubble_0 x_18 x_3))
		(bubsort_0 x_19 x_3))))
(assert (forall ((x_3 list_0) (c_0 Bool) (ys_2 list_0) (x_22 list_0) (x_21 pair_0))
	(=>	(and (= x_22 x_3)
			(= x_21 (pair_1 c_0 ys_2))
			(not c_0)
			(bubble_0 x_21 x_3))
		(bubsort_0 x_22 x_3))))
(assert (forall ((xs_3 list_0) (x_23 list_0) (x_24 list_0))
	(=>	(and (diseqlist_0 x_23 x_24)
			(bubsort_0 x_23 xs_3)
			(isort_0 x_24 xs_3))
		false)))
(check-sat)
