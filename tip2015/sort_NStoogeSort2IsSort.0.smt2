(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_96 Nat_0) (x_95 Nat_0))
	(=> (= x_96 (S_0 x_95))
	    (unS_1 x_95 x_96))))
(assert (isZ_0 Z_0))
(assert (forall ((x_97 Nat_0))
	(isS_0 (S_0 x_97))))
(assert (forall ((x_98 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_98))))
(assert (forall ((x_99 Nat_0))
	(diseqNat_0 (S_0 x_99) Z_0)))
(assert (forall ((x_100 Nat_0) (x_101 Nat_0))
	(=> (diseqNat_0 x_100 x_101)
	    (diseqNat_0 (S_0 x_100) (S_0 x_101)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_10 Nat_0))
	(add_0 y_10 Z_0 y_10)))
(assert (forall ((x_86 Nat_0) (y_10 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_86 y_10)
	    (add_0 (S_0 r_0) (S_0 x_86) y_10))))
(assert (forall ((y_10 Nat_0))
	(minus_0 Z_0 Z_0 y_10)))
(assert (forall ((x_86 Nat_0) (y_10 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_86 y_10)
	    (minus_0 (S_0 r_0) (S_0 x_86) y_10))))
(assert (forall ((y_10 Nat_0))
	(le_0 Z_0 y_10)))
(assert (forall ((x_86 Nat_0) (y_10 Nat_0))
	(=> (le_0 x_86 y_10)
	    (le_0 (S_0 x_86) (S_0 y_10)))))
(assert (forall ((y_10 Nat_0))
	(ge_0 y_10 Z_0)))
(assert (forall ((x_86 Nat_0) (y_10 Nat_0))
	(=> (ge_0 x_86 y_10)
	    (ge_0 (S_0 x_86) (S_0 y_10)))))
(assert (forall ((y_10 Nat_0))
	(lt_0 Z_0 (S_0 y_10))))
(assert (forall ((x_86 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_86 y_10)
	    (lt_0 (S_0 x_86) (S_0 y_10)))))
(assert (forall ((y_10 Nat_0))
	(gt_0 (S_0 y_10) Z_0)))
(assert (forall ((x_86 Nat_0) (y_10 Nat_0))
	(=> (gt_0 x_86 y_10)
	    (gt_0 (S_0 x_86) (S_0 y_10)))))
(assert (forall ((y_10 Nat_0))
	(mult_0 Z_0 Z_0 y_10)))
(assert (forall ((x_86 Nat_0) (y_10 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (mult_0 r_0 x_86 y_10)
			(add_0 z_5 r_0 y_10))
		(mult_0 z_5 (S_0 x_86) y_10))))
(assert (forall ((x_86 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_86 y_10)
	    (div_0 Z_0 x_86 y_10))))
(assert (forall ((x_86 Nat_0) (y_10 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (ge_0 x_86 y_10)
			(minus_0 z_5 x_86 y_10)
			(div_0 r_0 z_5 y_10))
		(div_0 (S_0 r_0) x_86 y_10))))
(assert (forall ((x_86 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_86 y_10)
	    (mod_0 x_86 x_86 y_10))))
(assert (forall ((x_86 Nat_0) (y_10 Nat_0) (r_0 Nat_0) (z_5 Nat_0))
	(=>	(and (ge_0 x_86 y_10)
			(minus_0 z_5 x_86 y_10)
			(mod_0 r_0 z_5 y_10))
		(mod_0 r_0 x_86 y_10))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_105 list_0) (x_103 Nat_0) (x_104 list_0))
	(=> (= x_105 (cons_0 x_103 x_104))
	    (head_1 x_103 x_105))))
(assert (forall ((x_105 list_0) (x_103 Nat_0) (x_104 list_0))
	(=> (= x_105 (cons_0 x_103 x_104))
	    (tail_1 x_104 x_105))))
(assert (isnil_0 nil_0))
(assert (forall ((x_106 Nat_0) (x_107 list_0))
	(iscons_0 (cons_0 x_106 x_107))))
(assert (forall ((x_108 Nat_0) (x_109 list_0))
	(diseqlist_0 nil_0 (cons_0 x_108 x_109))))
(assert (forall ((x_110 Nat_0) (x_111 list_0))
	(diseqlist_0 (cons_0 x_110 x_111) nil_0)))
(assert (forall ((x_112 Nat_0) (x_113 list_0) (x_114 Nat_0) (x_115 list_0))
	(=> (diseqNat_0 x_112 x_114)
	    (diseqlist_0 (cons_0 x_112 x_113) (cons_0 x_114 x_115)))))
(assert (forall ((x_112 Nat_0) (x_113 list_0) (x_114 Nat_0) (x_115 list_0))
	(=> (diseqlist_0 x_113 x_115)
	    (diseqlist_0 (cons_0 x_112 x_113) (cons_0 x_114 x_115)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 list_0) (projpair_1 list_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (list_0 pair_0) Bool)
(declare-fun projpair_3 (list_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_118 pair_0) (x_116 list_0) (x_117 list_0))
	(=> (= x_118 (pair_1 x_116 x_117))
	    (projpair_2 x_116 x_118))))
(assert (forall ((x_118 pair_0) (x_116 list_0) (x_117 list_0))
	(=> (= x_118 (pair_1 x_116 x_117))
	    (projpair_3 x_117 x_118))))
(assert (forall ((x_119 list_0) (x_120 list_0))
	(ispair_0 (pair_1 x_119 x_120))))
(assert (forall ((x_121 list_0) (x_122 list_0) (x_123 list_0) (x_124 list_0))
	(=> (diseqlist_0 x_121 x_123)
	    (diseqpair_0 (pair_1 x_121 x_122) (pair_1 x_123 x_124)))))
(assert (forall ((x_121 list_0) (x_122 list_0) (x_123 list_0) (x_124 list_0))
	(=> (diseqlist_0 x_122 x_124)
	    (diseqpair_0 (pair_1 x_121 x_122) (pair_1 x_123 x_124)))))
(declare-fun twoThirds_0 (Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (x_17 Nat_0))
	(=>	(and (= x_17 (S_0 Z_0))
			(= x_0 (S_0 (S_0 Z_0))))
		(twoThirds_0 x_17 x_0))))
(assert (forall ((x_0 Nat_0) (x_18 Nat_0))
	(=>	(and (= x_18 (S_0 Z_0))
			(diseqNat_0 x_0 (S_0 (S_0 Z_0)))
			(= x_0 (S_0 Z_0)))
		(twoThirds_0 x_18 x_0))))
(assert (forall ((x_0 Nat_0) (x_19 Nat_0))
	(=>	(and (= x_19 (S_0 Z_0))
			(= x_0 (S_0 (S_0 Z_0))))
		(twoThirds_0 x_19 x_0))))
(assert (forall ((x_0 Nat_0) (x_20 Nat_0))
	(=>	(and (= x_20 Z_0)
			(diseqNat_0 x_0 (S_0 (S_0 Z_0)))
			(diseqNat_0 x_0 (S_0 Z_0))
			(= x_0 Z_0))
		(twoThirds_0 x_20 x_0))))
(assert (forall ((x_0 Nat_0) (x_21 Nat_0))
	(=>	(and (= x_21 (S_0 Z_0))
			(= x_0 (S_0 (S_0 Z_0))))
		(twoThirds_0 x_21 x_0))))
(assert (forall ((x_0 Nat_0) (x_22 Nat_0))
	(=>	(and (= x_22 (S_0 Z_0))
			(diseqNat_0 x_0 (S_0 (S_0 Z_0)))
			(= x_0 (S_0 Z_0)))
		(twoThirds_0 x_22 x_0))))
(assert (forall ((x_0 Nat_0) (x_23 Nat_0))
	(=>	(and (= x_23 (S_0 Z_0))
			(= x_0 (S_0 (S_0 Z_0))))
		(twoThirds_0 x_23 x_0))))
(assert (forall ((x_0 Nat_0) (x_24 Nat_0) (x_25 Nat_0) (x_87 Nat_0) (x_88 Nat_0))
	(=>	(and (= x_24 x_87)
			(twoThirds_0 x_25 x_88)
			(diseqNat_0 x_0 (S_0 (S_0 Z_0)))
			(diseqNat_0 x_0 (S_0 Z_0))
			(diseqNat_0 x_0 Z_0)
			(add_0 x_87 (S_0 (S_0 Z_0)) x_25)
			(minus_0 x_88 x_0 (S_0 (S_0 (S_0 Z_0)))))
		(twoThirds_0 x_24 x_0))))
(declare-fun third_0 (Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (x_26 Nat_0))
	(=>	(and (= x_26 Z_0)
			(= x_1 (S_0 (S_0 Z_0))))
		(third_0 x_26 x_1))))
(assert (forall ((x_1 Nat_0) (x_27 Nat_0))
	(=>	(and (= x_27 Z_0)
			(diseqNat_0 x_1 (S_0 (S_0 Z_0)))
			(= x_1 (S_0 Z_0)))
		(third_0 x_27 x_1))))
(assert (forall ((x_1 Nat_0) (x_28 Nat_0))
	(=>	(and (= x_28 Z_0)
			(= x_1 (S_0 (S_0 Z_0))))
		(third_0 x_28 x_1))))
(assert (forall ((x_1 Nat_0) (x_29 Nat_0))
	(=>	(and (= x_29 Z_0)
			(diseqNat_0 x_1 (S_0 (S_0 Z_0)))
			(diseqNat_0 x_1 (S_0 Z_0))
			(= x_1 Z_0))
		(third_0 x_29 x_1))))
(assert (forall ((x_1 Nat_0) (x_30 Nat_0))
	(=>	(and (= x_30 Z_0)
			(= x_1 (S_0 (S_0 Z_0))))
		(third_0 x_30 x_1))))
(assert (forall ((x_1 Nat_0) (x_31 Nat_0))
	(=>	(and (= x_31 Z_0)
			(diseqNat_0 x_1 (S_0 (S_0 Z_0)))
			(= x_1 (S_0 Z_0)))
		(third_0 x_31 x_1))))
(assert (forall ((x_1 Nat_0) (x_32 Nat_0))
	(=>	(and (= x_32 Z_0)
			(= x_1 (S_0 (S_0 Z_0))))
		(third_0 x_32 x_1))))
(assert (forall ((x_1 Nat_0) (x_33 Nat_0) (x_34 Nat_0) (x_89 Nat_0) (x_90 Nat_0))
	(=>	(and (= x_33 x_89)
			(third_0 x_34 x_90)
			(diseqNat_0 x_1 (S_0 (S_0 Z_0)))
			(diseqNat_0 x_1 (S_0 Z_0))
			(diseqNat_0 x_1 Z_0)
			(add_0 x_89 (S_0 Z_0) x_34)
			(minus_0 x_90 x_1 (S_0 (S_0 (S_0 Z_0)))))
		(third_0 x_33 x_1))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_2 Nat_0) (y_0 list_0) (x_35 list_0))
	(=>	(and (= x_35 nil_0)
			(le_0 x_2 Z_0))
		(take_0 x_35 x_2 y_0))))
(assert (forall ((x_2 Nat_0) (y_0 list_0) (z_0 Nat_0) (xs_0 list_0) (x_36 list_0) (x_37 list_0) (x_91 Nat_0))
	(=>	(and (= x_36 (cons_0 z_0 x_37))
			(take_0 x_37 x_91 xs_0)
			(gt_0 x_2 Z_0)
			(= y_0 (cons_0 z_0 xs_0))
			(minus_0 x_91 x_2 (S_0 Z_0)))
		(take_0 x_36 x_2 y_0))))
(assert (forall ((x_2 Nat_0) (y_0 list_0) (x_38 list_0))
	(=>	(and (= x_38 nil_0)
			(le_0 x_2 Z_0))
		(take_0 x_38 x_2 y_0))))
(assert (forall ((x_2 Nat_0) (y_0 list_0) (x_39 list_0))
	(=>	(and (= x_39 nil_0)
			(gt_0 x_2 Z_0)
			(= y_0 nil_0))
		(take_0 x_39 x_2 y_0))))
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_3 Nat_0) (y_1 Nat_0) (x_40 list_0))
	(=>	(and (= x_40 (cons_0 x_3 (cons_0 y_1 nil_0)))
			(le_0 x_3 y_1))
		(sort_0 x_40 x_3 y_1))))
(assert (forall ((x_3 Nat_0) (y_1 Nat_0) (x_41 list_0))
	(=>	(and (= x_41 (cons_0 y_1 (cons_0 x_3 nil_0)))
			(gt_0 x_3 y_1))
		(sort_0 x_41 x_3 y_1))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_4 list_0) (y_2 Nat_0) (l_0 list_0) (x_42 Nat_0) (x_43 Nat_0) (x_92 Nat_0))
	(=>	(and (= x_42 x_92)
			(length_0 x_43 l_0)
			(= x_4 (cons_0 y_2 l_0))
			(add_0 x_92 (S_0 Z_0) x_43))
		(length_0 x_42 x_4))))
(assert (forall ((x_4 list_0) (x_44 Nat_0))
	(=>	(and (= x_44 Z_0)
			(= x_4 nil_0))
		(length_0 x_44 x_4))))
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_5 Nat_0) (y_3 list_0) (z_1 Nat_0) (xs_1 list_0) (x_45 list_0))
	(=>	(and (= x_45 (cons_0 x_5 (cons_0 z_1 xs_1)))
			(= y_3 (cons_0 z_1 xs_1))
			(le_0 x_5 z_1))
		(insert_0 x_45 x_5 y_3))))
(assert (forall ((x_5 Nat_0) (y_3 list_0) (z_1 Nat_0) (xs_1 list_0) (x_46 list_0) (x_47 list_0))
	(=>	(and (= x_46 (cons_0 z_1 x_47))
			(insert_0 x_47 x_5 xs_1)
			(= y_3 (cons_0 z_1 xs_1))
			(gt_0 x_5 z_1))
		(insert_0 x_46 x_5 y_3))))
(assert (forall ((x_5 Nat_0) (y_3 list_0) (x_48 list_0))
	(=>	(and (= x_48 (cons_0 x_5 nil_0))
			(= y_3 nil_0))
		(insert_0 x_48 x_5 y_3))))
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_6 list_0) (y_4 Nat_0) (xs_2 list_0) (x_49 list_0) (x_50 list_0) (x_51 list_0))
	(=>	(and (= x_49 x_51)
			(isort_0 x_50 xs_2)
			(insert_0 x_51 y_4 x_50)
			(= x_6 (cons_0 y_4 xs_2)))
		(isort_0 x_49 x_6))))
(assert (forall ((x_6 list_0) (x_52 list_0))
	(=>	(and (= x_52 nil_0)
			(= x_6 nil_0))
		(isort_0 x_52 x_6))))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_7 Nat_0) (y_5 list_0) (x_53 list_0))
	(=>	(and (= x_53 y_5)
			(le_0 x_7 Z_0))
		(drop_0 x_53 x_7 y_5))))
(assert (forall ((x_7 Nat_0) (y_5 list_0) (z_2 Nat_0) (xs_3 list_0) (x_54 list_0) (x_55 list_0) (x_93 Nat_0))
	(=>	(and (= x_54 x_55)
			(drop_0 x_55 x_93 xs_3)
			(gt_0 x_7 Z_0)
			(= y_5 (cons_0 z_2 xs_3))
			(minus_0 x_93 x_7 (S_0 Z_0)))
		(drop_0 x_54 x_7 y_5))))
(assert (forall ((x_7 Nat_0) (y_5 list_0) (x_56 list_0))
	(=>	(and (= x_56 y_5)
			(le_0 x_7 Z_0))
		(drop_0 x_56 x_7 y_5))))
(assert (forall ((x_7 Nat_0) (y_5 list_0) (x_57 list_0))
	(=>	(and (= x_57 nil_0)
			(gt_0 x_7 Z_0)
			(= y_5 nil_0))
		(drop_0 x_57 x_7 y_5))))
(declare-fun splitAt_0 (pair_0 Nat_0 list_0) Bool)
(assert (forall ((x_8 Nat_0) (y_6 list_0) (x_58 pair_0) (x_59 list_0) (x_60 list_0))
	(=>	(and (= x_58 (pair_1 x_59 x_60))
			(take_0 x_59 x_8 y_6)
			(drop_0 x_60 x_8 y_6))
		(splitAt_0 x_58 x_8 y_6))))
(declare-fun x_9 (list_0 list_0 list_0) Bool)
(assert (forall ((x_10 list_0) (y_7 list_0) (z_3 Nat_0) (xs_4 list_0) (x_61 list_0) (x_62 list_0))
	(=>	(and (= x_61 (cons_0 z_3 x_62))
			(x_9 x_62 xs_4 y_7)
			(= x_10 (cons_0 z_3 xs_4)))
		(x_9 x_61 x_10 y_7))))
(assert (forall ((x_10 list_0) (y_7 list_0) (x_63 list_0))
	(=>	(and (= x_63 y_7)
			(= x_10 nil_0))
		(x_9 x_63 x_10 y_7))))
(declare-fun nstoogesort_0 (list_0 list_0) Bool)
(declare-fun nstoogesort_1 (list_0 list_0) Bool)
(declare-fun nstoogesort_2 (list_0 list_0) Bool)
(assert (forall ((x_11 list_0) (ys_0 list_0) (zs_0 list_0) (x_67 list_0) (x_68 list_0) (x_69 list_0) (x_64 Nat_0) (x_65 Nat_0) (x_66 pair_0))
	(=>	(and (= x_67 x_69)
			(nstoogesort_1 x_68 ys_0)
			(x_9 x_69 x_68 zs_0)
			(= x_66 (pair_1 ys_0 zs_0))
			(length_0 x_64 x_11)
			(twoThirds_0 x_65 x_64)
			(splitAt_0 x_66 x_65 x_11))
		(nstoogesort_0 x_67 x_11))))
(assert (forall ((x_12 list_0) (y_8 Nat_0) (z_4 list_0) (y_9 Nat_0) (x_13 list_0) (x_14 Nat_0) (x_15 list_0) (x_70 list_0) (x_71 list_0) (x_72 list_0) (x_73 list_0))
	(=>	(and (= x_70 x_73)
			(nstoogesort_0 x_71 (cons_0 y_8 (cons_0 y_9 (cons_0 x_14 x_15))))
			(nstoogesort_2 x_72 x_71)
			(nstoogesort_0 x_73 x_72)
			(= x_12 (cons_0 y_8 z_4))
			(= z_4 (cons_0 y_9 x_13))
			(= x_13 (cons_0 x_14 x_15)))
		(nstoogesort_1 x_70 x_12))))
(assert (forall ((x_12 list_0) (y_8 Nat_0) (z_4 list_0) (y_9 Nat_0) (x_13 list_0) (x_74 list_0) (x_75 list_0))
	(=>	(and (= x_74 x_75)
			(sort_0 x_75 y_8 y_9)
			(= x_12 (cons_0 y_8 z_4))
			(= z_4 (cons_0 y_9 x_13))
			(= x_13 nil_0))
		(nstoogesort_1 x_74 x_12))))
(assert (forall ((x_12 list_0) (y_8 Nat_0) (z_4 list_0) (x_76 list_0))
	(=>	(and (= x_76 (cons_0 y_8 nil_0))
			(= x_12 (cons_0 y_8 z_4))
			(= z_4 nil_0))
		(nstoogesort_1 x_76 x_12))))
(assert (forall ((x_12 list_0) (x_77 list_0))
	(=>	(and (= x_77 nil_0)
			(= x_12 nil_0))
		(nstoogesort_1 x_77 x_12))))
(assert (forall ((x_16 list_0) (ys_1 list_0) (zs_1 list_0) (x_81 list_0) (x_82 list_0) (x_83 list_0) (x_78 Nat_0) (x_79 Nat_0) (x_80 pair_0))
	(=>	(and (= x_81 x_83)
			(nstoogesort_1 x_82 zs_1)
			(x_9 x_83 ys_1 x_82)
			(= x_80 (pair_1 ys_1 zs_1))
			(length_0 x_78 x_16)
			(third_0 x_79 x_78)
			(splitAt_0 x_80 x_79 x_16))
		(nstoogesort_2 x_81 x_16))))
(assert (forall ((xs_5 list_0) (x_84 list_0) (x_85 list_0))
	(=>	(and (diseqlist_0 x_84 x_85)
			(nstoogesort_1 x_84 xs_5)
			(isort_0 x_85 xs_5))
		false)))
(check-sat)
