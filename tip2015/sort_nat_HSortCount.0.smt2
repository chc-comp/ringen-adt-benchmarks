(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_0 ) (S_0 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_80 Nat_1) (x_79 Nat_1))
	(=> (= x_80 (S_0 x_79))
	    (unS_1 x_79 x_80))))
(assert (isZ_0 Z_0))
(assert (forall ((x_81 Nat_1))
	(isS_0 (S_0 x_81))))
(assert (forall ((x_82 Nat_1))
	(diseqNat_0 Z_0 (S_0 x_82))))
(assert (forall ((x_83 Nat_1))
	(diseqNat_0 (S_0 x_83) Z_0)))
(assert (forall ((x_84 Nat_1) (x_85 Nat_1))
	(=> (diseqNat_0 x_84 x_85)
	    (diseqNat_0 (S_0 x_84) (S_0 x_85)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_10 Nat_1))
	(add_0 y_10 Z_0 y_10)))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1) (r_2 Nat_1))
	(=> (add_0 r_2 x_77 y_10)
	    (add_0 (S_0 r_2) (S_0 x_77) y_10))))
(assert (forall ((y_10 Nat_1))
	(minus_0 Z_0 Z_0 y_10)))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1) (r_2 Nat_1))
	(=> (minus_0 r_2 x_77 y_10)
	    (minus_0 (S_0 r_2) (S_0 x_77) y_10))))
(assert (forall ((y_10 Nat_1))
	(le_0 Z_0 y_10)))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1))
	(=> (le_0 x_77 y_10)
	    (le_0 (S_0 x_77) (S_0 y_10)))))
(assert (forall ((y_10 Nat_1))
	(ge_0 y_10 Z_0)))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1))
	(=> (ge_0 x_77 y_10)
	    (ge_0 (S_0 x_77) (S_0 y_10)))))
(assert (forall ((y_10 Nat_1))
	(lt_0 Z_0 (S_0 y_10))))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1))
	(=> (lt_0 x_77 y_10)
	    (lt_0 (S_0 x_77) (S_0 y_10)))))
(assert (forall ((y_10 Nat_1))
	(gt_0 (S_0 y_10) Z_0)))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1))
	(=> (gt_0 x_77 y_10)
	    (gt_0 (S_0 x_77) (S_0 y_10)))))
(assert (forall ((y_10 Nat_1))
	(mult_0 Z_0 Z_0 y_10)))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1) (r_2 Nat_1) (z_7 Nat_1))
	(=>	(and (mult_0 r_2 x_77 y_10)
			(add_0 z_7 r_2 y_10))
		(mult_0 z_7 (S_0 x_77) y_10))))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1))
	(=> (lt_0 x_77 y_10)
	    (div_0 Z_0 x_77 y_10))))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1) (r_2 Nat_1) (z_7 Nat_1))
	(=>	(and (ge_0 x_77 y_10)
			(minus_0 z_7 x_77 y_10)
			(div_0 r_2 z_7 y_10))
		(div_0 (S_0 r_2) x_77 y_10))))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1))
	(=> (lt_0 x_77 y_10)
	    (mod_0 x_77 x_77 y_10))))
(assert (forall ((x_77 Nat_1) (y_10 Nat_1) (r_2 Nat_1) (z_7 Nat_1))
	(=>	(and (ge_0 x_77 y_10)
			(minus_0 z_7 x_77 y_10)
			(mod_0 r_2 z_7 y_10))
		(mod_0 r_2 x_77 y_10))))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_88 Nat_0) (x_87 Nat_0))
	(=> (= x_88 (succ_0 x_87))
	    (p_1 x_87 x_88))))
(assert (iszero_0 zero_0))
(assert (forall ((x_89 Nat_0))
	(issucc_0 (succ_0 x_89))))
(assert (forall ((x_90 Nat_0))
	(diseqNat_1 zero_0 (succ_0 x_90))))
(assert (forall ((x_91 Nat_0))
	(diseqNat_1 (succ_0 x_91) zero_0)))
(assert (forall ((x_92 Nat_0) (x_93 Nat_0))
	(=> (diseqNat_1 x_92 x_93)
	    (diseqNat_1 (succ_0 x_92) (succ_0 x_93)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_2 (Nat_0 list_0) Bool)
(declare-fun tail_2 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_97 list_0) (x_95 Nat_0) (x_96 list_0))
	(=> (= x_97 (cons_0 x_95 x_96))
	    (head_2 x_95 x_97))))
(assert (forall ((x_97 list_0) (x_95 Nat_0) (x_96 list_0))
	(=> (= x_97 (cons_0 x_95 x_96))
	    (tail_2 x_96 x_97))))
(assert (isnil_0 nil_0))
(assert (forall ((x_98 Nat_0) (x_99 list_0))
	(iscons_0 (cons_0 x_98 x_99))))
(assert (forall ((x_100 Nat_0) (x_101 list_0))
	(diseqlist_0 nil_0 (cons_0 x_100 x_101))))
(assert (forall ((x_102 Nat_0) (x_103 list_0))
	(diseqlist_0 (cons_0 x_102 x_103) nil_0)))
(assert (forall ((x_104 Nat_0) (x_105 list_0) (x_106 Nat_0) (x_107 list_0))
	(=> (diseqNat_1 x_104 x_106)
	    (diseqlist_0 (cons_0 x_104 x_105) (cons_0 x_106 x_107)))))
(assert (forall ((x_104 Nat_0) (x_105 list_0) (x_106 Nat_0) (x_107 list_0))
	(=> (diseqlist_0 x_105 x_107)
	    (diseqlist_0 (cons_0 x_104 x_105) (cons_0 x_106 x_107)))))
(declare-datatypes ((Heap_0 0)) (((Node_0 (projNode_0 Heap_0) (projNode_1 Nat_0) (projNode_2 Heap_0)) (Nil_0 ))))
(declare-fun diseqHeap_0 (Heap_0 Heap_0) Bool)
(declare-fun projNode_3 (Heap_0 Heap_0) Bool)
(declare-fun projNode_4 (Nat_0 Heap_0) Bool)
(declare-fun projNode_5 (Heap_0 Heap_0) Bool)
(declare-fun isNode_0 (Heap_0) Bool)
(declare-fun isNil_0 (Heap_0) Bool)
(assert (forall ((x_111 Heap_0) (x_108 Heap_0) (x_109 Nat_0) (x_110 Heap_0))
	(=> (= x_111 (Node_0 x_108 x_109 x_110))
	    (projNode_3 x_108 x_111))))
(assert (forall ((x_111 Heap_0) (x_108 Heap_0) (x_109 Nat_0) (x_110 Heap_0))
	(=> (= x_111 (Node_0 x_108 x_109 x_110))
	    (projNode_4 x_109 x_111))))
(assert (forall ((x_111 Heap_0) (x_108 Heap_0) (x_109 Nat_0) (x_110 Heap_0))
	(=> (= x_111 (Node_0 x_108 x_109 x_110))
	    (projNode_5 x_110 x_111))))
(assert (forall ((x_113 Heap_0) (x_114 Nat_0) (x_115 Heap_0))
	(isNode_0 (Node_0 x_113 x_114 x_115))))
(assert (isNil_0 Nil_0))
(assert (forall ((x_116 Heap_0) (x_117 Nat_0) (x_118 Heap_0))
	(diseqHeap_0 (Node_0 x_116 x_117 x_118) Nil_0)))
(assert (forall ((x_119 Heap_0) (x_120 Nat_0) (x_121 Heap_0))
	(diseqHeap_0 Nil_0 (Node_0 x_119 x_120 x_121))))
(assert (forall ((x_122 Heap_0) (x_123 Nat_0) (x_124 Heap_0) (x_125 Heap_0) (x_126 Nat_0) (x_127 Heap_0))
	(=> (diseqHeap_0 x_122 x_125)
	    (diseqHeap_0 (Node_0 x_122 x_123 x_124) (Node_0 x_125 x_126 x_127)))))
(assert (forall ((x_122 Heap_0) (x_123 Nat_0) (x_124 Heap_0) (x_125 Heap_0) (x_126 Nat_0) (x_127 Heap_0))
	(=> (diseqNat_1 x_123 x_126)
	    (diseqHeap_0 (Node_0 x_122 x_123 x_124) (Node_0 x_125 x_126 x_127)))))
(assert (forall ((x_122 Heap_0) (x_123 Nat_0) (x_124 Heap_0) (x_125 Heap_0) (x_126 Nat_0) (x_127 Heap_0))
	(=> (diseqHeap_0 x_124 x_127)
	    (diseqHeap_0 (Node_0 x_122 x_123 x_124) (Node_0 x_125 x_126 x_127)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 Heap_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_3 (Heap_0 list_1) Bool)
(declare-fun tail_3 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_131 list_1) (x_129 Heap_0) (x_130 list_1))
	(=> (= x_131 (cons_1 x_129 x_130))
	    (head_3 x_129 x_131))))
(assert (forall ((x_131 list_1) (x_129 Heap_0) (x_130 list_1))
	(=> (= x_131 (cons_1 x_129 x_130))
	    (tail_3 x_130 x_131))))
(assert (isnil_1 nil_1))
(assert (forall ((x_132 Heap_0) (x_133 list_1))
	(iscons_1 (cons_1 x_132 x_133))))
(assert (forall ((x_134 Heap_0) (x_135 list_1))
	(diseqlist_1 nil_1 (cons_1 x_134 x_135))))
(assert (forall ((x_136 Heap_0) (x_137 list_1))
	(diseqlist_1 (cons_1 x_136 x_137) nil_1)))
(assert (forall ((x_138 Heap_0) (x_139 list_1) (x_140 Heap_0) (x_141 list_1))
	(=> (diseqHeap_0 x_138 x_140)
	    (diseqlist_1 (cons_1 x_138 x_139) (cons_1 x_140 x_141)))))
(assert (forall ((x_138 Heap_0) (x_139 list_1) (x_140 Heap_0) (x_141 list_1))
	(=> (diseqlist_1 x_139 x_141)
	    (diseqlist_1 (cons_1 x_138 x_139) (cons_1 x_140 x_141)))))
(declare-fun toHeap_0 (list_1 list_0) Bool)
(assert (forall ((x_0 list_0) (y_0 Nat_0) (z_0 list_0) (x_22 list_1) (x_23 list_1))
	(=>	(and (= x_22 (cons_1 (Node_0 Nil_0 y_0 Nil_0) x_23))
			(toHeap_0 x_23 z_0)
			(= x_0 (cons_0 y_0 z_0)))
		(toHeap_0 x_22 x_0))))
(assert (forall ((x_0 list_0) (x_24 list_1))
	(=>	(and (= x_24 nil_1)
			(= x_0 nil_0))
		(toHeap_0 x_24 x_0))))
(declare-fun plus_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (z_1 Nat_0) (x_25 Nat_0) (x_26 Nat_0))
	(=>	(and (= x_25 (succ_0 x_26))
			(plus_0 x_26 z_1 y_1)
			(= x_1 (succ_0 z_1)))
		(plus_0 x_25 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (x_27 Nat_0))
	(=>	(and (= x_27 y_1)
			(= x_1 zero_0))
		(plus_0 x_27 x_1 y_1))))
(declare-fun leq_0 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_2 Nat_0) (y_2 Nat_0) (z_2 Nat_0) (x_3 Nat_0) (x_28 Bool) (x_29 Bool))
	(=>	(and (= x_28 x_29)
			(leq_0 x_29 z_2 x_3)
			(= x_2 (succ_0 z_2))
			(= y_2 (succ_0 x_3)))
		(leq_0 x_28 x_2 y_2))))
(assert (forall ((x_2 Nat_0) (y_2 Nat_0) (z_2 Nat_0) (x_30 Bool))
	(=>	(and (= x_30 false)
			(= x_2 (succ_0 z_2))
			(= y_2 zero_0))
		(leq_0 x_30 x_2 y_2))))
(assert (forall ((x_2 Nat_0) (y_2 Nat_0) (x_31 Bool))
	(=>	(and (= x_31 true)
			(= x_2 zero_0))
		(leq_0 x_31 x_2 y_2))))
(declare-fun hmerge_0 (Heap_0 Heap_0 Heap_0) Bool)
(assert (forall ((x_4 Heap_0) (y_3 Heap_0) (x_32 Heap_0))
	(=>	(and (= x_32 y_3)
			(= x_4 Nil_0))
		(hmerge_0 x_32 x_4 y_3))))
(assert (forall ((x_4 Heap_0) (y_3 Heap_0) (z_3 Heap_0) (x_5 Nat_0) (x_6 Heap_0) (x_33 Heap_0))
	(=>	(and (= x_33 (Node_0 z_3 x_5 x_6))
			(= x_4 (Node_0 z_3 x_5 x_6))
			(= y_3 Nil_0))
		(hmerge_0 x_33 x_4 y_3))))
(assert (forall ((x_4 Heap_0) (y_3 Heap_0) (z_3 Heap_0) (x_5 Nat_0) (x_6 Heap_0) (x_7 Heap_0) (x_8 Nat_0) (x_9 Heap_0) (x_35 Heap_0) (x_36 Heap_0) (x_34 Bool))
	(=>	(and (= x_35 (Node_0 x_36 x_5 z_3))
			(hmerge_0 x_36 x_6 (Node_0 x_7 x_8 x_9))
			(= x_4 (Node_0 z_3 x_5 x_6))
			(= y_3 (Node_0 x_7 x_8 x_9))
			(= x_34 true)
			(leq_0 x_34 x_5 x_8))
		(hmerge_0 x_35 x_4 y_3))))
(assert (forall ((x_4 Heap_0) (y_3 Heap_0) (z_3 Heap_0) (x_5 Nat_0) (x_6 Heap_0) (x_7 Heap_0) (x_8 Nat_0) (x_9 Heap_0) (x_38 Heap_0) (x_39 Heap_0) (x_37 Bool))
	(=>	(and (= x_38 (Node_0 x_39 x_8 x_7))
			(hmerge_0 x_39 (Node_0 z_3 x_5 x_6) x_9)
			(= x_4 (Node_0 z_3 x_5 x_6))
			(= y_3 (Node_0 x_7 x_8 x_9))
			(= x_37 false)
			(leq_0 x_37 x_5 x_8))
		(hmerge_0 x_38 x_4 y_3))))
(declare-fun hpairwise_0 (list_1 list_1) Bool)
(assert (forall ((x_10 list_1) (q_0 Heap_0) (y_4 list_1) (r_0 Heap_0) (qs_0 list_1) (x_40 list_1) (x_41 Heap_0) (x_42 list_1))
	(=>	(and (= x_40 (cons_1 x_41 x_42))
			(hmerge_0 x_41 q_0 r_0)
			(hpairwise_0 x_42 qs_0)
			(= x_10 (cons_1 q_0 y_4))
			(= y_4 (cons_1 r_0 qs_0)))
		(hpairwise_0 x_40 x_10))))
(assert (forall ((x_10 list_1) (q_0 Heap_0) (y_4 list_1) (x_43 list_1))
	(=>	(and (= x_43 (cons_1 q_0 nil_1))
			(= x_10 (cons_1 q_0 y_4))
			(= y_4 nil_1))
		(hpairwise_0 x_43 x_10))))
(assert (forall ((x_10 list_1) (x_44 list_1))
	(=>	(and (= x_44 nil_1)
			(= x_10 nil_1))
		(hpairwise_0 x_44 x_10))))
(declare-fun hmerging_0 (Heap_0 list_1) Bool)
(assert (forall ((x_11 list_1) (q_1 Heap_0) (y_5 list_1) (z_4 Heap_0) (x_12 list_1) (x_45 Heap_0) (x_46 list_1) (x_47 Heap_0))
	(=>	(and (= x_45 x_47)
			(hpairwise_0 x_46 (cons_1 q_1 (cons_1 z_4 x_12)))
			(hmerging_0 x_47 x_46)
			(= x_11 (cons_1 q_1 y_5))
			(= y_5 (cons_1 z_4 x_12)))
		(hmerging_0 x_45 x_11))))
(assert (forall ((x_11 list_1) (q_1 Heap_0) (y_5 list_1) (x_48 Heap_0))
	(=>	(and (= x_48 q_1)
			(= x_11 (cons_1 q_1 y_5))
			(= y_5 nil_1))
		(hmerging_0 x_48 x_11))))
(assert (forall ((x_11 list_1) (x_49 Heap_0))
	(=>	(and (= x_49 Nil_0)
			(= x_11 nil_1))
		(hmerging_0 x_49 x_11))))
(declare-fun toHeap_1 (Heap_0 list_0) Bool)
(assert (forall ((x_13 list_0) (x_50 Heap_0) (x_51 list_1) (x_52 Heap_0))
	(=>	(and (= x_50 x_52)
			(toHeap_0 x_51 x_13)
			(hmerging_0 x_52 x_51))
		(toHeap_1 x_50 x_13))))
(declare-fun toList_0 (list_0 Heap_0) Bool)
(assert (forall ((x_14 Heap_0) (x_53 list_0))
	(=>	(and (= x_53 nil_0)
			(= x_14 Nil_0))
		(toList_0 x_53 x_14))))
(assert (forall ((x_14 Heap_0) (q_2 Heap_0) (y_6 Nat_0) (r_1 Heap_0) (x_54 list_0) (x_55 Heap_0) (x_56 list_0))
	(=>	(and (= x_54 (cons_0 y_6 x_56))
			(hmerge_0 x_55 q_2 r_1)
			(toList_0 x_56 x_55)
			(= x_14 (Node_0 q_2 y_6 r_1)))
		(toList_0 x_54 x_14))))
(declare-fun hsort_0 (list_0 list_0) Bool)
(assert (forall ((x_15 list_0) (x_57 list_0) (x_58 Heap_0) (x_59 list_0))
	(=>	(and (= x_57 x_59)
			(toHeap_1 x_58 x_15)
			(toList_0 x_59 x_58))
		(hsort_0 x_57 x_15))))
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_16 Nat_0) (y_7 list_0) (z_5 Nat_0) (ys_0 list_0) (x_60 Nat_0) (x_61 Nat_0) (x_62 Nat_0))
	(=>	(and (= x_60 x_62)
			(count_0 x_61 x_16 ys_0)
			(plus_0 x_62 (succ_0 zero_0) x_61)
			(= y_7 (cons_0 z_5 ys_0))
			(= x_16 z_5))
		(count_0 x_60 x_16 y_7))))
(assert (forall ((x_16 Nat_0) (y_7 list_0) (z_5 Nat_0) (ys_0 list_0) (x_63 Nat_0) (x_64 Nat_0))
	(=>	(and (= x_63 x_64)
			(count_0 x_64 x_16 ys_0)
			(= y_7 (cons_0 z_5 ys_0))
			(diseqNat_1 x_16 z_5))
		(count_0 x_63 x_16 y_7))))
(assert (forall ((x_16 Nat_0) (y_7 list_0) (x_65 Nat_0))
	(=>	(and (= x_65 zero_0)
			(= y_7 nil_0))
		(count_0 x_65 x_16 y_7))))
(assert (forall ((x_17 Nat_0) (y_8 Nat_0) (z_6 Nat_0) (x_66 Nat_0) (x_67 Nat_0) (x_68 Nat_0) (x_69 Nat_0))
	(=>	(and (diseqNat_1 x_67 x_69)
			(plus_0 x_66 y_8 z_6)
			(plus_0 x_67 x_17 x_66)
			(plus_0 x_68 x_17 y_8)
			(plus_0 x_69 x_68 z_6))
		false)))
(assert (forall ((x_18 Nat_0) (y_9 Nat_0) (x_70 Nat_0) (x_71 Nat_0))
	(=>	(and (diseqNat_1 x_70 x_71)
			(plus_0 x_70 x_18 y_9)
			(plus_0 x_71 y_9 x_18))
		false)))
(assert (forall ((x_19 Nat_0) (x_72 Nat_0))
	(=>	(and (diseqNat_1 x_72 x_19)
			(plus_0 x_72 x_19 zero_0))
		false)))
(assert (forall ((x_20 Nat_0) (x_73 Nat_0))
	(=>	(and (diseqNat_1 x_73 x_20)
			(plus_0 x_73 zero_0 x_20))
		false)))
(assert (forall ((x_21 Nat_0) (xs_0 list_0) (x_74 list_0) (x_75 Nat_0) (x_76 Nat_0))
	(=>	(and (diseqNat_1 x_75 x_76)
			(hsort_0 x_74 xs_0)
			(count_0 x_75 x_21 x_74)
			(count_0 x_76 x_21 xs_0))
		false)))
(check-sat)
