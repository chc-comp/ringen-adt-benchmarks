(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_2 ) (Z_3 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-datatypes ((Heap_0 0)) (((Node_0 (projNode_0 Heap_0) (projNode_1 Nat_0) (projNode_2 Heap_0)) (Nil_1 ))))
(declare-fun hmerge_0 (Heap_0 Heap_0 Heap_0) Bool)
(declare-fun toList_0 (list_0 Heap_0) Bool)
(declare-fun hinsert_0 (Heap_0 Nat_0 Heap_0) Bool)
(declare-fun toHeap_0 (Heap_0 list_0) Bool)
(declare-fun hsort_0 (list_0 list_0) Bool)
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_45 Nat_0))
	(diseqNat_0 Z_2 (Z_3 x_45))))
(assert (forall ((x_46 Nat_0))
	(diseqNat_0 (Z_3 x_46) Z_2)))
(assert (forall ((x_47 Nat_0) (x_48 Nat_0))
	(=> (diseqNat_0 x_47 x_48) (diseqNat_0 (Z_3 x_47) (Z_3 x_48)))))
(assert (forall ((y_5 Nat_0))
	(add_0 y_5 Z_2 y_5)))
(assert (forall ((r_0 Nat_0) (x_39 Nat_0) (y_5 Nat_0))
	(=> (add_0 r_0 x_39 y_5) (add_0 (Z_3 r_0) (Z_3 x_39) y_5))))
(assert (forall ((y_5 Nat_0))
	(le_0 Z_2 y_5)))
(assert (forall ((x_39 Nat_0) (y_5 Nat_0))
	(=> (le_0 x_39 y_5) (le_0 (Z_3 x_39) (Z_3 y_5)))))
(assert (forall ((y_5 Nat_0))
	(gt_0 (Z_3 y_5) Z_2)))
(assert (forall ((x_39 Nat_0) (y_5 Nat_0))
	(=> (gt_0 x_39 y_5) (gt_0 (Z_3 x_39) (Z_3 y_5)))))
(assert (forall ((x_12 Heap_0))
	(hmerge_0 x_12 Nil_1 x_12)))
(assert (forall ((z_0 Heap_0) (x_1 Nat_0) (x_2 Heap_0))
	(hmerge_0 (Node_0 z_0 x_1 x_2) (Node_0 z_0 x_1 x_2) Nil_1)))
(assert (forall ((x_15 Heap_0) (x_3 Heap_0) (x_4 Nat_0) (x_5 Heap_0) (z_0 Heap_0) (x_1 Nat_0) (x_2 Heap_0))
	(=> (and (le_0 x_1 x_4) (hmerge_0 x_15 x_2 (Node_0 x_3 x_4 x_5))) (hmerge_0 (Node_0 x_15 x_1 z_0) (Node_0 z_0 x_1 x_2) (Node_0 x_3 x_4 x_5)))))
(assert (forall ((x_17 Heap_0) (x_3 Heap_0) (x_4 Nat_0) (x_5 Heap_0) (z_0 Heap_0) (x_1 Nat_0) (x_2 Heap_0))
	(=> (and (gt_0 x_1 x_4) (hmerge_0 x_17 (Node_0 z_0 x_1 x_2) x_5)) (hmerge_0 (Node_0 x_17 x_4 x_3) (Node_0 z_0 x_1 x_2) (Node_0 x_3 x_4 x_5)))))
(assert (toList_0 nil_0 Nil_1))
(assert (forall ((x_20 Heap_0) (x_21 list_0) (p_0 Heap_0) (y_1 Nat_0) (q_0 Heap_0))
	(=> (and (hmerge_0 x_20 p_0 q_0) (toList_0 x_21 x_20)) (toList_0 (cons_0 y_1 x_21) (Node_0 p_0 y_1 q_0)))))
(assert (forall ((x_22 Heap_0) (x_7 Nat_0) (y_2 Heap_0))
	(=> (hmerge_0 x_22 (Node_0 Nil_1 x_7 Nil_1) y_2) (hinsert_0 x_22 x_7 y_2))))
(assert (forall ((x_24 Heap_0) (x_25 Heap_0) (y_3 Nat_0) (xs_0 list_0))
	(=> (and (toHeap_0 x_25 xs_0) (hinsert_0 x_24 y_3 x_25)) (toHeap_0 x_24 (cons_0 y_3 xs_0)))))
(assert (toHeap_0 Nil_1 nil_0))
(assert (forall ((x_28 list_0) (x_29 Heap_0) (x_9 list_0))
	(=> (and (toHeap_0 x_29 x_9) (toList_0 x_28 x_29)) (hsort_0 x_28 x_9))))
(assert (forall ((x_31 Nat_0) (x_32 Nat_0) (ys_0 list_0) (x_10 Nat_0))
	(=> (and (count_0 x_32 x_10 ys_0) (add_0 x_31 (Z_3 Z_2) x_32)) (count_0 x_31 x_10 (cons_0 x_10 ys_0)))))
(assert (forall ((x_33 Nat_0) (z_1 Nat_0) (ys_0 list_0) (x_10 Nat_0))
	(=> (and (diseqNat_0 x_10 z_1) (count_0 x_33 x_10 ys_0)) (count_0 x_33 x_10 (cons_0 z_1 ys_0)))))
(assert (forall ((x_10 Nat_0))
	(count_0 Z_2 x_10 nil_0)))
(assert (forall ((x_36 list_0) (x_37 Nat_0) (x_38 Nat_0) (x_11 Nat_0) (xs_1 list_0))
	(=> (and (diseqNat_0 x_37 x_38) (hsort_0 x_36 xs_1) (count_0 x_37 x_11 x_36) (count_0 x_38 x_11 xs_1)) false)))
(check-sat)
(get-model)
