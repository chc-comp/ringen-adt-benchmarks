(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_0 ) (S_0 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_20 Nat_1) (x_19 Nat_1))
	(=> (= x_20 (S_0 x_19))
	    (unS_1 x_19 x_20))))
(assert (isZ_0 Z_0))
(assert (forall ((x_21 Nat_1))
	(isS_0 (S_0 x_21))))
(assert (forall ((x_22 Nat_1))
	(diseqNat_0 Z_0 (S_0 x_22))))
(assert (forall ((x_23 Nat_1))
	(diseqNat_0 (S_0 x_23) Z_0)))
(assert (forall ((x_24 Nat_1) (x_25 Nat_1))
	(=> (diseqNat_0 x_24 x_25)
	    (diseqNat_0 (S_0 x_24) (S_0 x_25)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_1 Nat_1))
	(add_0 y_1 Z_0 y_1)))
(assert (forall ((x_17 Nat_1) (y_1 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_17 y_1)
	    (add_0 (S_0 r_0) (S_0 x_17) y_1))))
(assert (forall ((y_1 Nat_1))
	(minus_0 Z_0 Z_0 y_1)))
(assert (forall ((x_17 Nat_1) (y_1 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_17 y_1)
	    (minus_0 (S_0 r_0) (S_0 x_17) y_1))))
(assert (forall ((y_1 Nat_1))
	(le_0 Z_0 y_1)))
(assert (forall ((x_17 Nat_1) (y_1 Nat_1))
	(=> (le_0 x_17 y_1)
	    (le_0 (S_0 x_17) (S_0 y_1)))))
(assert (forall ((y_1 Nat_1))
	(ge_0 y_1 Z_0)))
(assert (forall ((x_17 Nat_1) (y_1 Nat_1))
	(=> (ge_0 x_17 y_1)
	    (ge_0 (S_0 x_17) (S_0 y_1)))))
(assert (forall ((y_1 Nat_1))
	(lt_0 Z_0 (S_0 y_1))))
(assert (forall ((x_17 Nat_1) (y_1 Nat_1))
	(=> (lt_0 x_17 y_1)
	    (lt_0 (S_0 x_17) (S_0 y_1)))))
(assert (forall ((y_1 Nat_1))
	(gt_0 (S_0 y_1) Z_0)))
(assert (forall ((x_17 Nat_1) (y_1 Nat_1))
	(=> (gt_0 x_17 y_1)
	    (gt_0 (S_0 x_17) (S_0 y_1)))))
(assert (forall ((y_1 Nat_1))
	(mult_0 Z_0 Z_0 y_1)))
(assert (forall ((x_17 Nat_1) (y_1 Nat_1) (r_0 Nat_1) (z_1 Nat_1))
	(=>	(and (mult_0 r_0 x_17 y_1)
			(add_0 z_1 r_0 y_1))
		(mult_0 z_1 (S_0 x_17) y_1))))
(assert (forall ((x_17 Nat_1) (y_1 Nat_1))
	(=> (lt_0 x_17 y_1)
	    (div_0 Z_0 x_17 y_1))))
(assert (forall ((x_17 Nat_1) (y_1 Nat_1) (r_0 Nat_1) (z_1 Nat_1))
	(=>	(and (ge_0 x_17 y_1)
			(minus_0 z_1 x_17 y_1)
			(div_0 r_0 z_1 y_1))
		(div_0 (S_0 r_0) x_17 y_1))))
(assert (forall ((x_17 Nat_1) (y_1 Nat_1))
	(=> (lt_0 x_17 y_1)
	    (mod_0 x_17 x_17 y_1))))
(assert (forall ((x_17 Nat_1) (y_1 Nat_1) (r_0 Nat_1) (z_1 Nat_1))
	(=>	(and (ge_0 x_17 y_1)
			(minus_0 z_1 x_17 y_1)
			(mod_0 r_0 z_1 y_1))
		(mod_0 r_0 x_17 y_1))))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_28 Nat_0) (x_27 Nat_0))
	(=> (= x_28 (succ_0 x_27))
	    (p_1 x_27 x_28))))
(assert (iszero_0 zero_0))
(assert (forall ((x_29 Nat_0))
	(issucc_0 (succ_0 x_29))))
(assert (forall ((x_30 Nat_0))
	(diseqNat_1 zero_0 (succ_0 x_30))))
(assert (forall ((x_31 Nat_0))
	(diseqNat_1 (succ_0 x_31) zero_0)))
(assert (forall ((x_32 Nat_0) (x_33 Nat_0))
	(=> (diseqNat_1 x_32 x_33)
	    (diseqNat_1 (succ_0 x_32) (succ_0 x_33)))))
(declare-fun addacc_0 (Nat_0 Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_1 Nat_0) (x_8 Nat_0) (x_9 Nat_0))
	(=>	(and (= x_8 x_9)
			(addacc_0 x_9 x_1 (succ_0 y_0) z_0)
			(= x_0 (succ_0 x_1)))
		(addacc_0 x_8 x_0 y_0 z_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_2 Nat_0) (x_10 Nat_0) (x_11 Nat_0))
	(=>	(and (= x_10 x_11)
			(addacc_0 x_11 zero_0 x_2 (succ_0 z_0))
			(= x_0 zero_0)
			(= y_0 (succ_0 x_2)))
		(addacc_0 x_10 x_0 y_0 z_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_12 Nat_0))
	(=>	(and (= x_12 z_0)
			(= x_0 zero_0)
			(= y_0 zero_0))
		(addacc_0 x_12 x_0 y_0 z_0))))
(assert (forall ((x_3 Nat_0) (x_4 Nat_0) (x_5 Nat_0) (x_6 Nat_0) (x_7 Nat_0) (x_13 Nat_0) (x_14 Nat_0) (x_15 Nat_0) (x_16 Nat_0))
	(=>	(and (diseqNat_1 x_14 x_16)
			(addacc_0 x_13 x_4 x_5 x_6)
			(addacc_0 x_14 x_3 x_13 x_7)
			(addacc_0 x_15 x_5 x_6 x_7)
			(addacc_0 x_16 x_3 x_4 x_15))
		false)))
(check-sat)
