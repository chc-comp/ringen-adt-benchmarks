(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_27 Nat_0) (x_26 Nat_0))
	(=> (= x_27 (S_0 x_26))
	    (unS_1 x_26 x_27))))
(assert (isZ_0 Z_0))
(assert (forall ((x_28 Nat_0))
	(isS_0 (S_0 x_28))))
(assert (forall ((x_29 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_29))))
(assert (forall ((x_30 Nat_0))
	(diseqNat_0 (S_0 x_30) Z_0)))
(assert (forall ((x_31 Nat_0) (x_32 Nat_0))
	(=> (diseqNat_0 x_31 x_32)
	    (diseqNat_0 (S_0 x_31) (S_0 x_32)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_3 Nat_0))
	(add_0 y_3 Z_0 y_3)))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_23 y_3)
	    (add_0 (S_0 r_0) (S_0 x_23) y_3))))
(assert (forall ((y_3 Nat_0))
	(minus_0 Z_0 Z_0 y_3)))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_23 y_3)
	    (minus_0 (S_0 r_0) (S_0 x_23) y_3))))
(assert (forall ((y_3 Nat_0))
	(le_0 Z_0 y_3)))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0))
	(=> (le_0 x_23 y_3)
	    (le_0 (S_0 x_23) (S_0 y_3)))))
(assert (forall ((y_3 Nat_0))
	(ge_0 y_3 Z_0)))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0))
	(=> (ge_0 x_23 y_3)
	    (ge_0 (S_0 x_23) (S_0 y_3)))))
(assert (forall ((y_3 Nat_0))
	(lt_0 Z_0 (S_0 y_3))))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0))
	(=> (lt_0 x_23 y_3)
	    (lt_0 (S_0 x_23) (S_0 y_3)))))
(assert (forall ((y_3 Nat_0))
	(gt_0 (S_0 y_3) Z_0)))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0))
	(=> (gt_0 x_23 y_3)
	    (gt_0 (S_0 x_23) (S_0 y_3)))))
(assert (forall ((y_3 Nat_0))
	(mult_0 Z_0 Z_0 y_3)))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (mult_0 r_0 x_23 y_3)
			(add_0 z_2 r_0 y_3))
		(mult_0 z_2 (S_0 x_23) y_3))))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0))
	(=> (lt_0 x_23 y_3)
	    (div_0 Z_0 x_23 y_3))))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (ge_0 x_23 y_3)
			(minus_0 z_2 x_23 y_3)
			(div_0 r_0 z_2 y_3))
		(div_0 (S_0 r_0) x_23 y_3))))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0))
	(=> (lt_0 x_23 y_3)
	    (mod_0 x_23 x_23 y_3))))
(assert (forall ((x_23 Nat_0) (y_3 Nat_0) (r_0 Nat_0) (z_2 Nat_0))
	(=>	(and (ge_0 x_23 y_3)
			(minus_0 z_2 x_23 y_3)
			(mod_0 r_0 z_2 y_3))
		(mod_0 r_0 x_23 y_3))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_36 list_0) (x_34 Nat_0) (x_35 list_0))
	(=> (= x_36 (cons_0 x_34 x_35))
	    (head_1 x_34 x_36))))
(assert (forall ((x_36 list_0) (x_34 Nat_0) (x_35 list_0))
	(=> (= x_36 (cons_0 x_34 x_35))
	    (tail_1 x_35 x_36))))
(assert (isnil_0 nil_0))
(assert (forall ((x_37 Nat_0) (x_38 list_0))
	(iscons_0 (cons_0 x_37 x_38))))
(assert (forall ((x_39 Nat_0) (x_40 list_0))
	(diseqlist_0 nil_0 (cons_0 x_39 x_40))))
(assert (forall ((x_41 Nat_0) (x_42 list_0))
	(diseqlist_0 (cons_0 x_41 x_42) nil_0)))
(assert (forall ((x_43 Nat_0) (x_44 list_0) (x_45 Nat_0) (x_46 list_0))
	(=> (diseqNat_0 x_43 x_45)
	    (diseqlist_0 (cons_0 x_43 x_44) (cons_0 x_45 x_46)))))
(assert (forall ((x_43 Nat_0) (x_44 list_0) (x_45 Nat_0) (x_46 list_0))
	(=> (diseqlist_0 x_44 x_46)
	    (diseqlist_0 (cons_0 x_43 x_44) (cons_0 x_45 x_46)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Bool) (projpair_1 list_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (Bool pair_0) Bool)
(declare-fun projpair_3 (list_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_49 pair_0) (x_47 Bool) (x_48 list_0))
	(=> (= x_49 (pair_1 x_47 x_48))
	    (projpair_2 x_47 x_49))))
(assert (forall ((x_49 pair_0) (x_47 Bool) (x_48 list_0))
	(=> (= x_49 (pair_1 x_47 x_48))
	    (projpair_3 x_48 x_49))))
(assert (forall ((x_50 Bool) (x_51 list_0))
	(ispair_0 (pair_1 x_50 x_51))))
(assert (forall ((x_52 Bool) (x_53 list_0) (x_54 Bool) (x_55 list_0))
	(=> (not (= x_52 x_54))
	    (diseqpair_0 (pair_1 x_52 x_53) (pair_1 x_54 x_55)))))
(assert (forall ((x_52 Bool) (x_53 list_0) (x_54 Bool) (x_55 list_0))
	(=> (diseqlist_0 x_53 x_55)
	    (diseqpair_0 (pair_1 x_52 x_53) (pair_1 x_54 x_55)))))
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (ys_0 list_0) (x_4 Nat_0) (x_5 Nat_0) (x_24 Nat_0))
	(=>	(and (= x_4 x_24)
			(count_0 x_5 x_0 ys_0)
			(= y_0 (cons_0 z_0 ys_0))
			(= x_0 z_0)
			(add_0 x_24 (S_0 Z_0) x_5))
		(count_0 x_4 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (ys_0 list_0) (x_6 Nat_0) (x_7 Nat_0))
	(=>	(and (= x_6 x_7)
			(count_0 x_7 x_0 ys_0)
			(= y_0 (cons_0 z_0 ys_0))
			(diseqNat_0 x_0 z_0))
		(count_0 x_6 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_8 Nat_0))
	(=>	(and (= x_8 Z_0)
			(= y_0 nil_0))
		(count_0 x_8 x_0 y_0))))
(declare-fun bubble_0 (pair_0 list_0) Bool)
(assert (forall ((x_1 list_0) (y_1 Nat_0) (z_1 list_0) (y_2 Nat_0) (xs_0 list_0) (b_0 Bool) (ys_1 list_0) (x_10 pair_0) (x_9 pair_0))
	(=>	(and (= x_10 (pair_1 b_0 (cons_0 y_1 ys_1)))
			(= x_1 (cons_0 y_1 z_1))
			(= z_1 (cons_0 y_2 xs_0))
			(le_0 y_1 y_2)
			(= x_9 (pair_1 b_0 ys_1))
			(bubble_0 x_9 (cons_0 y_2 xs_0)))
		(bubble_0 x_10 x_1))))
(assert (forall ((x_1 list_0) (y_1 Nat_0) (z_1 list_0) (y_2 Nat_0) (xs_0 list_0) (b_1 Bool) (ys_2 list_0) (x_12 pair_0) (x_11 pair_0))
	(=>	(and (= x_12 (pair_1 true (cons_0 y_2 ys_2)))
			(= x_1 (cons_0 y_1 z_1))
			(= z_1 (cons_0 y_2 xs_0))
			(gt_0 y_1 y_2)
			(= x_11 (pair_1 b_1 ys_2))
			(bubble_0 x_11 (cons_0 y_1 xs_0)))
		(bubble_0 x_12 x_1))))
(assert (forall ((x_1 list_0) (y_1 Nat_0) (z_1 list_0) (x_13 pair_0))
	(=>	(and (= x_13 (pair_1 false (cons_0 y_1 nil_0)))
			(= x_1 (cons_0 y_1 z_1))
			(= z_1 nil_0))
		(bubble_0 x_13 x_1))))
(assert (forall ((x_1 list_0) (x_14 pair_0))
	(=>	(and (= x_14 (pair_1 false nil_0))
			(= x_1 nil_0))
		(bubble_0 x_14 x_1))))
(declare-fun bubsort_0 (list_0 list_0) Bool)
(assert (forall ((x_2 list_0) (c_0 Bool) (ys_3 list_0) (x_16 list_0) (x_17 list_0) (x_15 pair_0))
	(=>	(and (= x_16 x_17)
			(bubsort_0 x_17 ys_3)
			(= x_15 (pair_1 c_0 ys_3))
			c_0
			(bubble_0 x_15 x_2))
		(bubsort_0 x_16 x_2))))
(assert (forall ((x_2 list_0) (c_0 Bool) (ys_3 list_0) (x_19 list_0) (x_18 pair_0))
	(=>	(and (= x_19 x_2)
			(= x_18 (pair_1 c_0 ys_3))
			(not c_0)
			(bubble_0 x_18 x_2))
		(bubsort_0 x_19 x_2))))
(assert (forall ((x_3 Nat_0) (xs_1 list_0) (x_20 list_0) (x_21 Nat_0) (x_22 Nat_0))
	(=>	(and (diseqNat_0 x_21 x_22)
			(bubsort_0 x_20 xs_1)
			(count_0 x_21 x_3 x_20)
			(count_0 x_22 x_3 xs_1))
		false)))
(check-sat)
