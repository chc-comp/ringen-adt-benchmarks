(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_5 ) (Z_6 (unS_0 Nat_0)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 list_0) (projpair_1 list_0)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(declare-fun sort_0 (list_0 Nat_0 Nat_0) Bool)
(declare-fun ordered_0 (Bool_0 list_0) Bool)
(declare-fun length_0 (Nat_0 list_0) Bool)
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(declare-fun splitAt_0 (pair_0 Nat_0 list_0) Bool)
(declare-fun x_6 (list_0 list_0 list_0) Bool)
(declare-fun stoogesort_0 (list_0 list_0) Bool)
(declare-fun stoogesort_1 (list_0 list_0) Bool)
(declare-fun stoogesort_2 (list_0 list_0) Bool)
(assert (forall ((y_10 Nat_0))
	(add_0 y_10 Z_5 y_10)))
(assert (forall ((r_0 Nat_0) (x_63 Nat_0) (y_10 Nat_0))
	(=> (add_0 r_0 x_63 y_10) (add_0 (Z_6 r_0) (Z_6 x_63) y_10))))
(assert (forall ((y_10 Nat_0))
	(minus_0 Z_5 Z_5 y_10)))
(assert (forall ((r_0 Nat_0) (x_63 Nat_0) (y_10 Nat_0))
	(=> (minus_0 r_0 x_63 y_10) (minus_0 (Z_6 r_0) (Z_6 x_63) y_10))))
(assert (forall ((y_10 Nat_0))
	(le_0 Z_5 y_10)))
(assert (forall ((x_63 Nat_0) (y_10 Nat_0))
	(=> (le_0 x_63 y_10) (le_0 (Z_6 x_63) (Z_6 y_10)))))
(assert (forall ((y_10 Nat_0))
	(ge_0 y_10 Z_5)))
(assert (forall ((x_63 Nat_0) (y_10 Nat_0))
	(=> (ge_0 x_63 y_10) (ge_0 (Z_6 x_63) (Z_6 y_10)))))
(assert (forall ((y_10 Nat_0))
	(lt_0 Z_5 (Z_6 y_10))))
(assert (forall ((x_63 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_63 y_10) (lt_0 (Z_6 x_63) (Z_6 y_10)))))
(assert (forall ((y_10 Nat_0))
	(gt_0 (Z_6 y_10) Z_5)))
(assert (forall ((x_63 Nat_0) (y_10 Nat_0))
	(=> (gt_0 x_63 y_10) (gt_0 (Z_6 x_63) (Z_6 y_10)))))
(assert (forall ((y_10 Nat_0))
	(mult_0 Z_5 Z_5 y_10)))
(assert (forall ((r_0 Nat_0) (x_63 Nat_0) (y_10 Nat_0) (z_7 Nat_0))
	(=> (and (mult_0 r_0 x_63 y_10) (add_0 z_7 r_0 y_10)) (mult_0 z_7 (Z_6 x_63) y_10))))
(assert (forall ((x_63 Nat_0) (y_10 Nat_0))
	(=> (lt_0 x_63 y_10) (div_0 Z_5 x_63 y_10))))
(assert (forall ((r_0 Nat_0) (x_63 Nat_0) (y_10 Nat_0) (z_7 Nat_0))
	(=> (and (ge_0 x_63 y_10) (minus_0 z_7 x_63 y_10) (div_0 r_0 z_7 y_10)) (div_0 (Z_6 r_0) x_63 y_10))))
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_5) (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_64 Nat_0) (x_19 list_0) (z_0 Nat_0) (xs_0 list_0) (x_0 Nat_0))
	(=> (and (gt_0 x_0 Z_5) (take_0 x_19 x_64 xs_0) (minus_0 x_64 x_0 (Z_6 Z_5))) (take_0 (cons_0 z_0 x_19) x_0 (cons_0 z_0 xs_0)))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_5) (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_0 Nat_0))
	(=> (gt_0 x_0 Z_5) (take_0 nil_0 x_0 nil_0))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0))
	(=> (le_0 x_1 y_1) (sort_0 (cons_0 x_1 (cons_0 y_1 nil_0)) x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0))
	(=> (gt_0 x_1 y_1) (sort_0 (cons_0 y_1 (cons_0 x_1 nil_0)) x_1 y_1))))
(assert (forall ((x_24 Bool_0) (y_3 Nat_0) (xs_1 list_0) (y_2 Nat_0))
	(=> (and (le_0 y_2 y_3) (ordered_0 x_24 (cons_0 y_3 xs_1))) (ordered_0 x_24 (cons_0 y_2 (cons_0 y_3 xs_1))))))
(assert (forall ((y_3 Nat_0) (xs_1 list_0) (y_2 Nat_0))
	(=> (gt_0 y_2 y_3) (ordered_0 false_0 (cons_0 y_2 (cons_0 y_3 xs_1))))))
(assert (forall ((y_2 Nat_0))
	(ordered_0 true_0 (cons_0 y_2 nil_0))))
(assert (ordered_0 true_0 nil_0))
(assert (forall ((x_29 Nat_0) (x_30 Nat_0) (y_4 Nat_0) (l_0 list_0))
	(=> (and (length_0 x_30 l_0) (add_0 x_29 (Z_6 Z_5) x_30)) (length_0 x_29 (cons_0 y_4 l_0)))))
(assert (length_0 Z_5 nil_0))
(assert (forall ((x_32 list_0) (x_4 Nat_0))
	(=> (le_0 x_4 Z_5) (drop_0 x_32 x_4 x_32))))
(assert (forall ((x_66 Nat_0) (x_33 list_0) (z_2 Nat_0) (xs_2 list_0) (x_4 Nat_0))
	(=> (and (gt_0 x_4 Z_5) (drop_0 x_33 x_66 xs_2) (minus_0 x_66 x_4 (Z_6 Z_5))) (drop_0 x_33 x_4 (cons_0 z_2 xs_2)))))
(assert (forall ((x_35 list_0) (x_4 Nat_0))
	(=> (le_0 x_4 Z_5) (drop_0 x_35 x_4 x_35))))
(assert (forall ((x_4 Nat_0))
	(=> (gt_0 x_4 Z_5) (drop_0 nil_0 x_4 nil_0))))
(assert (forall ((x_38 list_0) (x_39 list_0) (x_5 Nat_0) (y_6 list_0))
	(=> (and (take_0 x_38 x_5 y_6) (drop_0 x_39 x_5 y_6)) (splitAt_0 (pair_1 x_38 x_39) x_5 y_6))))
(assert (forall ((x_41 list_0) (z_3 Nat_0) (xs_3 list_0) (y_7 list_0))
	(=> (x_6 x_41 xs_3 y_7) (x_6 (cons_0 z_3 x_41) (cons_0 z_3 xs_3) y_7))))
(assert (forall ((x_42 list_0))
	(x_6 x_42 nil_0 x_42)))
(assert (forall ((x_67 Nat_0) (x_68 Nat_0) (x_69 Nat_0) (x_45 list_0) (x_46 list_0) (x_43 Nat_0) (ys_0 list_0) (zs_0 list_0) (x_11 list_0))
	(=> (and (stoogesort_1 x_46 ys_0) (x_6 x_45 x_46 zs_0) (length_0 x_43 x_11) (splitAt_0 (pair_1 ys_0 zs_0) x_69 x_11) (mult_0 x_67 (Z_6 (Z_6 Z_5)) x_43) (add_0 x_68 x_67 (Z_6 Z_5)) (div_0 x_69 x_68 (Z_6 (Z_6 (Z_6 Z_5))))) (stoogesort_0 x_45 x_11))))
(assert (forall ((x_48 list_0) (x_49 list_0) (x_50 list_0) (x_14 Nat_0) (x_15 list_0) (y_9 Nat_0) (y_8 Nat_0))
	(=> (and (stoogesort_0 x_49 (cons_0 y_8 (cons_0 y_9 (cons_0 x_14 x_15)))) (stoogesort_2 x_50 x_49) (stoogesort_0 x_48 x_50)) (stoogesort_1 x_48 (cons_0 y_8 (cons_0 y_9 (cons_0 x_14 x_15)))))))
(assert (forall ((x_52 list_0) (y_9 Nat_0) (y_8 Nat_0))
	(=> (sort_0 x_52 y_8 y_9) (stoogesort_1 x_52 (cons_0 y_8 (cons_0 y_9 nil_0))))))
(assert (forall ((y_8 Nat_0))
	(stoogesort_1 (cons_0 y_8 nil_0) (cons_0 y_8 nil_0))))
(assert (stoogesort_1 nil_0 nil_0))
(assert (forall ((x_70 Nat_0) (x_58 list_0) (x_59 list_0) (x_56 Nat_0) (ys_1 list_0) (zs_1 list_0) (x_16 list_0))
	(=> (and (stoogesort_1 x_59 zs_1) (x_6 x_58 ys_1 x_59) (length_0 x_56 x_16) (splitAt_0 (pair_1 ys_1 zs_1) x_70 x_16) (div_0 x_70 x_56 (Z_6 (Z_6 (Z_6 Z_5))))) (stoogesort_2 x_58 x_16))))
(assert (forall ((x_61 list_0) (x_62 Bool_0) (xs_4 list_0))
	(=> (and (diseqBool_0 x_62 true_0) (stoogesort_1 x_61 xs_4) (ordered_0 x_62 x_61)) false)))
(check-sat)
(get-model)
