(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_0 ) (S_0 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_67 Nat_1) (x_66 Nat_1))
	(=> (= x_67 (S_0 x_66))
	    (unS_1 x_66 x_67))))
(assert (isZ_0 Z_0))
(assert (forall ((x_68 Nat_1))
	(isS_0 (S_0 x_68))))
(assert (forall ((x_69 Nat_1))
	(diseqNat_0 Z_0 (S_0 x_69))))
(assert (forall ((x_70 Nat_1))
	(diseqNat_0 (S_0 x_70) Z_0)))
(assert (forall ((x_71 Nat_1) (x_72 Nat_1))
	(=> (diseqNat_0 x_71 x_72)
	    (diseqNat_0 (S_0 x_71) (S_0 x_72)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_9 Nat_1))
	(add_0 y_9 Z_0 y_9)))
(assert (forall ((x_64 Nat_1) (y_9 Nat_1) (r_1 Nat_1))
	(=> (add_0 r_1 x_64 y_9)
	    (add_0 (S_0 r_1) (S_0 x_64) y_9))))
(assert (forall ((y_9 Nat_1))
	(minus_0 Z_0 Z_0 y_9)))
(assert (forall ((x_64 Nat_1) (y_9 Nat_1) (r_1 Nat_1))
	(=> (minus_0 r_1 x_64 y_9)
	    (minus_0 (S_0 r_1) (S_0 x_64) y_9))))
(assert (forall ((y_9 Nat_1))
	(le_0 Z_0 y_9)))
(assert (forall ((x_64 Nat_1) (y_9 Nat_1))
	(=> (le_0 x_64 y_9)
	    (le_0 (S_0 x_64) (S_0 y_9)))))
(assert (forall ((y_9 Nat_1))
	(ge_0 y_9 Z_0)))
(assert (forall ((x_64 Nat_1) (y_9 Nat_1))
	(=> (ge_0 x_64 y_9)
	    (ge_0 (S_0 x_64) (S_0 y_9)))))
(assert (forall ((y_9 Nat_1))
	(lt_0 Z_0 (S_0 y_9))))
(assert (forall ((x_64 Nat_1) (y_9 Nat_1))
	(=> (lt_0 x_64 y_9)
	    (lt_0 (S_0 x_64) (S_0 y_9)))))
(assert (forall ((y_9 Nat_1))
	(gt_0 (S_0 y_9) Z_0)))
(assert (forall ((x_64 Nat_1) (y_9 Nat_1))
	(=> (gt_0 x_64 y_9)
	    (gt_0 (S_0 x_64) (S_0 y_9)))))
(assert (forall ((y_9 Nat_1))
	(mult_0 Z_0 Z_0 y_9)))
(assert (forall ((x_64 Nat_1) (y_9 Nat_1) (r_1 Nat_1) (z_5 Nat_1))
	(=>	(and (mult_0 r_1 x_64 y_9)
			(add_0 z_5 r_1 y_9))
		(mult_0 z_5 (S_0 x_64) y_9))))
(assert (forall ((x_64 Nat_1) (y_9 Nat_1))
	(=> (lt_0 x_64 y_9)
	    (div_0 Z_0 x_64 y_9))))
(assert (forall ((x_64 Nat_1) (y_9 Nat_1) (r_1 Nat_1) (z_5 Nat_1))
	(=>	(and (ge_0 x_64 y_9)
			(minus_0 z_5 x_64 y_9)
			(div_0 r_1 z_5 y_9))
		(div_0 (S_0 r_1) x_64 y_9))))
(assert (forall ((x_64 Nat_1) (y_9 Nat_1))
	(=> (lt_0 x_64 y_9)
	    (mod_0 x_64 x_64 y_9))))
(assert (forall ((x_64 Nat_1) (y_9 Nat_1) (r_1 Nat_1) (z_5 Nat_1))
	(=>	(and (ge_0 x_64 y_9)
			(minus_0 z_5 x_64 y_9)
			(mod_0 r_1 z_5 y_9))
		(mod_0 r_1 x_64 y_9))))
(declare-datatypes ((Nat_0 0)) (((zero_0 ) (succ_0 (p_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun p_1 (Nat_0 Nat_0) Bool)
(declare-fun iszero_0 (Nat_0) Bool)
(declare-fun issucc_0 (Nat_0) Bool)
(assert (forall ((x_75 Nat_0) (x_74 Nat_0))
	(=> (= x_75 (succ_0 x_74))
	    (p_1 x_74 x_75))))
(assert (iszero_0 zero_0))
(assert (forall ((x_76 Nat_0))
	(issucc_0 (succ_0 x_76))))
(assert (forall ((x_77 Nat_0))
	(diseqNat_1 zero_0 (succ_0 x_77))))
(assert (forall ((x_78 Nat_0))
	(diseqNat_1 (succ_0 x_78) zero_0)))
(assert (forall ((x_79 Nat_0) (x_80 Nat_0))
	(=> (diseqNat_1 x_79 x_80)
	    (diseqNat_1 (succ_0 x_79) (succ_0 x_80)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_84 list_0) (x_82 Nat_0) (x_83 list_0))
	(=> (= x_84 (cons_0 x_82 x_83))
	    (head_1 x_82 x_84))))
(assert (forall ((x_84 list_0) (x_82 Nat_0) (x_83 list_0))
	(=> (= x_84 (cons_0 x_82 x_83))
	    (tail_1 x_83 x_84))))
(assert (isnil_0 nil_0))
(assert (forall ((x_85 Nat_0) (x_86 list_0))
	(iscons_0 (cons_0 x_85 x_86))))
(assert (forall ((x_87 Nat_0) (x_88 list_0))
	(diseqlist_0 nil_0 (cons_0 x_87 x_88))))
(assert (forall ((x_89 Nat_0) (x_90 list_0))
	(diseqlist_0 (cons_0 x_89 x_90) nil_0)))
(assert (forall ((x_91 Nat_0) (x_92 list_0) (x_93 Nat_0) (x_94 list_0))
	(=> (diseqNat_1 x_91 x_93)
	    (diseqlist_0 (cons_0 x_91 x_92) (cons_0 x_93 x_94)))))
(assert (forall ((x_91 Nat_0) (x_92 list_0) (x_93 Nat_0) (x_94 list_0))
	(=> (diseqlist_0 x_92 x_94)
	    (diseqlist_0 (cons_0 x_91 x_92) (cons_0 x_93 x_94)))))
(declare-datatypes ((Heap_0 0)) (((Node_0 (projNode_0 Heap_0) (projNode_1 Nat_0) (projNode_2 Heap_0)) (Nil_0 ))))
(declare-fun diseqHeap_0 (Heap_0 Heap_0) Bool)
(declare-fun projNode_3 (Heap_0 Heap_0) Bool)
(declare-fun projNode_4 (Nat_0 Heap_0) Bool)
(declare-fun projNode_5 (Heap_0 Heap_0) Bool)
(declare-fun isNode_0 (Heap_0) Bool)
(declare-fun isNil_0 (Heap_0) Bool)
(assert (forall ((x_98 Heap_0) (x_95 Heap_0) (x_96 Nat_0) (x_97 Heap_0))
	(=> (= x_98 (Node_0 x_95 x_96 x_97))
	    (projNode_3 x_95 x_98))))
(assert (forall ((x_98 Heap_0) (x_95 Heap_0) (x_96 Nat_0) (x_97 Heap_0))
	(=> (= x_98 (Node_0 x_95 x_96 x_97))
	    (projNode_4 x_96 x_98))))
(assert (forall ((x_98 Heap_0) (x_95 Heap_0) (x_96 Nat_0) (x_97 Heap_0))
	(=> (= x_98 (Node_0 x_95 x_96 x_97))
	    (projNode_5 x_97 x_98))))
(assert (forall ((x_100 Heap_0) (x_101 Nat_0) (x_102 Heap_0))
	(isNode_0 (Node_0 x_100 x_101 x_102))))
(assert (isNil_0 Nil_0))
(assert (forall ((x_103 Heap_0) (x_104 Nat_0) (x_105 Heap_0))
	(diseqHeap_0 (Node_0 x_103 x_104 x_105) Nil_0)))
(assert (forall ((x_106 Heap_0) (x_107 Nat_0) (x_108 Heap_0))
	(diseqHeap_0 Nil_0 (Node_0 x_106 x_107 x_108))))
(assert (forall ((x_109 Heap_0) (x_110 Nat_0) (x_111 Heap_0) (x_112 Heap_0) (x_113 Nat_0) (x_114 Heap_0))
	(=> (diseqHeap_0 x_109 x_112)
	    (diseqHeap_0 (Node_0 x_109 x_110 x_111) (Node_0 x_112 x_113 x_114)))))
(assert (forall ((x_109 Heap_0) (x_110 Nat_0) (x_111 Heap_0) (x_112 Heap_0) (x_113 Nat_0) (x_114 Heap_0))
	(=> (diseqNat_1 x_110 x_113)
	    (diseqHeap_0 (Node_0 x_109 x_110 x_111) (Node_0 x_112 x_113 x_114)))))
(assert (forall ((x_109 Heap_0) (x_110 Nat_0) (x_111 Heap_0) (x_112 Heap_0) (x_113 Nat_0) (x_114 Heap_0))
	(=> (diseqHeap_0 x_111 x_114)
	    (diseqHeap_0 (Node_0 x_109 x_110 x_111) (Node_0 x_112 x_113 x_114)))))
(declare-fun plus_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_19 Nat_0) (x_20 Nat_0))
	(=>	(and (= x_19 (succ_0 x_20))
			(plus_0 x_20 z_0 y_0)
			(= x_0 (succ_0 z_0)))
		(plus_0 x_19 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_21 Nat_0))
	(=>	(and (= x_21 y_0)
			(= x_0 zero_0))
		(plus_0 x_21 x_0 y_0))))
(declare-fun leq_0 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (z_1 Nat_0) (x_2 Nat_0) (x_22 Bool) (x_23 Bool))
	(=>	(and (= x_22 x_23)
			(leq_0 x_23 z_1 x_2)
			(= x_1 (succ_0 z_1))
			(= y_1 (succ_0 x_2)))
		(leq_0 x_22 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (z_1 Nat_0) (x_24 Bool))
	(=>	(and (= x_24 false)
			(= x_1 (succ_0 z_1))
			(= y_1 zero_0))
		(leq_0 x_24 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (x_25 Bool))
	(=>	(and (= x_25 true)
			(= x_1 zero_0))
		(leq_0 x_25 x_1 y_1))))
(declare-fun hmerge_0 (Heap_0 Heap_0 Heap_0) Bool)
(assert (forall ((x_3 Heap_0) (y_2 Heap_0) (x_26 Heap_0))
	(=>	(and (= x_26 y_2)
			(= x_3 Nil_0))
		(hmerge_0 x_26 x_3 y_2))))
(assert (forall ((x_3 Heap_0) (y_2 Heap_0) (z_2 Heap_0) (x_4 Nat_0) (x_5 Heap_0) (x_27 Heap_0))
	(=>	(and (= x_27 (Node_0 z_2 x_4 x_5))
			(= x_3 (Node_0 z_2 x_4 x_5))
			(= y_2 Nil_0))
		(hmerge_0 x_27 x_3 y_2))))
(assert (forall ((x_3 Heap_0) (y_2 Heap_0) (z_2 Heap_0) (x_4 Nat_0) (x_5 Heap_0) (x_6 Heap_0) (x_7 Nat_0) (x_8 Heap_0) (x_29 Heap_0) (x_30 Heap_0) (x_28 Bool))
	(=>	(and (= x_29 (Node_0 x_30 x_4 z_2))
			(hmerge_0 x_30 x_5 (Node_0 x_6 x_7 x_8))
			(= x_3 (Node_0 z_2 x_4 x_5))
			(= y_2 (Node_0 x_6 x_7 x_8))
			(= x_28 true)
			(leq_0 x_28 x_4 x_7))
		(hmerge_0 x_29 x_3 y_2))))
(assert (forall ((x_3 Heap_0) (y_2 Heap_0) (z_2 Heap_0) (x_4 Nat_0) (x_5 Heap_0) (x_6 Heap_0) (x_7 Nat_0) (x_8 Heap_0) (x_32 Heap_0) (x_33 Heap_0) (x_31 Bool))
	(=>	(and (= x_32 (Node_0 x_33 x_7 x_6))
			(hmerge_0 x_33 (Node_0 z_2 x_4 x_5) x_8)
			(= x_3 (Node_0 z_2 x_4 x_5))
			(= y_2 (Node_0 x_6 x_7 x_8))
			(= x_31 false)
			(leq_0 x_31 x_4 x_7))
		(hmerge_0 x_32 x_3 y_2))))
(declare-fun toList_0 (list_0 Heap_0) Bool)
(assert (forall ((x_9 Heap_0) (x_34 list_0))
	(=>	(and (= x_34 nil_0)
			(= x_9 Nil_0))
		(toList_0 x_34 x_9))))
(assert (forall ((x_9 Heap_0) (q_0 Heap_0) (y_3 Nat_0) (r_0 Heap_0) (x_35 list_0) (x_36 Heap_0) (x_37 list_0))
	(=>	(and (= x_35 (cons_0 y_3 x_37))
			(hmerge_0 x_36 q_0 r_0)
			(toList_0 x_37 x_36)
			(= x_9 (Node_0 q_0 y_3 r_0)))
		(toList_0 x_35 x_9))))
(declare-fun hinsert_0 (Heap_0 Nat_0 Heap_0) Bool)
(assert (forall ((x_10 Nat_0) (y_4 Heap_0) (x_38 Heap_0) (x_39 Heap_0))
	(=>	(and (= x_38 x_39)
			(hmerge_0 x_39 (Node_0 Nil_0 x_10 Nil_0) y_4))
		(hinsert_0 x_38 x_10 y_4))))
(declare-fun toHeap_0 (Heap_0 list_0) Bool)
(assert (forall ((x_11 list_0) (y_5 Nat_0) (xs_0 list_0) (x_40 Heap_0) (x_41 Heap_0) (x_42 Heap_0))
	(=>	(and (= x_40 x_42)
			(toHeap_0 x_41 xs_0)
			(hinsert_0 x_42 y_5 x_41)
			(= x_11 (cons_0 y_5 xs_0)))
		(toHeap_0 x_40 x_11))))
(assert (forall ((x_11 list_0) (x_43 Heap_0))
	(=>	(and (= x_43 Nil_0)
			(= x_11 nil_0))
		(toHeap_0 x_43 x_11))))
(declare-fun hsort_0 (list_0 list_0) Bool)
(assert (forall ((x_12 list_0) (x_44 list_0) (x_45 Heap_0) (x_46 list_0))
	(=>	(and (= x_44 x_46)
			(toHeap_0 x_45 x_12)
			(toList_0 x_46 x_45))
		(hsort_0 x_44 x_12))))
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_13 Nat_0) (y_6 list_0) (z_3 Nat_0) (ys_0 list_0) (x_47 Nat_0) (x_48 Nat_0) (x_49 Nat_0))
	(=>	(and (= x_47 x_49)
			(count_0 x_48 x_13 ys_0)
			(plus_0 x_49 (succ_0 zero_0) x_48)
			(= y_6 (cons_0 z_3 ys_0))
			(= x_13 z_3))
		(count_0 x_47 x_13 y_6))))
(assert (forall ((x_13 Nat_0) (y_6 list_0) (z_3 Nat_0) (ys_0 list_0) (x_50 Nat_0) (x_51 Nat_0))
	(=>	(and (= x_50 x_51)
			(count_0 x_51 x_13 ys_0)
			(= y_6 (cons_0 z_3 ys_0))
			(diseqNat_1 x_13 z_3))
		(count_0 x_50 x_13 y_6))))
(assert (forall ((x_13 Nat_0) (y_6 list_0) (x_52 Nat_0))
	(=>	(and (= x_52 zero_0)
			(= y_6 nil_0))
		(count_0 x_52 x_13 y_6))))
(assert (forall ((x_14 Nat_0) (y_7 Nat_0) (z_4 Nat_0) (x_53 Nat_0) (x_54 Nat_0) (x_55 Nat_0) (x_56 Nat_0))
	(=>	(and (diseqNat_1 x_54 x_56)
			(plus_0 x_53 y_7 z_4)
			(plus_0 x_54 x_14 x_53)
			(plus_0 x_55 x_14 y_7)
			(plus_0 x_56 x_55 z_4))
		false)))
(assert (forall ((x_15 Nat_0) (y_8 Nat_0) (x_57 Nat_0) (x_58 Nat_0))
	(=>	(and (diseqNat_1 x_57 x_58)
			(plus_0 x_57 x_15 y_8)
			(plus_0 x_58 y_8 x_15))
		false)))
(assert (forall ((x_16 Nat_0) (x_59 Nat_0))
	(=>	(and (diseqNat_1 x_59 x_16)
			(plus_0 x_59 x_16 zero_0))
		false)))
(assert (forall ((x_17 Nat_0) (x_60 Nat_0))
	(=>	(and (diseqNat_1 x_60 x_17)
			(plus_0 x_60 zero_0 x_17))
		false)))
(assert (forall ((x_18 Nat_0) (xs_1 list_0) (x_61 list_0) (x_62 Nat_0) (x_63 Nat_0))
	(=>	(and (diseqNat_1 x_62 x_63)
			(hsort_0 x_61 xs_1)
			(count_0 x_62 x_18 x_61)
			(count_0 x_63 x_18 xs_1))
		false)))
(check-sat)
