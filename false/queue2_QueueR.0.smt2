(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_181 Nat_0) (x_180 Nat_0))
	(=> (= x_181 (S_0 x_180))
	    (unS_1 x_180 x_181))))
(assert (isZ_0 Z_0))
(assert (forall ((x_182 Nat_0))
	(isS_0 (S_0 x_182))))
(assert (forall ((x_183 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_183))))
(assert (forall ((x_184 Nat_0))
	(diseqNat_0 (S_0 x_184) Z_0)))
(assert (forall ((x_185 Nat_0) (x_186 Nat_0))
	(=> (diseqNat_0 x_185 x_186)
	    (diseqNat_0 (S_0 x_185) (S_0 x_186)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_21 Nat_0))
	(add_0 y_21 Z_0 y_21)))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0) (r_1 Nat_0))
	(=> (add_0 r_1 x_174 y_21)
	    (add_0 (S_0 r_1) (S_0 x_174) y_21))))
(assert (forall ((y_21 Nat_0))
	(minus_0 Z_0 Z_0 y_21)))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0) (r_1 Nat_0))
	(=> (minus_0 r_1 x_174 y_21)
	    (minus_0 (S_0 r_1) (S_0 x_174) y_21))))
(assert (forall ((y_21 Nat_0))
	(le_0 Z_0 y_21)))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0))
	(=> (le_0 x_174 y_21)
	    (le_0 (S_0 x_174) (S_0 y_21)))))
(assert (forall ((y_21 Nat_0))
	(ge_0 y_21 Z_0)))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0))
	(=> (ge_0 x_174 y_21)
	    (ge_0 (S_0 x_174) (S_0 y_21)))))
(assert (forall ((y_21 Nat_0))
	(lt_0 Z_0 (S_0 y_21))))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_174 y_21)
	    (lt_0 (S_0 x_174) (S_0 y_21)))))
(assert (forall ((y_21 Nat_0))
	(gt_0 (S_0 y_21) Z_0)))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0))
	(=> (gt_0 x_174 y_21)
	    (gt_0 (S_0 x_174) (S_0 y_21)))))
(assert (forall ((y_21 Nat_0))
	(mult_0 Z_0 Z_0 y_21)))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0) (r_1 Nat_0) (z_14 Nat_0))
	(=>	(and (mult_0 r_1 x_174 y_21)
			(add_0 z_14 r_1 y_21))
		(mult_0 z_14 (S_0 x_174) y_21))))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_174 y_21)
	    (div_0 Z_0 x_174 y_21))))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0) (r_1 Nat_0) (z_14 Nat_0))
	(=>	(and (ge_0 x_174 y_21)
			(minus_0 z_14 x_174 y_21)
			(div_0 r_1 z_14 y_21))
		(div_0 (S_0 r_1) x_174 y_21))))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_174 y_21)
	    (mod_0 x_174 x_174 y_21))))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0) (r_1 Nat_0) (z_14 Nat_0))
	(=>	(and (ge_0 x_174 y_21)
			(minus_0 z_14 x_174 y_21)
			(mod_0 r_1 z_14 y_21))
		(mod_0 r_1 x_174 y_21))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Nat_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_4 (Nat_0 pair_0) Bool)
(declare-fun projpair_5 (Nat_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_189 pair_0) (x_187 Nat_0) (x_188 Nat_0))
	(=> (= x_189 (pair_1 x_187 x_188))
	    (projpair_4 x_187 x_189))))
(assert (forall ((x_189 pair_0) (x_187 Nat_0) (x_188 Nat_0))
	(=> (= x_189 (pair_1 x_187 x_188))
	    (projpair_5 x_188 x_189))))
(assert (forall ((x_190 Nat_0) (x_191 Nat_0))
	(ispair_0 (pair_1 x_190 x_191))))
(assert (forall ((x_192 Nat_0) (x_193 Nat_0) (x_194 Nat_0) (x_195 Nat_0))
	(=> (diseqNat_0 x_192 x_194)
	    (diseqpair_0 (pair_1 x_192 x_193) (pair_1 x_194 x_195)))))
(assert (forall ((x_192 Nat_0) (x_193 Nat_0) (x_194 Nat_0) (x_195 Nat_0))
	(=> (diseqNat_0 x_193 x_195)
	    (diseqpair_0 (pair_1 x_192 x_193) (pair_1 x_194 x_195)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_2 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_199 list_0) (x_197 Nat_0) (x_198 list_0))
	(=> (= x_199 (cons_0 x_197 x_198))
	    (head_1 x_197 x_199))))
(assert (forall ((x_199 list_0) (x_197 Nat_0) (x_198 list_0))
	(=> (= x_199 (cons_0 x_197 x_198))
	    (tail_2 x_198 x_199))))
(assert (isnil_0 nil_0))
(assert (forall ((x_200 Nat_0) (x_201 list_0))
	(iscons_0 (cons_0 x_200 x_201))))
(assert (forall ((x_202 Nat_0) (x_203 list_0))
	(diseqlist_0 nil_0 (cons_0 x_202 x_203))))
(assert (forall ((x_204 Nat_0) (x_205 list_0))
	(diseqlist_0 (cons_0 x_204 x_205) nil_0)))
(assert (forall ((x_206 Nat_0) (x_207 list_0) (x_208 Nat_0) (x_209 list_0))
	(=> (diseqNat_0 x_206 x_208)
	    (diseqlist_0 (cons_0 x_206 x_207) (cons_0 x_208 x_209)))))
(assert (forall ((x_206 Nat_0) (x_207 list_0) (x_208 Nat_0) (x_209 list_0))
	(=> (diseqlist_0 x_207 x_209)
	    (diseqlist_0 (cons_0 x_206 x_207) (cons_0 x_208 x_209)))))
(declare-datatypes ((pair_2 0)) (((pair_3 (projpair_2 list_0) (projpair_3 list_0)))))
(declare-fun diseqpair_1 (pair_2 pair_2) Bool)
(declare-fun projpair_6 (list_0 pair_2) Bool)
(declare-fun projpair_7 (list_0 pair_2) Bool)
(declare-fun ispair_1 (pair_2) Bool)
(assert (forall ((x_212 pair_2) (x_210 list_0) (x_211 list_0))
	(=> (= x_212 (pair_3 x_210 x_211))
	    (projpair_6 x_210 x_212))))
(assert (forall ((x_212 pair_2) (x_210 list_0) (x_211 list_0))
	(=> (= x_212 (pair_3 x_210 x_211))
	    (projpair_7 x_211 x_212))))
(assert (forall ((x_213 list_0) (x_214 list_0))
	(ispair_1 (pair_3 x_213 x_214))))
(assert (forall ((x_215 list_0) (x_216 list_0) (x_217 list_0) (x_218 list_0))
	(=> (diseqlist_0 x_215 x_217)
	    (diseqpair_1 (pair_3 x_215 x_216) (pair_3 x_217 x_218)))))
(assert (forall ((x_215 list_0) (x_216 list_0) (x_217 list_0) (x_218 list_0))
	(=> (diseqlist_0 x_216 x_218)
	    (diseqpair_1 (pair_3 x_215 x_216) (pair_3 x_217 x_218)))))
(declare-datatypes ((Q_0 0)) (((Q_1 (projQ_0 list_0) (projQ_1 list_0)))))
(declare-fun diseqQ_0 (Q_0 Q_0) Bool)
(declare-fun projQ_2 (list_0 Q_0) Bool)
(declare-fun projQ_3 (list_0 Q_0) Bool)
(declare-fun isQ_0 (Q_0) Bool)
(assert (forall ((x_221 Q_0) (x_219 list_0) (x_220 list_0))
	(=> (= x_221 (Q_1 x_219 x_220))
	    (projQ_2 x_219 x_221))))
(assert (forall ((x_221 Q_0) (x_219 list_0) (x_220 list_0))
	(=> (= x_221 (Q_1 x_219 x_220))
	    (projQ_3 x_220 x_221))))
(assert (forall ((x_222 list_0) (x_223 list_0))
	(isQ_0 (Q_1 x_222 x_223))))
(assert (forall ((x_224 list_0) (x_225 list_0) (x_226 list_0) (x_227 list_0))
	(=> (diseqlist_0 x_224 x_226)
	    (diseqQ_0 (Q_1 x_224 x_225) (Q_1 x_226 x_227)))))
(assert (forall ((x_224 list_0) (x_225 list_0) (x_226 list_0) (x_227 list_0))
	(=> (diseqlist_0 x_225 x_227)
	    (diseqQ_0 (Q_1 x_224 x_225) (Q_1 x_226 x_227)))))
(declare-datatypes ((Maybe_0 0)) (((Nothing_0 ) (Just_0 (projJust_0 Nat_0)))))
(declare-fun diseqMaybe_0 (Maybe_0 Maybe_0) Bool)
(declare-fun projJust_2 (Nat_0 Maybe_0) Bool)
(declare-fun isNothing_0 (Maybe_0) Bool)
(declare-fun isJust_0 (Maybe_0) Bool)
(assert (forall ((x_230 Maybe_0) (x_229 Nat_0))
	(=> (= x_230 (Just_0 x_229))
	    (projJust_2 x_229 x_230))))
(assert (isNothing_0 Nothing_0))
(assert (forall ((x_231 Nat_0))
	(isJust_0 (Just_0 x_231))))
(assert (forall ((x_232 Nat_0))
	(diseqMaybe_0 Nothing_0 (Just_0 x_232))))
(assert (forall ((x_233 Nat_0))
	(diseqMaybe_0 (Just_0 x_233) Nothing_0)))
(assert (forall ((x_234 Nat_0) (x_235 Nat_0))
	(=> (diseqNat_0 x_234 x_235)
	    (diseqMaybe_0 (Just_0 x_234) (Just_0 x_235)))))
(declare-datatypes ((Maybe_1 0)) (((Nothing_1 ) (Just_1 (projJust_1 Q_0)))))
(declare-fun diseqMaybe_1 (Maybe_1 Maybe_1) Bool)
(declare-fun projJust_3 (Q_0 Maybe_1) Bool)
(declare-fun isNothing_1 (Maybe_1) Bool)
(declare-fun isJust_1 (Maybe_1) Bool)
(assert (forall ((x_238 Maybe_1) (x_237 Q_0))
	(=> (= x_238 (Just_1 x_237))
	    (projJust_3 x_237 x_238))))
(assert (isNothing_1 Nothing_1))
(assert (forall ((x_239 Q_0))
	(isJust_1 (Just_1 x_239))))
(assert (forall ((x_240 Q_0))
	(diseqMaybe_1 Nothing_1 (Just_1 x_240))))
(assert (forall ((x_241 Q_0))
	(diseqMaybe_1 (Just_1 x_241) Nothing_1)))
(assert (forall ((x_242 Q_0) (x_243 Q_0))
	(=> (diseqQ_0 x_242 x_243)
	    (diseqMaybe_1 (Just_1 x_242) (Just_1 x_243)))))
(declare-datatypes ((E_0 0)) (((Empty_0 ) (EnqL_0 (projEnqL_0 Nat_0) (projEnqL_1 E_0)) (EnqR_0 (projEnqR_0 E_0) (projEnqR_1 Nat_0)) (DeqL_0 (projDeqL_0 E_0)) (DeqR_0 (projDeqR_0 E_0)) (App_0 (projApp_0 E_0) (projApp_1 E_0)))))
(declare-fun diseqE_0 (E_0 E_0) Bool)
(declare-fun projEnqL_2 (Nat_0 E_0) Bool)
(declare-fun projEnqL_3 (E_0 E_0) Bool)
(declare-fun projEnqR_2 (E_0 E_0) Bool)
(declare-fun projEnqR_3 (Nat_0 E_0) Bool)
(declare-fun projDeqL_1 (E_0 E_0) Bool)
(declare-fun projDeqR_1 (E_0 E_0) Bool)
(declare-fun projApp_2 (E_0 E_0) Bool)
(declare-fun projApp_3 (E_0 E_0) Bool)
(declare-fun isEmpty_0 (E_0) Bool)
(declare-fun isEnqL_0 (E_0) Bool)
(declare-fun isEnqR_0 (E_0) Bool)
(declare-fun isDeqL_0 (E_0) Bool)
(declare-fun isDeqR_0 (E_0) Bool)
(declare-fun isApp_0 (E_0) Bool)
(assert (forall ((x_247 E_0) (x_245 Nat_0) (x_246 E_0))
	(=> (= x_247 (EnqL_0 x_245 x_246))
	    (projEnqL_2 x_245 x_247))))
(assert (forall ((x_247 E_0) (x_245 Nat_0) (x_246 E_0))
	(=> (= x_247 (EnqL_0 x_245 x_246))
	    (projEnqL_3 x_246 x_247))))
(assert (forall ((x_250 E_0) (x_248 E_0) (x_249 Nat_0))
	(=> (= x_250 (EnqR_0 x_248 x_249))
	    (projEnqR_2 x_248 x_250))))
(assert (forall ((x_250 E_0) (x_248 E_0) (x_249 Nat_0))
	(=> (= x_250 (EnqR_0 x_248 x_249))
	    (projEnqR_3 x_249 x_250))))
(assert (forall ((x_252 E_0) (x_251 E_0))
	(=> (= x_252 (DeqL_0 x_251))
	    (projDeqL_1 x_251 x_252))))
(assert (forall ((x_254 E_0) (x_253 E_0))
	(=> (= x_254 (DeqR_0 x_253))
	    (projDeqR_1 x_253 x_254))))
(assert (forall ((x_257 E_0) (x_255 E_0) (x_256 E_0))
	(=> (= x_257 (App_0 x_255 x_256))
	    (projApp_2 x_255 x_257))))
(assert (forall ((x_257 E_0) (x_255 E_0) (x_256 E_0))
	(=> (= x_257 (App_0 x_255 x_256))
	    (projApp_3 x_256 x_257))))
(assert (isEmpty_0 Empty_0))
(assert (forall ((x_258 Nat_0) (x_259 E_0))
	(isEnqL_0 (EnqL_0 x_258 x_259))))
(assert (forall ((x_260 E_0) (x_261 Nat_0))
	(isEnqR_0 (EnqR_0 x_260 x_261))))
(assert (forall ((x_262 E_0))
	(isDeqL_0 (DeqL_0 x_262))))
(assert (forall ((x_263 E_0))
	(isDeqR_0 (DeqR_0 x_263))))
(assert (forall ((x_264 E_0) (x_265 E_0))
	(isApp_0 (App_0 x_264 x_265))))
(assert (forall ((x_266 Nat_0) (x_267 E_0))
	(diseqE_0 Empty_0 (EnqL_0 x_266 x_267))))
(assert (forall ((x_268 E_0) (x_269 Nat_0))
	(diseqE_0 Empty_0 (EnqR_0 x_268 x_269))))
(assert (forall ((x_270 E_0))
	(diseqE_0 Empty_0 (DeqL_0 x_270))))
(assert (forall ((x_271 E_0))
	(diseqE_0 Empty_0 (DeqR_0 x_271))))
(assert (forall ((x_272 E_0) (x_273 E_0))
	(diseqE_0 Empty_0 (App_0 x_272 x_273))))
(assert (forall ((x_274 Nat_0) (x_275 E_0))
	(diseqE_0 (EnqL_0 x_274 x_275) Empty_0)))
(assert (forall ((x_276 E_0) (x_277 Nat_0))
	(diseqE_0 (EnqR_0 x_276 x_277) Empty_0)))
(assert (forall ((x_278 E_0))
	(diseqE_0 (DeqL_0 x_278) Empty_0)))
(assert (forall ((x_279 E_0))
	(diseqE_0 (DeqR_0 x_279) Empty_0)))
(assert (forall ((x_280 E_0) (x_281 E_0))
	(diseqE_0 (App_0 x_280 x_281) Empty_0)))
(assert (forall ((x_282 Nat_0) (x_283 E_0) (x_284 E_0) (x_285 Nat_0))
	(diseqE_0 (EnqL_0 x_282 x_283) (EnqR_0 x_284 x_285))))
(assert (forall ((x_286 Nat_0) (x_287 E_0) (x_288 E_0))
	(diseqE_0 (EnqL_0 x_286 x_287) (DeqL_0 x_288))))
(assert (forall ((x_289 Nat_0) (x_290 E_0) (x_291 E_0))
	(diseqE_0 (EnqL_0 x_289 x_290) (DeqR_0 x_291))))
(assert (forall ((x_292 Nat_0) (x_293 E_0) (x_294 E_0) (x_295 E_0))
	(diseqE_0 (EnqL_0 x_292 x_293) (App_0 x_294 x_295))))
(assert (forall ((x_296 E_0) (x_297 Nat_0) (x_298 Nat_0) (x_299 E_0))
	(diseqE_0 (EnqR_0 x_296 x_297) (EnqL_0 x_298 x_299))))
(assert (forall ((x_300 E_0) (x_301 Nat_0) (x_302 E_0))
	(diseqE_0 (DeqL_0 x_300) (EnqL_0 x_301 x_302))))
(assert (forall ((x_303 E_0) (x_304 Nat_0) (x_305 E_0))
	(diseqE_0 (DeqR_0 x_303) (EnqL_0 x_304 x_305))))
(assert (forall ((x_306 E_0) (x_307 E_0) (x_308 Nat_0) (x_309 E_0))
	(diseqE_0 (App_0 x_306 x_307) (EnqL_0 x_308 x_309))))
(assert (forall ((x_310 E_0) (x_311 Nat_0) (x_312 E_0))
	(diseqE_0 (EnqR_0 x_310 x_311) (DeqL_0 x_312))))
(assert (forall ((x_313 E_0) (x_314 Nat_0) (x_315 E_0))
	(diseqE_0 (EnqR_0 x_313 x_314) (DeqR_0 x_315))))
(assert (forall ((x_316 E_0) (x_317 Nat_0) (x_318 E_0) (x_319 E_0))
	(diseqE_0 (EnqR_0 x_316 x_317) (App_0 x_318 x_319))))
(assert (forall ((x_320 E_0) (x_321 E_0) (x_322 Nat_0))
	(diseqE_0 (DeqL_0 x_320) (EnqR_0 x_321 x_322))))
(assert (forall ((x_323 E_0) (x_324 E_0) (x_325 Nat_0))
	(diseqE_0 (DeqR_0 x_323) (EnqR_0 x_324 x_325))))
(assert (forall ((x_326 E_0) (x_327 E_0) (x_328 E_0) (x_329 Nat_0))
	(diseqE_0 (App_0 x_326 x_327) (EnqR_0 x_328 x_329))))
(assert (forall ((x_330 E_0) (x_331 E_0))
	(diseqE_0 (DeqL_0 x_330) (DeqR_0 x_331))))
(assert (forall ((x_332 E_0) (x_333 E_0) (x_334 E_0))
	(diseqE_0 (DeqL_0 x_332) (App_0 x_333 x_334))))
(assert (forall ((x_335 E_0) (x_336 E_0))
	(diseqE_0 (DeqR_0 x_335) (DeqL_0 x_336))))
(assert (forall ((x_337 E_0) (x_338 E_0) (x_339 E_0))
	(diseqE_0 (App_0 x_337 x_338) (DeqL_0 x_339))))
(assert (forall ((x_340 E_0) (x_341 E_0) (x_342 E_0))
	(diseqE_0 (DeqR_0 x_340) (App_0 x_341 x_342))))
(assert (forall ((x_343 E_0) (x_344 E_0) (x_345 E_0))
	(diseqE_0 (App_0 x_343 x_344) (DeqR_0 x_345))))
(assert (forall ((x_346 Nat_0) (x_347 E_0) (x_348 Nat_0) (x_349 E_0))
	(=> (diseqNat_0 x_346 x_348)
	    (diseqE_0 (EnqL_0 x_346 x_347) (EnqL_0 x_348 x_349)))))
(assert (forall ((x_346 Nat_0) (x_347 E_0) (x_348 Nat_0) (x_349 E_0))
	(=> (diseqE_0 x_347 x_349)
	    (diseqE_0 (EnqL_0 x_346 x_347) (EnqL_0 x_348 x_349)))))
(assert (forall ((x_350 E_0) (x_351 Nat_0) (x_352 E_0) (x_353 Nat_0))
	(=> (diseqE_0 x_350 x_352)
	    (diseqE_0 (EnqR_0 x_350 x_351) (EnqR_0 x_352 x_353)))))
(assert (forall ((x_350 E_0) (x_351 Nat_0) (x_352 E_0) (x_353 Nat_0))
	(=> (diseqNat_0 x_351 x_353)
	    (diseqE_0 (EnqR_0 x_350 x_351) (EnqR_0 x_352 x_353)))))
(assert (forall ((x_354 E_0) (x_355 E_0))
	(=> (diseqE_0 x_354 x_355)
	    (diseqE_0 (DeqL_0 x_354) (DeqL_0 x_355)))))
(assert (forall ((x_356 E_0) (x_357 E_0))
	(=> (diseqE_0 x_356 x_357)
	    (diseqE_0 (DeqR_0 x_356) (DeqR_0 x_357)))))
(assert (forall ((x_358 E_0) (x_359 E_0) (x_360 E_0) (x_361 E_0))
	(=> (diseqE_0 x_358 x_360)
	    (diseqE_0 (App_0 x_358 x_359) (App_0 x_360 x_361)))))
(assert (forall ((x_358 E_0) (x_359 E_0) (x_360 E_0) (x_361 E_0))
	(=> (diseqE_0 x_359 x_361)
	    (diseqE_0 (App_0 x_358 x_359) (App_0 x_360 x_361)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_48 list_0))
	(=>	(and (= x_48 nil_0)
			(le_0 x_0 Z_0))
		(take_0 x_48 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (xs_0 list_0) (x_49 list_0) (x_50 list_0) (x_175 Nat_0))
	(=>	(and (= x_49 (cons_0 z_0 x_50))
			(take_0 x_50 x_175 xs_0)
			(gt_0 x_0 Z_0)
			(= y_0 (cons_0 z_0 xs_0))
			(minus_0 x_175 x_0 (S_0 Z_0)))
		(take_0 x_49 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_51 list_0))
	(=>	(and (= x_51 nil_0)
			(le_0 x_0 Z_0))
		(take_0 x_51 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_52 list_0))
	(=>	(and (= x_52 nil_0)
			(gt_0 x_0 Z_0)
			(= y_0 nil_0))
		(take_0 x_52 x_0 y_0))))
(declare-fun tail_1 (list_0 list_0) Bool)
(assert (forall ((x_1 list_0) (y_1 Nat_0) (xs_1 list_0) (x_53 list_0))
	(=>	(and (= x_53 xs_1)
			(= x_1 (cons_0 y_1 xs_1)))
		(tail_1 x_53 x_1))))
(assert (forall ((x_1 list_0) (x_54 list_0))
	(=>	(and (= x_54 nil_0)
			(= x_1 nil_0))
		(tail_1 x_54 x_1))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_2 list_0) (y_2 Nat_0) (l_0 list_0) (x_55 Nat_0) (x_56 Nat_0) (x_176 Nat_0))
	(=>	(and (= x_55 x_176)
			(length_0 x_56 l_0)
			(= x_2 (cons_0 y_2 l_0))
			(add_0 x_176 (S_0 Z_0) x_56))
		(length_0 x_55 x_2))))
(assert (forall ((x_2 list_0) (x_57 Nat_0))
	(=>	(and (= x_57 Z_0)
			(= x_2 nil_0))
		(length_0 x_57 x_2))))
(declare-fun last_0 (Maybe_0 list_0) Bool)
(assert (forall ((x_3 list_0) (y_3 Nat_0) (z_1 list_0) (x_4 Nat_0) (x_5 list_0) (x_58 Maybe_0) (x_59 Maybe_0))
	(=>	(and (= x_58 x_59)
			(last_0 x_59 (cons_0 x_4 x_5))
			(= x_3 (cons_0 y_3 z_1))
			(= z_1 (cons_0 x_4 x_5)))
		(last_0 x_58 x_3))))
(assert (forall ((x_3 list_0) (y_3 Nat_0) (z_1 list_0) (x_60 Maybe_0))
	(=>	(and (= x_60 (Just_0 y_3))
			(= x_3 (cons_0 y_3 z_1))
			(= z_1 nil_0))
		(last_0 x_60 x_3))))
(assert (forall ((x_3 list_0) (x_61 Maybe_0))
	(=>	(and (= x_61 Nothing_0)
			(= x_3 nil_0))
		(last_0 x_61 x_3))))
(declare-fun init_0 (list_0 list_0) Bool)
(assert (forall ((x_6 list_0) (y_4 Nat_0) (z_2 list_0) (x_7 Nat_0) (x_8 list_0) (x_62 list_0) (x_63 list_0))
	(=>	(and (= x_62 (cons_0 y_4 x_63))
			(init_0 x_63 (cons_0 x_7 x_8))
			(= x_6 (cons_0 y_4 z_2))
			(= z_2 (cons_0 x_7 x_8)))
		(init_0 x_62 x_6))))
(assert (forall ((x_6 list_0) (y_4 Nat_0) (z_2 list_0) (x_64 list_0))
	(=>	(and (= x_64 nil_0)
			(= x_6 (cons_0 y_4 z_2))
			(= z_2 nil_0))
		(init_0 x_64 x_6))))
(assert (forall ((x_6 list_0) (x_65 list_0))
	(=>	(and (= x_65 nil_0)
			(= x_6 nil_0))
		(init_0 x_65 x_6))))
(declare-fun fstR_0 (Maybe_0 Q_0) Bool)
(assert (forall ((x_9 Q_0) (y_5 list_0) (z_3 list_0) (fail_0 Maybe_0) (y_6 Nat_0) (x_10 list_0) (x_11 Nat_0) (x_12 list_0) (x_13 Nat_0) (x_14 list_0) (x_66 Maybe_0))
	(=>	(and (= x_66 fail_0)
			(= x_9 (Q_1 y_5 z_3))
			(= fail_0 (Just_0 y_6))
			(= z_3 (cons_0 y_6 x_10))
			(= y_5 (cons_0 x_11 x_12))
			(= x_12 (cons_0 x_13 x_14)))
		(fstR_0 x_66 x_9))))
(assert (forall ((x_9 Q_0) (y_5 list_0) (z_3 list_0) (fail_0 Maybe_0) (y_6 Nat_0) (x_10 list_0) (x_11 Nat_0) (x_12 list_0) (x_15 Nat_0) (x_16 list_0) (x_67 Maybe_0))
	(=>	(and (= x_67 fail_0)
			(= x_9 (Q_1 y_5 z_3))
			(= fail_0 (Just_0 y_6))
			(= z_3 (cons_0 y_6 x_10))
			(= y_5 (cons_0 x_11 x_12))
			(= x_12 nil_0)
			(= z_3 (cons_0 x_15 x_16)))
		(fstR_0 x_67 x_9))))
(assert (forall ((x_9 Q_0) (y_5 list_0) (z_3 list_0) (fail_0 Maybe_0) (y_6 Nat_0) (x_10 list_0) (x_11 Nat_0) (x_12 list_0) (x_68 Maybe_0))
	(=>	(and (= x_68 (Just_0 x_11))
			(= x_9 (Q_1 y_5 z_3))
			(= fail_0 (Just_0 y_6))
			(= z_3 (cons_0 y_6 x_10))
			(= y_5 (cons_0 x_11 x_12))
			(= x_12 nil_0)
			(= z_3 nil_0))
		(fstR_0 x_68 x_9))))
(assert (forall ((x_9 Q_0) (y_5 list_0) (z_3 list_0) (fail_0 Maybe_0) (y_6 Nat_0) (x_10 list_0) (x_69 Maybe_0))
	(=>	(and (= x_69 fail_0)
			(= x_9 (Q_1 y_5 z_3))
			(= fail_0 (Just_0 y_6))
			(= z_3 (cons_0 y_6 x_10))
			(= y_5 nil_0))
		(fstR_0 x_69 x_9))))
(assert (forall ((x_9 Q_0) (y_5 list_0) (z_3 list_0) (fail_0 Maybe_0) (x_11 Nat_0) (x_12 list_0) (x_13 Nat_0) (x_14 list_0) (x_70 Maybe_0))
	(=>	(and (= x_70 fail_0)
			(= x_9 (Q_1 y_5 z_3))
			(= fail_0 Nothing_0)
			(= z_3 nil_0)
			(= y_5 (cons_0 x_11 x_12))
			(= x_12 (cons_0 x_13 x_14)))
		(fstR_0 x_70 x_9))))
(assert (forall ((x_9 Q_0) (y_5 list_0) (z_3 list_0) (fail_0 Maybe_0) (x_11 Nat_0) (x_12 list_0) (x_15 Nat_0) (x_16 list_0) (x_71 Maybe_0))
	(=>	(and (= x_71 fail_0)
			(= x_9 (Q_1 y_5 z_3))
			(= fail_0 Nothing_0)
			(= z_3 nil_0)
			(= y_5 (cons_0 x_11 x_12))
			(= x_12 nil_0)
			(= z_3 (cons_0 x_15 x_16)))
		(fstR_0 x_71 x_9))))
(assert (forall ((x_9 Q_0) (y_5 list_0) (z_3 list_0) (fail_0 Maybe_0) (x_11 Nat_0) (x_12 list_0) (x_72 Maybe_0))
	(=>	(and (= x_72 (Just_0 x_11))
			(= x_9 (Q_1 y_5 z_3))
			(= fail_0 Nothing_0)
			(= z_3 nil_0)
			(= y_5 (cons_0 x_11 x_12))
			(= x_12 nil_0)
			(= z_3 nil_0))
		(fstR_0 x_72 x_9))))
(assert (forall ((x_9 Q_0) (y_5 list_0) (z_3 list_0) (fail_0 Maybe_0) (x_73 Maybe_0))
	(=>	(and (= x_73 fail_0)
			(= x_9 (Q_1 y_5 z_3))
			(= fail_0 Nothing_0)
			(= z_3 nil_0)
			(= y_5 nil_0))
		(fstR_0 x_73 x_9))))
(declare-fun fromMaybe_0 (Nat_0 Nat_0 Maybe_0) Bool)
(assert (forall ((x_17 Nat_0) (y_7 Maybe_0) (z_4 Nat_0) (x_74 Nat_0))
	(=>	(and (= x_74 z_4)
			(= y_7 (Just_0 z_4)))
		(fromMaybe_0 x_74 x_17 y_7))))
(assert (forall ((x_17 Nat_0) (y_7 Maybe_0) (x_75 Nat_0))
	(=>	(and (= x_75 x_17)
			(= y_7 Nothing_0))
		(fromMaybe_0 x_75 x_17 y_7))))
(declare-fun fromMaybe_1 (Q_0 Q_0 Maybe_1) Bool)
(assert (forall ((x_18 Q_0) (y_8 Maybe_1) (z_5 Q_0) (x_76 Q_0))
	(=>	(and (= x_76 z_5)
			(= y_8 (Just_1 z_5)))
		(fromMaybe_1 x_76 x_18 y_8))))
(assert (forall ((x_18 Q_0) (y_8 Maybe_1) (x_77 Q_0))
	(=>	(and (= x_77 x_18)
			(= y_8 Nothing_1))
		(fromMaybe_1 x_77 x_18 y_8))))
(declare-fun empty_0 (Q_0) Bool)
(assert (forall ((x_78 Q_0))
	(=> (= x_78 (Q_1 nil_0 nil_0))
	    (empty_0 x_78))))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_19 Nat_0) (y_9 list_0) (x_79 list_0))
	(=>	(and (= x_79 y_9)
			(le_0 x_19 Z_0))
		(drop_0 x_79 x_19 y_9))))
(assert (forall ((x_19 Nat_0) (y_9 list_0) (z_6 Nat_0) (xs_2 list_0) (x_80 list_0) (x_81 list_0) (x_177 Nat_0))
	(=>	(and (= x_80 x_81)
			(drop_0 x_81 x_177 xs_2)
			(gt_0 x_19 Z_0)
			(= y_9 (cons_0 z_6 xs_2))
			(minus_0 x_177 x_19 (S_0 Z_0)))
		(drop_0 x_80 x_19 y_9))))
(assert (forall ((x_19 Nat_0) (y_9 list_0) (x_82 list_0))
	(=>	(and (= x_82 y_9)
			(le_0 x_19 Z_0))
		(drop_0 x_82 x_19 y_9))))
(assert (forall ((x_19 Nat_0) (y_9 list_0) (x_83 list_0))
	(=>	(and (= x_83 nil_0)
			(gt_0 x_19 Z_0)
			(= y_9 nil_0))
		(drop_0 x_83 x_19 y_9))))
(declare-fun halve_0 (pair_2 list_0) Bool)
(assert (forall ((x_20 list_0) (k_0 Nat_0) (x_85 pair_2) (x_86 list_0) (x_87 list_0) (x_84 Nat_0) (x_178 Nat_0))
	(=>	(and (= x_85 (pair_3 x_86 x_87))
			(take_0 x_86 k_0 x_20)
			(drop_0 x_87 k_0 x_20)
			(= k_0 x_178)
			(length_0 x_84 x_20)
			(div_0 x_178 x_84 (S_0 (S_0 Z_0))))
		(halve_0 x_85 x_20))))
(declare-fun x_21 (list_0 list_0 list_0) Bool)
(assert (forall ((x_22 list_0) (y_10 list_0) (z_7 Nat_0) (xs_3 list_0) (x_88 list_0) (x_89 list_0))
	(=>	(and (= x_88 (cons_0 z_7 x_89))
			(x_21 x_89 xs_3 y_10)
			(= x_22 (cons_0 z_7 xs_3)))
		(x_21 x_88 x_22 y_10))))
(assert (forall ((x_22 list_0) (y_10 list_0) (x_90 list_0))
	(=>	(and (= x_90 y_10)
			(= x_22 nil_0))
		(x_21 x_90 x_22 y_10))))
(declare-fun list_1 (list_0 E_0) Bool)
(assert (forall ((x_23 E_0) (a_0 E_0) (b_0 E_0) (x_91 list_0) (x_92 list_0) (x_93 list_0) (x_94 list_0))
	(=>	(and (= x_91 x_94)
			(list_1 x_92 a_0)
			(list_1 x_93 b_0)
			(x_21 x_94 x_92 x_93)
			(= x_23 (App_0 a_0 b_0)))
		(list_1 x_91 x_23))))
(assert (forall ((x_23 E_0) (e_0 E_0) (x_95 list_0) (x_96 list_0) (x_97 list_0))
	(=>	(and (= x_95 x_97)
			(list_1 x_96 e_0)
			(init_0 x_97 x_96)
			(= x_23 (DeqR_0 e_0)))
		(list_1 x_95 x_23))))
(assert (forall ((x_23 E_0) (e_1 E_0) (x_98 list_0) (x_99 list_0) (x_100 list_0))
	(=>	(and (= x_98 x_100)
			(list_1 x_99 e_1)
			(tail_1 x_100 x_99)
			(= x_23 (DeqL_0 e_1)))
		(list_1 x_98 x_23))))
(assert (forall ((x_23 E_0) (e_2 E_0) (z_8 Nat_0) (x_101 list_0) (x_102 list_0) (x_103 list_0))
	(=>	(and (= x_101 x_103)
			(list_1 x_102 e_2)
			(x_21 x_103 x_102 (cons_0 z_8 nil_0))
			(= x_23 (EnqR_0 e_2 z_8)))
		(list_1 x_101 x_23))))
(assert (forall ((x_23 E_0) (y_11 Nat_0) (e_3 E_0) (x_104 list_0) (x_105 list_0))
	(=>	(and (= x_104 (cons_0 y_11 x_105))
			(list_1 x_105 e_3)
			(= x_23 (EnqL_0 y_11 e_3)))
		(list_1 x_104 x_23))))
(assert (forall ((x_23 E_0) (x_106 list_0))
	(=>	(and (= x_106 nil_0)
			(= x_23 Empty_0))
		(list_1 x_106 x_23))))
(declare-fun reverse_0 (list_0 list_0) Bool)
(assert (forall ((x_24 list_0) (y_12 Nat_0) (xs_4 list_0) (x_107 list_0) (x_108 list_0) (x_109 list_0))
	(=>	(and (= x_107 x_109)
			(reverse_0 x_108 xs_4)
			(x_21 x_109 x_108 (cons_0 y_12 nil_0))
			(= x_24 (cons_0 y_12 xs_4)))
		(reverse_0 x_107 x_24))))
(assert (forall ((x_24 list_0) (x_110 list_0))
	(=>	(and (= x_110 nil_0)
			(= x_24 nil_0))
		(reverse_0 x_110 x_24))))
(declare-fun enqL_0 (Q_0 Nat_0 Q_0) Bool)
(assert (forall ((x_25 Nat_0) (y_13 Q_0) (xs_5 list_0) (ys_0 list_0) (z_9 Nat_0) (x_26 list_0) (x_111 Q_0))
	(=>	(and (= x_111 (Q_1 (cons_0 x_25 xs_5) (cons_0 z_9 x_26)))
			(= y_13 (Q_1 xs_5 ys_0))
			(= ys_0 (cons_0 z_9 x_26)))
		(enqL_0 x_111 x_25 y_13))))
(assert (forall ((x_25 Nat_0) (y_13 Q_0) (xs_5 list_0) (ys_0 list_0) (as_0 list_0) (bs_0 list_0) (x_113 Q_0) (x_114 list_0) (x_112 pair_2))
	(=>	(and (= x_113 (Q_1 as_0 x_114))
			(reverse_0 x_114 bs_0)
			(= y_13 (Q_1 xs_5 ys_0))
			(= ys_0 nil_0)
			(= x_112 (pair_3 as_0 bs_0))
			(halve_0 x_112 (cons_0 x_25 xs_5)))
		(enqL_0 x_113 x_25 y_13))))
(declare-fun mkQ_0 (Q_0 list_0 list_0) Bool)
(assert (forall ((x_27 list_0) (y_14 list_0) (z_10 Nat_0) (x_28 list_0) (x_29 Nat_0) (x_30 list_0) (x_115 Q_0))
	(=>	(and (= x_115 (Q_1 (cons_0 z_10 x_28) (cons_0 x_29 x_30)))
			(= x_27 (cons_0 z_10 x_28))
			(= y_14 (cons_0 x_29 x_30)))
		(mkQ_0 x_115 x_27 y_14))))
(assert (forall ((x_27 list_0) (y_14 list_0) (z_10 Nat_0) (x_28 list_0) (as_1 list_0) (bs_1 list_0) (x_117 Q_0) (x_118 list_0) (x_116 pair_2))
	(=>	(and (= x_117 (Q_1 as_1 x_118))
			(reverse_0 x_118 bs_1)
			(= x_27 (cons_0 z_10 x_28))
			(= y_14 nil_0)
			(= x_116 (pair_3 as_1 bs_1))
			(halve_0 x_116 (cons_0 z_10 x_28)))
		(mkQ_0 x_117 x_27 y_14))))
(assert (forall ((x_27 list_0) (y_14 list_0) (as_2 list_0) (bs_2 list_0) (x_120 Q_0) (x_121 list_0) (x_119 pair_2))
	(=>	(and (= x_120 (Q_1 x_121 as_2))
			(reverse_0 x_121 bs_2)
			(= x_27 nil_0)
			(= x_119 (pair_3 as_2 bs_2))
			(halve_0 x_119 y_14))
		(mkQ_0 x_120 x_27 y_14))))
(declare-fun x_31 (Q_0 Q_0 Q_0) Bool)
(assert (forall ((x_32 Q_0) (y_15 Q_0) (xs_6 list_0) (ys_1 list_0) (vs_0 list_0) (ws_0 list_0) (x_122 Q_0) (x_123 list_0) (x_124 list_0) (x_125 list_0) (x_126 list_0) (x_127 Q_0))
	(=>	(and (= x_122 x_127)
			(reverse_0 x_123 ys_1)
			(x_21 x_124 xs_6 x_123)
			(reverse_0 x_125 vs_0)
			(x_21 x_126 x_125 ws_0)
			(mkQ_0 x_127 x_124 x_126)
			(= x_32 (Q_1 xs_6 ys_1))
			(= y_15 (Q_1 vs_0 ws_0)))
		(x_31 x_122 x_32 y_15))))
(declare-fun deqL_0 (Maybe_1 Q_0) Bool)
(assert (forall ((x_33 Q_0) (y_16 list_0) (z_11 list_0) (x_34 Nat_0) (xs_7 list_0) (x_128 Maybe_1) (x_129 Q_0))
	(=>	(and (= x_128 (Just_1 x_129))
			(mkQ_0 x_129 xs_7 z_11)
			(= x_33 (Q_1 y_16 z_11))
			(= y_16 (cons_0 x_34 xs_7)))
		(deqL_0 x_128 x_33))))
(assert (forall ((x_33 Q_0) (y_16 list_0) (z_11 list_0) (x_35 Nat_0) (x_36 list_0) (x_37 Nat_0) (x_38 list_0) (x_130 Maybe_1))
	(=>	(and (= x_130 Nothing_1)
			(= x_33 (Q_1 y_16 z_11))
			(= y_16 nil_0)
			(= z_11 (cons_0 x_35 x_36))
			(= x_36 (cons_0 x_37 x_38)))
		(deqL_0 x_130 x_33))))
(assert (forall ((x_33 Q_0) (y_16 list_0) (z_11 list_0) (x_35 Nat_0) (x_36 list_0) (x_131 Maybe_1) (x_132 Q_0))
	(=>	(and (= x_131 (Just_1 x_132))
			(empty_0 x_132)
			(= x_33 (Q_1 y_16 z_11))
			(= y_16 nil_0)
			(= z_11 (cons_0 x_35 x_36))
			(= x_36 nil_0))
		(deqL_0 x_131 x_33))))
(assert (forall ((x_33 Q_0) (y_16 list_0) (z_11 list_0) (x_133 Maybe_1))
	(=>	(and (= x_133 Nothing_1)
			(= x_33 (Q_1 y_16 z_11))
			(= y_16 nil_0)
			(= z_11 nil_0))
		(deqL_0 x_133 x_33))))
(declare-fun deqR_0 (Maybe_1 Q_0) Bool)
(assert (forall ((x_39 Q_0) (y_17 list_0) (z_12 list_0) (fail_1 Maybe_1) (y_18 Nat_0) (ys_2 list_0) (x_40 Nat_0) (x_41 list_0) (x_42 Nat_0) (x_43 list_0) (x_135 Maybe_1) (x_134 Q_0))
	(=>	(and (= x_135 fail_1)
			(= x_39 (Q_1 y_17 z_12))
			(= fail_1 (Just_1 x_134))
			(= z_12 (cons_0 y_18 ys_2))
			(= y_17 (cons_0 x_40 x_41))
			(= x_41 (cons_0 x_42 x_43))
			(mkQ_0 x_134 y_17 ys_2))
		(deqR_0 x_135 x_39))))
(assert (forall ((x_39 Q_0) (y_17 list_0) (z_12 list_0) (fail_1 Maybe_1) (y_18 Nat_0) (ys_2 list_0) (x_40 Nat_0) (x_41 list_0) (x_44 Nat_0) (x_45 list_0) (x_137 Maybe_1) (x_136 Q_0))
	(=>	(and (= x_137 fail_1)
			(= x_39 (Q_1 y_17 z_12))
			(= fail_1 (Just_1 x_136))
			(= z_12 (cons_0 y_18 ys_2))
			(= y_17 (cons_0 x_40 x_41))
			(= x_41 nil_0)
			(= z_12 (cons_0 x_44 x_45))
			(mkQ_0 x_136 y_17 ys_2))
		(deqR_0 x_137 x_39))))
(assert (forall ((x_39 Q_0) (y_17 list_0) (z_12 list_0) (fail_1 Maybe_1) (y_18 Nat_0) (ys_2 list_0) (x_40 Nat_0) (x_41 list_0) (x_139 Maybe_1) (x_140 Q_0) (x_138 Q_0))
	(=>	(and (= x_139 (Just_1 x_140))
			(empty_0 x_140)
			(= x_39 (Q_1 y_17 z_12))
			(= fail_1 (Just_1 x_138))
			(= z_12 (cons_0 y_18 ys_2))
			(= y_17 (cons_0 x_40 x_41))
			(= x_41 nil_0)
			(= z_12 nil_0)
			(mkQ_0 x_138 y_17 ys_2))
		(deqR_0 x_139 x_39))))
(assert (forall ((x_39 Q_0) (y_17 list_0) (z_12 list_0) (fail_1 Maybe_1) (y_18 Nat_0) (ys_2 list_0) (x_142 Maybe_1) (x_141 Q_0))
	(=>	(and (= x_142 fail_1)
			(= x_39 (Q_1 y_17 z_12))
			(= fail_1 (Just_1 x_141))
			(= z_12 (cons_0 y_18 ys_2))
			(= y_17 nil_0)
			(mkQ_0 x_141 y_17 ys_2))
		(deqR_0 x_142 x_39))))
(assert (forall ((x_39 Q_0) (y_17 list_0) (z_12 list_0) (fail_1 Maybe_1) (x_40 Nat_0) (x_41 list_0) (x_42 Nat_0) (x_43 list_0) (x_143 Maybe_1))
	(=>	(and (= x_143 fail_1)
			(= x_39 (Q_1 y_17 z_12))
			(= fail_1 Nothing_1)
			(= z_12 nil_0)
			(= y_17 (cons_0 x_40 x_41))
			(= x_41 (cons_0 x_42 x_43)))
		(deqR_0 x_143 x_39))))
(assert (forall ((x_39 Q_0) (y_17 list_0) (z_12 list_0) (fail_1 Maybe_1) (x_40 Nat_0) (x_41 list_0) (x_44 Nat_0) (x_45 list_0) (x_144 Maybe_1))
	(=>	(and (= x_144 fail_1)
			(= x_39 (Q_1 y_17 z_12))
			(= fail_1 Nothing_1)
			(= z_12 nil_0)
			(= y_17 (cons_0 x_40 x_41))
			(= x_41 nil_0)
			(= z_12 (cons_0 x_44 x_45)))
		(deqR_0 x_144 x_39))))
(assert (forall ((x_39 Q_0) (y_17 list_0) (z_12 list_0) (fail_1 Maybe_1) (x_40 Nat_0) (x_41 list_0) (x_145 Maybe_1) (x_146 Q_0))
	(=>	(and (= x_145 (Just_1 x_146))
			(empty_0 x_146)
			(= x_39 (Q_1 y_17 z_12))
			(= fail_1 Nothing_1)
			(= z_12 nil_0)
			(= y_17 (cons_0 x_40 x_41))
			(= x_41 nil_0)
			(= z_12 nil_0))
		(deqR_0 x_145 x_39))))
(assert (forall ((x_39 Q_0) (y_17 list_0) (z_12 list_0) (fail_1 Maybe_1) (x_147 Maybe_1))
	(=>	(and (= x_147 fail_1)
			(= x_39 (Q_1 y_17 z_12))
			(= fail_1 Nothing_1)
			(= z_12 nil_0)
			(= y_17 nil_0))
		(deqR_0 x_147 x_39))))
(declare-fun enqR_0 (Q_0 Q_0 Nat_0) Bool)
(assert (forall ((x_46 Q_0) (y_19 Nat_0) (xs_8 list_0) (ys_3 list_0) (x_148 Q_0) (x_149 Q_0))
	(=>	(and (= x_148 x_149)
			(mkQ_0 x_149 xs_8 (cons_0 y_19 ys_3))
			(= x_46 (Q_1 xs_8 ys_3)))
		(enqR_0 x_148 x_46 y_19))))
(declare-fun queue_0 (Q_0 E_0) Bool)
(assert (forall ((x_47 E_0) (a_1 E_0) (b_1 E_0) (x_150 Q_0) (x_151 Q_0) (x_152 Q_0) (x_153 Q_0))
	(=>	(and (= x_150 x_153)
			(queue_0 x_151 a_1)
			(queue_0 x_152 b_1)
			(x_31 x_153 x_151 x_152)
			(= x_47 (App_0 a_1 b_1)))
		(queue_0 x_150 x_47))))
(assert (forall ((x_47 E_0) (e_4 E_0) (r_0 Q_0) (x_155 Q_0) (x_156 Maybe_1) (x_157 Q_0) (x_154 Q_0))
	(=>	(and (= x_155 x_157)
			(deqR_0 x_156 r_0)
			(fromMaybe_1 x_157 r_0 x_156)
			(= x_47 (DeqR_0 e_4))
			(= r_0 x_154)
			(queue_0 x_154 e_4))
		(queue_0 x_155 x_47))))
(assert (forall ((x_47 E_0) (e_5 E_0) (q_0 Q_0) (x_159 Q_0) (x_160 Maybe_1) (x_161 Q_0) (x_158 Q_0))
	(=>	(and (= x_159 x_161)
			(deqL_0 x_160 q_0)
			(fromMaybe_1 x_161 q_0 x_160)
			(= x_47 (DeqL_0 e_5))
			(= q_0 x_158)
			(queue_0 x_158 e_5))
		(queue_0 x_159 x_47))))
(assert (forall ((x_47 E_0) (e_6 E_0) (z_13 Nat_0) (x_162 Q_0) (x_163 Q_0) (x_164 Q_0))
	(=>	(and (= x_162 x_164)
			(queue_0 x_163 e_6)
			(enqR_0 x_164 x_163 z_13)
			(= x_47 (EnqR_0 e_6 z_13)))
		(queue_0 x_162 x_47))))
(assert (forall ((x_47 E_0) (y_20 Nat_0) (e_7 E_0) (x_165 Q_0) (x_166 Q_0) (x_167 Q_0))
	(=>	(and (= x_165 x_167)
			(queue_0 x_166 e_7)
			(enqL_0 x_167 y_20 x_166)
			(= x_47 (EnqL_0 y_20 e_7)))
		(queue_0 x_165 x_47))))
(assert (forall ((x_47 E_0) (x_168 Q_0) (x_169 Q_0))
	(=>	(and (= x_168 x_169)
			(empty_0 x_169)
			(= x_47 Empty_0))
		(queue_0 x_168 x_47))))
(assert (forall ((e_8 E_0) (x_170 Q_0) (x_171 Maybe_0) (x_172 list_0) (x_173 Maybe_0))
	(=>	(and (diseqMaybe_0 x_171 x_173)
			(queue_0 x_170 e_8)
			(fstR_0 x_171 x_170)
			(list_1 x_172 e_8)
			(last_0 x_173 x_172))
		false)))
(check-sat)
