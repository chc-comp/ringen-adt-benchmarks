(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_128 Nat_0) (x_127 Nat_0))
	(=> (= x_128 (S_0 x_127))
	    (unS_1 x_127 x_128))))
(assert (isZ_0 Z_0))
(assert (forall ((x_129 Nat_0))
	(isS_0 (S_0 x_129))))
(assert (forall ((x_130 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_130))))
(assert (forall ((x_131 Nat_0))
	(diseqNat_0 (S_0 x_131) Z_0)))
(assert (forall ((x_132 Nat_0) (x_133 Nat_0))
	(=> (diseqNat_0 x_132 x_133)
	    (diseqNat_0 (S_0 x_132) (S_0 x_133)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_18 Nat_0))
	(add_0 y_18 Z_0 y_18)))
(assert (forall ((x_113 Nat_0) (y_18 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_113 y_18)
	    (add_0 (S_0 r_0) (S_0 x_113) y_18))))
(assert (forall ((y_18 Nat_0))
	(minus_0 Z_0 Z_0 y_18)))
(assert (forall ((x_113 Nat_0) (y_18 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_113 y_18)
	    (minus_0 (S_0 r_0) (S_0 x_113) y_18))))
(assert (forall ((y_18 Nat_0))
	(le_0 Z_0 y_18)))
(assert (forall ((x_113 Nat_0) (y_18 Nat_0))
	(=> (le_0 x_113 y_18)
	    (le_0 (S_0 x_113) (S_0 y_18)))))
(assert (forall ((y_18 Nat_0))
	(ge_0 y_18 Z_0)))
(assert (forall ((x_113 Nat_0) (y_18 Nat_0))
	(=> (ge_0 x_113 y_18)
	    (ge_0 (S_0 x_113) (S_0 y_18)))))
(assert (forall ((y_18 Nat_0))
	(lt_0 Z_0 (S_0 y_18))))
(assert (forall ((x_113 Nat_0) (y_18 Nat_0))
	(=> (lt_0 x_113 y_18)
	    (lt_0 (S_0 x_113) (S_0 y_18)))))
(assert (forall ((y_18 Nat_0))
	(gt_0 (S_0 y_18) Z_0)))
(assert (forall ((x_113 Nat_0) (y_18 Nat_0))
	(=> (gt_0 x_113 y_18)
	    (gt_0 (S_0 x_113) (S_0 y_18)))))
(assert (forall ((y_18 Nat_0))
	(mult_0 Z_0 Z_0 y_18)))
(assert (forall ((x_113 Nat_0) (y_18 Nat_0) (r_0 Nat_0) (z_11 Nat_0))
	(=>	(and (mult_0 r_0 x_113 y_18)
			(add_0 z_11 r_0 y_18))
		(mult_0 z_11 (S_0 x_113) y_18))))
(assert (forall ((x_113 Nat_0) (y_18 Nat_0))
	(=> (lt_0 x_113 y_18)
	    (div_0 Z_0 x_113 y_18))))
(assert (forall ((x_113 Nat_0) (y_18 Nat_0) (r_0 Nat_0) (z_11 Nat_0))
	(=>	(and (ge_0 x_113 y_18)
			(minus_0 z_11 x_113 y_18)
			(div_0 r_0 z_11 y_18))
		(div_0 (S_0 r_0) x_113 y_18))))
(assert (forall ((x_113 Nat_0) (y_18 Nat_0))
	(=> (lt_0 x_113 y_18)
	    (mod_0 x_113 x_113 y_18))))
(assert (forall ((x_113 Nat_0) (y_18 Nat_0) (r_0 Nat_0) (z_11 Nat_0))
	(=>	(and (ge_0 x_113 y_18)
			(minus_0 z_11 x_113 y_18)
			(mod_0 r_0 z_11 y_18))
		(mod_0 r_0 x_113 y_18))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Nat_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (Nat_0 pair_0) Bool)
(declare-fun projpair_3 (Nat_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_136 pair_0) (x_134 Nat_0) (x_135 Nat_0))
	(=> (= x_136 (pair_1 x_134 x_135))
	    (projpair_2 x_134 x_136))))
(assert (forall ((x_136 pair_0) (x_134 Nat_0) (x_135 Nat_0))
	(=> (= x_136 (pair_1 x_134 x_135))
	    (projpair_3 x_135 x_136))))
(assert (forall ((x_137 Nat_0) (x_138 Nat_0))
	(ispair_0 (pair_1 x_137 x_138))))
(assert (forall ((x_139 Nat_0) (x_140 Nat_0) (x_141 Nat_0) (x_142 Nat_0))
	(=> (diseqNat_0 x_139 x_141)
	    (diseqpair_0 (pair_1 x_139 x_140) (pair_1 x_141 x_142)))))
(assert (forall ((x_139 Nat_0) (x_140 Nat_0) (x_141 Nat_0) (x_142 Nat_0))
	(=> (diseqNat_0 x_140 x_142)
	    (diseqpair_0 (pair_1 x_139 x_140) (pair_1 x_141 x_142)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Bool) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_4 (Bool list_0) Bool)
(declare-fun tail_4 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_146 list_0) (x_144 Bool) (x_145 list_0))
	(=> (= x_146 (cons_0 x_144 x_145))
	    (head_4 x_144 x_146))))
(assert (forall ((x_146 list_0) (x_144 Bool) (x_145 list_0))
	(=> (= x_146 (cons_0 x_144 x_145))
	    (tail_4 x_145 x_146))))
(assert (isnil_0 nil_0))
(assert (forall ((x_147 Bool) (x_148 list_0))
	(iscons_0 (cons_0 x_147 x_148))))
(assert (forall ((x_149 Bool) (x_150 list_0))
	(diseqlist_0 nil_0 (cons_0 x_149 x_150))))
(assert (forall ((x_151 Bool) (x_152 list_0))
	(diseqlist_0 (cons_0 x_151 x_152) nil_0)))
(assert (forall ((x_153 Bool) (x_154 list_0) (x_155 Bool) (x_156 list_0))
	(=> (not (= x_153 x_155))
	    (diseqlist_0 (cons_0 x_153 x_154) (cons_0 x_155 x_156)))))
(assert (forall ((x_153 Bool) (x_154 list_0) (x_155 Bool) (x_156 list_0))
	(=> (diseqlist_0 x_154 x_156)
	    (diseqlist_0 (cons_0 x_153 x_154) (cons_0 x_155 x_156)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 Nat_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_5 (Nat_0 list_1) Bool)
(declare-fun tail_5 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_160 list_1) (x_158 Nat_0) (x_159 list_1))
	(=> (= x_160 (cons_1 x_158 x_159))
	    (head_5 x_158 x_160))))
(assert (forall ((x_160 list_1) (x_158 Nat_0) (x_159 list_1))
	(=> (= x_160 (cons_1 x_158 x_159))
	    (tail_5 x_159 x_160))))
(assert (isnil_1 nil_1))
(assert (forall ((x_161 Nat_0) (x_162 list_1))
	(iscons_1 (cons_1 x_161 x_162))))
(assert (forall ((x_163 Nat_0) (x_164 list_1))
	(diseqlist_1 nil_1 (cons_1 x_163 x_164))))
(assert (forall ((x_165 Nat_0) (x_166 list_1))
	(diseqlist_1 (cons_1 x_165 x_166) nil_1)))
(assert (forall ((x_167 Nat_0) (x_168 list_1) (x_169 Nat_0) (x_170 list_1))
	(=> (diseqNat_0 x_167 x_169)
	    (diseqlist_1 (cons_1 x_167 x_168) (cons_1 x_169 x_170)))))
(assert (forall ((x_167 Nat_0) (x_168 list_1) (x_169 Nat_0) (x_170 list_1))
	(=> (diseqlist_1 x_168 x_170)
	    (diseqlist_1 (cons_1 x_167 x_168) (cons_1 x_169 x_170)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 pair_0) (tail_2 list_2)))))
(declare-fun diseqlist_2 (list_2 list_2) Bool)
(declare-fun head_6 (pair_0 list_2) Bool)
(declare-fun tail_6 (list_2 list_2) Bool)
(declare-fun isnil_2 (list_2) Bool)
(declare-fun iscons_2 (list_2) Bool)
(assert (forall ((x_174 list_2) (x_172 pair_0) (x_173 list_2))
	(=> (= x_174 (cons_2 x_172 x_173))
	    (head_6 x_172 x_174))))
(assert (forall ((x_174 list_2) (x_172 pair_0) (x_173 list_2))
	(=> (= x_174 (cons_2 x_172 x_173))
	    (tail_6 x_173 x_174))))
(assert (isnil_2 nil_2))
(assert (forall ((x_175 pair_0) (x_176 list_2))
	(iscons_2 (cons_2 x_175 x_176))))
(assert (forall ((x_177 pair_0) (x_178 list_2))
	(diseqlist_2 nil_2 (cons_2 x_177 x_178))))
(assert (forall ((x_179 pair_0) (x_180 list_2))
	(diseqlist_2 (cons_2 x_179 x_180) nil_2)))
(assert (forall ((x_181 pair_0) (x_182 list_2) (x_183 pair_0) (x_184 list_2))
	(=> (diseqpair_0 x_181 x_183)
	    (diseqlist_2 (cons_2 x_181 x_182) (cons_2 x_183 x_184)))))
(assert (forall ((x_181 pair_0) (x_182 list_2) (x_183 pair_0) (x_184 list_2))
	(=> (diseqlist_2 x_182 x_184)
	    (diseqlist_2 (cons_2 x_181 x_182) (cons_2 x_183 x_184)))))
(declare-datatypes ((list_3 0)) (((nil_3 ) (cons_3 (head_3 list_2) (tail_3 list_3)))))
(declare-fun diseqlist_3 (list_3 list_3) Bool)
(declare-fun head_7 (list_2 list_3) Bool)
(declare-fun tail_7 (list_3 list_3) Bool)
(declare-fun isnil_3 (list_3) Bool)
(declare-fun iscons_3 (list_3) Bool)
(assert (forall ((x_188 list_3) (x_186 list_2) (x_187 list_3))
	(=> (= x_188 (cons_3 x_186 x_187))
	    (head_7 x_186 x_188))))
(assert (forall ((x_188 list_3) (x_186 list_2) (x_187 list_3))
	(=> (= x_188 (cons_3 x_186 x_187))
	    (tail_7 x_187 x_188))))
(assert (isnil_3 nil_3))
(assert (forall ((x_189 list_2) (x_190 list_3))
	(iscons_3 (cons_3 x_189 x_190))))
(assert (forall ((x_191 list_2) (x_192 list_3))
	(diseqlist_3 nil_3 (cons_3 x_191 x_192))))
(assert (forall ((x_193 list_2) (x_194 list_3))
	(diseqlist_3 (cons_3 x_193 x_194) nil_3)))
(assert (forall ((x_195 list_2) (x_196 list_3) (x_197 list_2) (x_198 list_3))
	(=> (diseqlist_2 x_195 x_197)
	    (diseqlist_3 (cons_3 x_195 x_196) (cons_3 x_197 x_198)))))
(assert (forall ((x_195 list_2) (x_196 list_3) (x_197 list_2) (x_198 list_3))
	(=> (diseqlist_3 x_196 x_198)
	    (diseqlist_3 (cons_3 x_195 x_196) (cons_3 x_197 x_198)))))
(declare-fun primEnumFromTo_0 (list_1 Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_26 list_1))
	(=>	(and (= x_26 nil_1)
			(gt_0 x_0 y_0))
		(primEnumFromTo_0 x_26 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_27 list_1) (x_28 list_1) (x_114 Nat_0))
	(=>	(and (= x_27 (cons_1 x_0 x_28))
			(primEnumFromTo_0 x_28 x_114 y_0)
			(le_0 x_0 y_0)
			(add_0 x_114 (S_0 Z_0) x_0))
		(primEnumFromTo_0 x_27 x_0 y_0))))
(declare-fun petersen_0 (list_2 Nat_0 list_1) Bool)
(assert (forall ((x_1 Nat_0) (y_1 list_1) (z_0 Nat_0) (x_2 list_1) (x_29 list_2) (x_30 list_2) (x_115 Nat_0))
	(=>	(and (= x_29 (cons_2 (pair_1 z_0 x_115) x_30))
			(petersen_0 x_30 x_1 x_2)
			(= y_1 (cons_1 z_0 x_2))
			(add_0 x_115 x_1 z_0))
		(petersen_0 x_29 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 list_1) (x_31 list_2))
	(=>	(and (= x_31 nil_2)
			(= y_1 nil_1))
		(petersen_0 x_31 x_1 y_1))))
(declare-fun petersen_1 (list_2 list_1) Bool)
(assert (forall ((x_3 list_1) (y_2 Nat_0) (z_1 list_1) (x_32 list_2) (x_33 list_2) (x_116 Nat_0))
	(=>	(and (= x_32 (cons_2 (pair_1 y_2 x_116) x_33))
			(petersen_1 x_33 z_1)
			(= x_3 (cons_1 y_2 z_1))
			(add_0 x_116 (S_0 Z_0) y_2))
		(petersen_1 x_32 x_3))))
(assert (forall ((x_3 list_1) (x_34 list_2))
	(=>	(and (= x_34 nil_2)
			(= x_3 nil_1))
		(petersen_1 x_34 x_3))))
(declare-fun petersen_2 (list_3 Nat_0 list_2) Bool)
(assert (forall ((x_4 Nat_0) (y_3 list_2) (z_2 pair_0) (x_5 list_2) (u_0 Nat_0) (v_0 Nat_0) (x_35 list_3) (x_36 list_3) (x_117 Nat_0) (x_118 Nat_0))
	(=>	(and (= x_35 (cons_3 (cons_2 (pair_1 u_0 v_0) (cons_2 (pair_1 x_117 x_118) nil_2)) x_36))
			(petersen_2 x_36 x_4 x_5)
			(= y_3 (cons_2 z_2 x_5))
			(= z_2 (pair_1 u_0 v_0))
			(add_0 x_117 x_4 u_0)
			(add_0 x_118 x_4 v_0))
		(petersen_2 x_35 x_4 y_3))))
(assert (forall ((x_4 Nat_0) (y_3 list_2) (x_37 list_3))
	(=>	(and (= x_37 nil_3)
			(= y_3 nil_2))
		(petersen_2 x_37 x_4 y_3))))
(declare-fun path_0 (list_0 Nat_0 Nat_0 list_2) Bool)
(assert (forall ((x_6 Nat_0) (y_4 Nat_0) (z_3 list_2) (x_7 pair_0) (x_8 list_2) (u_1 Nat_0) (v_1 Nat_0) (x_38 list_0) (x_39 list_0))
	(=>	(and (= x_38 (cons_0 (or (and (= u_1 x_6) (= v_1 y_4)) (and (= u_1 y_4) (= v_1 x_6))) x_39))
			(path_0 x_39 x_6 y_4 x_8)
			(= z_3 (cons_2 x_7 x_8))
			(= x_7 (pair_1 u_1 v_1)))
		(path_0 x_38 x_6 y_4 z_3))))
(assert (forall ((x_6 Nat_0) (y_4 Nat_0) (z_3 list_2) (x_40 list_0))
	(=>	(and (= x_40 nil_0)
			(= z_3 nil_2))
		(path_0 x_40 x_6 y_4 z_3))))
(declare-fun or_0 (Bool list_0) Bool)
(assert (forall ((x_9 list_0) (y_5 Bool) (xs_0 list_0) (x_41 Bool) (x_42 Bool))
	(=>	(and (= x_41 (or y_5 x_42))
			(or_0 x_42 xs_0)
			(= x_9 (cons_0 y_5 xs_0)))
		(or_0 x_41 x_9))))
(assert (forall ((x_9 list_0) (x_43 Bool))
	(=>	(and (= x_43 false)
			(= x_9 nil_0))
		(or_0 x_43 x_9))))
(declare-fun path_1 (Bool list_1 list_2) Bool)
(assert (forall ((x_10 list_1) (y_6 list_2) (z_4 Nat_0) (x_11 list_1) (y_7 Nat_0) (xs_1 list_1) (x_44 Bool) (x_45 list_0) (x_46 Bool) (x_47 Bool))
	(=>	(and (= x_44 (and x_46 x_47))
			(path_0 x_45 z_4 y_7 y_6)
			(or_0 x_46 x_45)
			(path_1 x_47 (cons_1 y_7 xs_1) y_6)
			(= x_10 (cons_1 z_4 x_11))
			(= x_11 (cons_1 y_7 xs_1)))
		(path_1 x_44 x_10 y_6))))
(assert (forall ((x_10 list_1) (y_6 list_2) (z_4 Nat_0) (x_11 list_1) (x_48 Bool))
	(=>	(and (= x_48 true)
			(= x_10 (cons_1 z_4 x_11))
			(= x_11 nil_1))
		(path_1 x_48 x_10 y_6))))
(assert (forall ((x_10 list_1) (y_6 list_2) (x_49 Bool))
	(=>	(and (= x_49 true)
			(= x_10 nil_1))
		(path_1 x_49 x_10 y_6))))
(declare-fun maximummaximum_0 (Nat_0 Nat_0 list_2) Bool)
(assert (forall ((x_12 Nat_0) (y_8 list_2) (z_5 pair_0) (yzs_0 list_2) (y_9 Nat_0) (z_6 Nat_0) (y_10 Nat_0) (x_50 Nat_0) (x_51 Nat_0))
	(=>	(and (= x_50 x_51)
			(maximummaximum_0 x_51 y_10 yzs_0)
			(= y_8 (cons_2 z_5 yzs_0))
			(= z_5 (pair_1 y_9 z_6))
			(= y_10 z_6)
			(le_0 y_9 z_6)
			(le_0 x_12 y_10))
		(maximummaximum_0 x_50 x_12 y_8))))
(assert (forall ((x_12 Nat_0) (y_8 list_2) (z_5 pair_0) (yzs_0 list_2) (y_9 Nat_0) (z_6 Nat_0) (y_10 Nat_0) (x_52 Nat_0) (x_53 Nat_0))
	(=>	(and (= x_52 x_53)
			(maximummaximum_0 x_53 x_12 yzs_0)
			(= y_8 (cons_2 z_5 yzs_0))
			(= z_5 (pair_1 y_9 z_6))
			(= y_10 z_6)
			(le_0 y_9 z_6)
			(gt_0 x_12 y_10))
		(maximummaximum_0 x_52 x_12 y_8))))
(assert (forall ((x_12 Nat_0) (y_8 list_2) (z_5 pair_0) (yzs_0 list_2) (y_9 Nat_0) (z_6 Nat_0) (y_10 Nat_0) (x_54 Nat_0) (x_55 Nat_0))
	(=>	(and (= x_54 x_55)
			(maximummaximum_0 x_55 y_10 yzs_0)
			(= y_8 (cons_2 z_5 yzs_0))
			(= z_5 (pair_1 y_9 z_6))
			(= y_10 y_9)
			(gt_0 y_9 z_6)
			(le_0 x_12 y_10))
		(maximummaximum_0 x_54 x_12 y_8))))
(assert (forall ((x_12 Nat_0) (y_8 list_2) (z_5 pair_0) (yzs_0 list_2) (y_9 Nat_0) (z_6 Nat_0) (y_10 Nat_0) (x_56 Nat_0) (x_57 Nat_0))
	(=>	(and (= x_56 x_57)
			(maximummaximum_0 x_57 x_12 yzs_0)
			(= y_8 (cons_2 z_5 yzs_0))
			(= z_5 (pair_1 y_9 z_6))
			(= y_10 y_9)
			(gt_0 y_9 z_6)
			(gt_0 x_12 y_10))
		(maximummaximum_0 x_56 x_12 y_8))))
(assert (forall ((x_12 Nat_0) (y_8 list_2) (x_58 Nat_0))
	(=>	(and (= x_58 x_12)
			(= y_8 nil_2))
		(maximummaximum_0 x_58 x_12 y_8))))
(declare-fun length_0 (Nat_0 list_1) Bool)
(assert (forall ((x_13 list_1) (y_11 Nat_0) (l_0 list_1) (x_59 Nat_0) (x_60 Nat_0) (x_119 Nat_0))
	(=>	(and (= x_59 x_119)
			(length_0 x_60 l_0)
			(= x_13 (cons_1 y_11 l_0))
			(add_0 x_119 (S_0 Z_0) x_60))
		(length_0 x_59 x_13))))
(assert (forall ((x_13 list_1) (x_61 Nat_0))
	(=>	(and (= x_61 Z_0)
			(= x_13 nil_1))
		(length_0 x_61 x_13))))
(declare-fun last_0 (Nat_0 Nat_0 list_1) Bool)
(assert (forall ((x_14 Nat_0) (y_12 list_1) (z_7 Nat_0) (ys_0 list_1) (x_62 Nat_0) (x_63 Nat_0))
	(=>	(and (= x_62 x_63)
			(last_0 x_63 z_7 ys_0)
			(= y_12 (cons_1 z_7 ys_0)))
		(last_0 x_62 x_14 y_12))))
(assert (forall ((x_14 Nat_0) (y_12 list_1) (x_64 Nat_0))
	(=>	(and (= x_64 x_14)
			(= y_12 nil_1))
		(last_0 x_64 x_14 y_12))))
(declare-fun elem_0 (Bool Nat_0 list_1) Bool)
(assert (forall ((x_15 Nat_0) (y_13 list_1) (z_8 Nat_0) (xs_2 list_1) (x_65 Bool) (x_66 Bool))
	(=>	(and (= x_65 (or (= z_8 x_15) x_66))
			(elem_0 x_66 x_15 xs_2)
			(= y_13 (cons_1 z_8 xs_2)))
		(elem_0 x_65 x_15 y_13))))
(assert (forall ((x_15 Nat_0) (y_13 list_1) (x_67 Bool))
	(=>	(and (= x_67 false)
			(= y_13 nil_1))
		(elem_0 x_67 x_15 y_13))))
(declare-fun unique_0 (Bool list_1) Bool)
(assert (forall ((x_16 list_1) (y_14 Nat_0) (xs_3 list_1) (x_69 Bool) (x_68 Bool))
	(=>	(and (= x_69 false)
			(= x_16 (cons_1 y_14 xs_3))
			(= x_68 true)
			(elem_0 x_68 y_14 xs_3))
		(unique_0 x_69 x_16))))
(assert (forall ((x_16 list_1) (y_14 Nat_0) (xs_3 list_1) (x_71 Bool) (x_72 Bool) (x_70 Bool))
	(=>	(and (= x_71 x_72)
			(unique_0 x_72 xs_3)
			(= x_16 (cons_1 y_14 xs_3))
			(= x_70 false)
			(elem_0 x_70 y_14 xs_3))
		(unique_0 x_71 x_16))))
(assert (forall ((x_16 list_1) (x_73 Bool))
	(=>	(and (= x_73 true)
			(= x_16 nil_1))
		(unique_0 x_73 x_16))))
(declare-fun tour_0 (Bool list_1 list_2) Bool)
(assert (forall ((x_17 list_1) (y_15 list_2) (x_18 Nat_0) (x_19 list_1) (x_20 pair_0) (vs_0 list_2) (u_2 Nat_0) (v_2 Nat_0) (x_74 Bool) (x_75 Nat_0) (x_76 Bool) (x_77 Bool) (x_78 Nat_0) (x_79 Nat_0) (x_120 Nat_0))
	(=>	(and (= x_74 (and (= x_18 x_75) (and x_76 (and x_77 (= x_78 x_120)))))
			(last_0 x_75 x_18 x_19)
			(path_1 x_76 (cons_1 x_18 x_19) (cons_2 (pair_1 u_2 v_2) vs_0))
			(unique_0 x_77 x_19)
			(length_0 x_78 (cons_1 x_18 x_19))
			(maximummaximum_0 x_79 v_2 vs_0)
			(= x_17 (cons_1 x_18 x_19))
			(= y_15 (cons_2 x_20 vs_0))
			(= x_20 (pair_1 u_2 v_2))
			(le_0 u_2 v_2)
			(add_0 x_120 (S_0 (S_0 Z_0)) x_79))
		(tour_0 x_74 x_17 y_15))))
(assert (forall ((x_17 list_1) (y_15 list_2) (x_18 Nat_0) (x_19 list_1) (x_20 pair_0) (vs_0 list_2) (u_2 Nat_0) (v_2 Nat_0) (x_80 Bool) (x_81 Nat_0) (x_82 Bool) (x_83 Bool) (x_84 Nat_0) (x_85 Nat_0) (x_121 Nat_0))
	(=>	(and (= x_80 (and (= x_18 x_81) (and x_82 (and x_83 (= x_84 x_121)))))
			(last_0 x_81 x_18 x_19)
			(path_1 x_82 (cons_1 x_18 x_19) (cons_2 (pair_1 u_2 v_2) vs_0))
			(unique_0 x_83 x_19)
			(length_0 x_84 (cons_1 x_18 x_19))
			(maximummaximum_0 x_85 u_2 vs_0)
			(= x_17 (cons_1 x_18 x_19))
			(= y_15 (cons_2 x_20 vs_0))
			(= x_20 (pair_1 u_2 v_2))
			(gt_0 u_2 v_2)
			(add_0 x_121 (S_0 (S_0 Z_0)) x_85))
		(tour_0 x_80 x_17 y_15))))
(assert (forall ((x_17 list_1) (y_15 list_2) (x_18 Nat_0) (x_19 list_1) (x_86 Bool))
	(=>	(and (= x_86 false)
			(= x_17 (cons_1 x_18 x_19))
			(= y_15 nil_2))
		(tour_0 x_86 x_17 y_15))))
(assert (forall ((x_17 list_1) (y_15 list_2) (z_9 pair_0) (x_21 list_2) (x_87 Bool))
	(=>	(and (= x_87 false)
			(= x_17 nil_1)
			(= y_15 (cons_2 z_9 x_21)))
		(tour_0 x_87 x_17 y_15))))
(assert (forall ((x_17 list_1) (y_15 list_2) (x_88 Bool))
	(=>	(and (= x_88 true)
			(= x_17 nil_1)
			(= y_15 nil_2))
		(tour_0 x_88 x_17 y_15))))
(declare-fun x_22 (list_2 list_2 list_2) Bool)
(assert (forall ((x_23 list_2) (y_16 list_2) (z_10 pair_0) (xs_4 list_2) (x_89 list_2) (x_90 list_2))
	(=>	(and (= x_89 (cons_2 z_10 x_90))
			(x_22 x_90 xs_4 y_16)
			(= x_23 (cons_2 z_10 xs_4)))
		(x_22 x_89 x_23 y_16))))
(assert (forall ((x_23 list_2) (y_16 list_2) (x_91 list_2))
	(=>	(and (= x_91 y_16)
			(= x_23 nil_2))
		(x_22 x_91 x_23 y_16))))
(declare-fun concat_0 (list_2 list_3) Bool)
(assert (forall ((x_24 list_3) (y_17 list_2) (xs_5 list_3) (x_92 list_2) (x_93 list_2) (x_94 list_2))
	(=>	(and (= x_92 x_94)
			(concat_0 x_93 xs_5)
			(x_22 x_94 y_17 x_93)
			(= x_24 (cons_3 y_17 xs_5)))
		(concat_0 x_92 x_24))))
(assert (forall ((x_24 list_3) (x_95 list_2))
	(=>	(and (= x_95 nil_2)
			(= x_24 nil_3))
		(concat_0 x_95 x_24))))
(declare-fun petersen_3 (list_2 Nat_0) Bool)
(assert (forall ((x_25 Nat_0) (x_96 list_2))
	(=>	(and (= x_96 nil_2)
			(= x_25 Z_0))
		(petersen_3 x_96 x_25))))
(assert (forall ((x_25 Nat_0) (x_97 list_2) (x_98 list_1) (x_99 list_2) (x_100 list_3) (x_101 list_2) (x_102 list_1) (x_103 list_2) (x_104 list_2) (x_122 Nat_0) (x_123 Nat_0))
	(=>	(and (= x_97 x_104)
			(primEnumFromTo_0 x_98 Z_0 x_122)
			(petersen_1 x_99 x_98)
			(petersen_2 x_100 x_25 (cons_2 (pair_1 x_123 Z_0) x_99))
			(concat_0 x_101 x_100)
			(primEnumFromTo_0 x_102 Z_0 x_25)
			(petersen_0 x_103 x_25 x_102)
			(x_22 x_104 x_101 x_103)
			(diseqNat_0 x_25 Z_0)
			(minus_0 x_122 x_25 (S_0 Z_0))
			(minus_0 x_123 x_25 (S_0 Z_0)))
		(petersen_3 x_97 x_25))))
(assert (forall ((p_0 list_1) (x_105 list_1) (x_106 list_2) (x_107 list_3) (x_108 list_2) (x_109 list_1) (x_110 list_2) (x_111 list_2) (x_112 Bool) (x_124 Nat_0) (x_125 Nat_0))
	(=>	(and (= x_112 true)
			(primEnumFromTo_0 x_105 Z_0 x_124)
			(petersen_1 x_106 x_105)
			(petersen_2 x_107 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (cons_2 (pair_1 x_125 Z_0) x_106))
			(concat_0 x_108 x_107)
			(primEnumFromTo_0 x_109 Z_0 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))))
			(petersen_0 x_110 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) x_109)
			(x_22 x_111 x_108 x_110)
			(tour_0 x_112 p_0 x_111)
			(minus_0 x_124 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (S_0 Z_0))
			(minus_0 x_125 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (S_0 Z_0)))
		false)))
(check-sat)
