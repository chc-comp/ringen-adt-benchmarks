(set-logic HORN)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun diseqBool_0 (Bool_0 Bool_0) Bool)
(declare-fun and_0 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun or_1 (Bool_0 Bool_0 Bool_0) Bool)
(declare-fun not_0 (Bool_0 Bool_0) Bool)
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Bool_0) (tail_0 list_0)))))
(declare-datatypes ((T_0 0)) (((A_0 ) (B_0 ) (C_0 ))))
(declare-fun diseqT_0 (T_0 T_0) Bool)
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 T_0) (tail_1 list_1)))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 list_1) (projpair_1 list_1)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 pair_0) (tail_2 list_2)))))
(declare-datatypes ((R_0 0)) (((Nil_3 ) (Eps_0 ) (Atom_0 (projAtom_0 T_0)) (x_0 (proj_0 R_0) (proj_1 R_0)) (x_1 (proj_2 R_0) (proj_3 R_0)) (Star_0 (projStar_0 R_0)))))
(declare-fun splits_0 (list_2 T_0 list_2) Bool)
(declare-fun splits_1 (list_2 list_1) Bool)
(declare-fun or_0 (Bool_0 list_0) Bool)
(declare-fun eps_1 (Bool_0 R_0) Bool)
(declare-fun okay_0 (Bool_0 R_0) Bool)
(declare-fun step_0 (R_0 R_0 T_0) Bool)
(declare-fun rec_0 (Bool_0 R_0 list_1) Bool)
(declare-fun reck_0 (Bool_0 R_0 list_1) Bool)
(declare-fun reck_1 (list_0 R_0 R_0 list_2) Bool)
(assert (diseqBool_0 false_0 true_0))
(assert (diseqBool_0 true_0 false_0))
(assert (and_0 false_0 false_0 false_0))
(assert (and_0 false_0 true_0 false_0))
(assert (and_0 false_0 false_0 true_0))
(assert (and_0 true_0 true_0 true_0))
(assert (or_1 false_0 false_0 false_0))
(assert (or_1 true_0 true_0 false_0))
(assert (or_1 true_0 false_0 true_0))
(assert (or_1 true_0 true_0 true_0))
(assert (not_0 true_0 false_0))
(assert (not_0 false_0 true_0))
(assert (diseqT_0 A_0 B_0))
(assert (diseqT_0 A_0 C_0))
(assert (diseqT_0 B_0 A_0))
(assert (diseqT_0 C_0 A_0))
(assert (diseqT_0 B_0 C_0))
(assert (diseqT_0 C_0 B_0))
(assert (forall ((x_26 list_2) (bs_0 list_1) (cs_0 list_1) (x_3 list_2) (x_2 T_0))
	(=> (splits_0 x_26 x_2 x_3) (splits_0 (cons_2 (pair_1 (cons_1 x_2 bs_0) cs_0) x_26) x_2 (cons_2 (pair_1 bs_0 cs_0) x_3)))))
(assert (forall ((x_2 T_0))
	(splits_0 nil_2 x_2 nil_2)))
(assert (forall ((x_29 list_2) (x_30 list_2) (y_1 T_0) (xs_0 list_1))
	(=> (and (splits_1 x_29 xs_0) (splits_0 x_30 y_1 x_29)) (splits_1 (cons_2 (pair_1 nil_1 (cons_1 y_1 xs_0)) x_30) (cons_1 y_1 xs_0)))))
(assert (splits_1 (cons_2 (pair_1 nil_1 nil_1) nil_2) nil_1))
(assert (forall ((x_106 Bool_0) (x_33 Bool_0) (y_2 Bool_0) (xs_1 list_0))
	(=> (and (or_0 x_33 xs_1) (or_1 x_106 y_2 x_33)) (or_0 x_106 (cons_0 y_2 xs_1)))))
(assert (or_0 false_0 nil_0))
(assert (forall ((y_3 R_0))
	(eps_1 true_0 (Star_0 y_3))))
(assert (forall ((x_107 Bool_0) (x_37 Bool_0) (x_38 Bool_0) (r_1 R_0) (q_1 R_0))
	(=> (and (eps_1 x_37 r_1) (eps_1 x_38 q_1) (and_0 x_107 x_37 x_38)) (eps_1 x_107 (x_1 r_1 q_1)))))
(assert (forall ((x_108 Bool_0) (x_40 Bool_0) (x_41 Bool_0) (p_0 R_0) (q_0 R_0))
	(=> (and (eps_1 x_40 p_0) (eps_1 x_41 q_0) (or_1 x_108 x_40 x_41)) (eps_1 x_108 (x_0 p_0 q_0)))))
(assert (eps_1 true_0 Eps_0))
(assert (forall ((x_7 R_0) (x_23 T_0))
	(eps_1 false_0 (Atom_0 x_23))))
(assert (forall ((x_7 R_0))
	(eps_1 false_0 Nil_3)))
(assert (forall ((x_109 Bool_0) (x_110 Bool_0) (x_46 Bool_0) (x_47 Bool_0) (p_2 R_0))
	(=> (and (okay_0 x_46 p_2) (eps_1 x_47 p_2) (not_0 x_109 x_47) (and_0 x_110 x_46 x_109)) (okay_0 x_110 (Star_0 p_2)))))
(assert (forall ((x_111 Bool_0) (x_49 Bool_0) (x_50 Bool_0) (r_2 R_0) (q_3 R_0))
	(=> (and (okay_0 x_49 r_2) (okay_0 x_50 q_3) (and_0 x_111 x_49 x_50)) (okay_0 x_111 (x_1 r_2 q_3)))))
(assert (forall ((x_112 Bool_0) (x_52 Bool_0) (x_53 Bool_0) (p_1 R_0) (q_2 R_0))
	(=> (and (okay_0 x_52 p_1) (okay_0 x_53 q_2) (and_0 x_112 x_52 x_53)) (okay_0 x_112 (x_0 p_1 q_2)))))
(assert (forall ((x_9 R_0) (x_24 T_0))
	(okay_0 true_0 (Atom_0 x_24))))
(assert (forall ((x_9 R_0))
	(okay_0 true_0 Eps_0)))
(assert (forall ((x_9 R_0))
	(okay_0 true_0 Nil_3)))
(assert (forall ((x_58 R_0) (p_4 R_0) (y_4 T_0))
	(=> (step_0 x_58 p_4 y_4) (step_0 (x_1 x_58 (Star_0 p_4)) (Star_0 p_4) y_4))))
(assert (forall ((x_61 R_0) (x_62 R_0) (r_3 R_0) (q_5 R_0) (y_4 T_0))
	(=> (and (step_0 x_61 r_3 y_4) (step_0 x_62 q_5 y_4) (eps_1 true_0 r_3)) (step_0 (x_0 (x_1 x_61 q_5) x_62) (x_1 r_3 q_5) y_4))))
(assert (forall ((x_65 R_0) (x_63 Bool_0) (r_3 R_0) (q_5 R_0) (y_4 T_0))
	(=> (and (diseqBool_0 x_63 true_0) (step_0 x_65 r_3 y_4) (eps_1 x_63 r_3)) (step_0 (x_0 (x_1 x_65 q_5) Nil_3) (x_1 r_3 q_5) y_4))))
(assert (forall ((x_67 R_0) (x_68 R_0) (p_3 R_0) (q_4 R_0) (y_4 T_0))
	(=> (and (step_0 x_67 p_3 y_4) (step_0 x_68 q_4 y_4)) (step_0 (x_0 x_67 x_68) (x_0 p_3 q_4) y_4))))
(assert (forall ((b_1 T_0))
	(step_0 Eps_0 (Atom_0 b_1) b_1)))
(assert (forall ((b_1 T_0) (y_4 T_0))
	(=> (diseqT_0 b_1 y_4) (step_0 Nil_3 (Atom_0 b_1) y_4))))
(assert (forall ((x_11 R_0) (y_4 T_0))
	(step_0 Nil_3 Eps_0 y_4)))
(assert (forall ((x_11 R_0) (y_4 T_0))
	(step_0 Nil_3 Nil_3 y_4)))
(assert (forall ((x_73 Bool_0) (x_74 R_0) (z_1 T_0) (xs_2 list_1) (x_12 R_0))
	(=> (and (step_0 x_74 x_12 z_1) (rec_0 x_73 x_74 xs_2)) (rec_0 x_73 x_12 (cons_1 z_1 xs_2)))))
(assert (forall ((x_76 Bool_0) (x_12 R_0))
	(=> (eps_1 x_76 x_12) (rec_0 x_76 x_12 nil_1))))
(assert (forall ((x_79 Bool_0) (x_78 Bool_0) (x_20 T_0) (x_21 list_1) (p_7 R_0))
	(=> (and (diseqBool_0 x_78 true_0) (rec_0 x_79 (x_1 p_7 (Star_0 p_7)) (cons_1 x_20 x_21)) (eps_1 x_78 p_7)) (reck_0 x_79 (Star_0 p_7) (cons_1 x_20 x_21)))))
(assert (forall ((x_20 T_0) (x_21 list_1) (p_7 R_0))
	(=> (eps_1 true_0 p_7) (reck_0 false_0 (Star_0 p_7) (cons_1 x_20 x_21)))))
(assert (forall ((p_7 R_0))
	(reck_0 true_0 (Star_0 p_7) nil_1)))
(assert (forall ((x_84 Bool_0) (x_85 list_2) (x_86 list_0) (r_4 R_0) (q_8 R_0) (y_7 list_1))
	(=> (and (splits_1 x_85 y_7) (reck_1 x_86 r_4 q_8 x_85) (or_0 x_84 x_86)) (reck_0 x_84 (x_1 r_4 q_8) y_7))))
(assert (forall ((x_113 Bool_0) (x_89 Bool_0) (x_90 Bool_0) (p_6 R_0) (q_7 R_0) (y_7 list_1))
	(=> (and (reck_0 x_89 p_6 y_7) (reck_0 x_90 q_7 y_7) (or_1 x_113 x_89 x_90)) (reck_0 x_113 (x_0 p_6 q_7) y_7))))
(assert (forall ((x_18 T_0) (x_19 list_1) (b_2 T_0) (c_1 T_0))
	(reck_0 false_0 (Atom_0 c_1) (cons_1 b_2 (cons_1 x_18 x_19)))))
(assert (forall ((b_2 T_0))
	(reck_0 true_0 (Atom_0 b_2) (cons_1 b_2 nil_1))))
(assert (forall ((b_2 T_0) (c_1 T_0))
	(=> (diseqT_0 c_1 b_2) (reck_0 false_0 (Atom_0 c_1) (cons_1 b_2 nil_1)))))
(assert (forall ((c_1 T_0))
	(reck_0 false_0 (Atom_0 c_1) nil_1)))
(assert (forall ((z_2 T_0) (x_16 list_1))
	(reck_0 false_0 Eps_0 (cons_1 z_2 x_16))))
(assert (reck_0 true_0 Eps_0 nil_1))
(assert (forall ((y_7 list_1))
	(reck_0 false_0 Nil_3 y_7)))
(assert (forall ((x_114 Bool_0) (x_99 Bool_0) (x_100 Bool_0) (x_101 list_0) (l_0 list_1) (r_5 list_1) (z_3 list_2) (p_8 R_0) (q_9 R_0))
	(=> (and (reck_0 x_99 p_8 l_0) (rec_0 x_100 q_9 r_5) (reck_1 x_101 p_8 q_9 z_3) (and_0 x_114 x_99 x_100)) (reck_1 (cons_0 x_114 x_101) p_8 q_9 (cons_2 (pair_1 l_0 r_5) z_3)))))
(assert (forall ((p_8 R_0) (q_9 R_0))
	(reck_1 nil_0 p_8 q_9 nil_2)))
(assert (forall ((x_103 Bool_0) (x_104 Bool_0) (p_9 R_0) (s_0 list_1))
	(=> (and (diseqBool_0 x_103 x_104) (okay_0 true_0 p_9) (rec_0 x_103 p_9 s_0) (reck_0 x_104 p_9 s_0)) false)))
(check-sat)
(get-model)
