(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_171 Nat_0) (x_170 Nat_0))
	(=> (= x_171 (S_0 x_170))
	    (unS_1 x_170 x_171))))
(assert (isZ_0 Z_0))
(assert (forall ((x_172 Nat_0))
	(isS_0 (S_0 x_172))))
(assert (forall ((x_173 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_173))))
(assert (forall ((x_174 Nat_0))
	(diseqNat_0 (S_0 x_174) Z_0)))
(assert (forall ((x_175 Nat_0) (x_176 Nat_0))
	(=> (diseqNat_0 x_175 x_176)
	    (diseqNat_0 (S_0 x_175) (S_0 x_176)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_21 Nat_0))
	(add_0 y_21 Z_0 y_21)))
(assert (forall ((x_164 Nat_0) (y_21 Nat_0) (r_1 Nat_0))
	(=> (add_0 r_1 x_164 y_21)
	    (add_0 (S_0 r_1) (S_0 x_164) y_21))))
(assert (forall ((y_21 Nat_0))
	(minus_0 Z_0 Z_0 y_21)))
(assert (forall ((x_164 Nat_0) (y_21 Nat_0) (r_1 Nat_0))
	(=> (minus_0 r_1 x_164 y_21)
	    (minus_0 (S_0 r_1) (S_0 x_164) y_21))))
(assert (forall ((y_21 Nat_0))
	(le_0 Z_0 y_21)))
(assert (forall ((x_164 Nat_0) (y_21 Nat_0))
	(=> (le_0 x_164 y_21)
	    (le_0 (S_0 x_164) (S_0 y_21)))))
(assert (forall ((y_21 Nat_0))
	(ge_0 y_21 Z_0)))
(assert (forall ((x_164 Nat_0) (y_21 Nat_0))
	(=> (ge_0 x_164 y_21)
	    (ge_0 (S_0 x_164) (S_0 y_21)))))
(assert (forall ((y_21 Nat_0))
	(lt_0 Z_0 (S_0 y_21))))
(assert (forall ((x_164 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_164 y_21)
	    (lt_0 (S_0 x_164) (S_0 y_21)))))
(assert (forall ((y_21 Nat_0))
	(gt_0 (S_0 y_21) Z_0)))
(assert (forall ((x_164 Nat_0) (y_21 Nat_0))
	(=> (gt_0 x_164 y_21)
	    (gt_0 (S_0 x_164) (S_0 y_21)))))
(assert (forall ((y_21 Nat_0))
	(mult_0 Z_0 Z_0 y_21)))
(assert (forall ((x_164 Nat_0) (y_21 Nat_0) (r_1 Nat_0) (z_13 Nat_0))
	(=>	(and (mult_0 r_1 x_164 y_21)
			(add_0 z_13 r_1 y_21))
		(mult_0 z_13 (S_0 x_164) y_21))))
(assert (forall ((x_164 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_164 y_21)
	    (div_0 Z_0 x_164 y_21))))
(assert (forall ((x_164 Nat_0) (y_21 Nat_0) (r_1 Nat_0) (z_13 Nat_0))
	(=>	(and (ge_0 x_164 y_21)
			(minus_0 z_13 x_164 y_21)
			(div_0 r_1 z_13 y_21))
		(div_0 (S_0 r_1) x_164 y_21))))
(assert (forall ((x_164 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_164 y_21)
	    (mod_0 x_164 x_164 y_21))))
(assert (forall ((x_164 Nat_0) (y_21 Nat_0) (r_1 Nat_0) (z_13 Nat_0))
	(=>	(and (ge_0 x_164 y_21)
			(minus_0 z_13 x_164 y_21)
			(mod_0 r_1 z_13 y_21))
		(mod_0 r_1 x_164 y_21))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Nat_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_4 (Nat_0 pair_0) Bool)
(declare-fun projpair_5 (Nat_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_179 pair_0) (x_177 Nat_0) (x_178 Nat_0))
	(=> (= x_179 (pair_1 x_177 x_178))
	    (projpair_4 x_177 x_179))))
(assert (forall ((x_179 pair_0) (x_177 Nat_0) (x_178 Nat_0))
	(=> (= x_179 (pair_1 x_177 x_178))
	    (projpair_5 x_178 x_179))))
(assert (forall ((x_180 Nat_0) (x_181 Nat_0))
	(ispair_0 (pair_1 x_180 x_181))))
(assert (forall ((x_182 Nat_0) (x_183 Nat_0) (x_184 Nat_0) (x_185 Nat_0))
	(=> (diseqNat_0 x_182 x_184)
	    (diseqpair_0 (pair_1 x_182 x_183) (pair_1 x_184 x_185)))))
(assert (forall ((x_182 Nat_0) (x_183 Nat_0) (x_184 Nat_0) (x_185 Nat_0))
	(=> (diseqNat_0 x_183 x_185)
	    (diseqpair_0 (pair_1 x_182 x_183) (pair_1 x_184 x_185)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_2 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_189 list_0) (x_187 Nat_0) (x_188 list_0))
	(=> (= x_189 (cons_0 x_187 x_188))
	    (head_1 x_187 x_189))))
(assert (forall ((x_189 list_0) (x_187 Nat_0) (x_188 list_0))
	(=> (= x_189 (cons_0 x_187 x_188))
	    (tail_2 x_188 x_189))))
(assert (isnil_0 nil_0))
(assert (forall ((x_190 Nat_0) (x_191 list_0))
	(iscons_0 (cons_0 x_190 x_191))))
(assert (forall ((x_192 Nat_0) (x_193 list_0))
	(diseqlist_0 nil_0 (cons_0 x_192 x_193))))
(assert (forall ((x_194 Nat_0) (x_195 list_0))
	(diseqlist_0 (cons_0 x_194 x_195) nil_0)))
(assert (forall ((x_196 Nat_0) (x_197 list_0) (x_198 Nat_0) (x_199 list_0))
	(=> (diseqNat_0 x_196 x_198)
	    (diseqlist_0 (cons_0 x_196 x_197) (cons_0 x_198 x_199)))))
(assert (forall ((x_196 Nat_0) (x_197 list_0) (x_198 Nat_0) (x_199 list_0))
	(=> (diseqlist_0 x_197 x_199)
	    (diseqlist_0 (cons_0 x_196 x_197) (cons_0 x_198 x_199)))))
(declare-datatypes ((pair_2 0)) (((pair_3 (projpair_2 list_0) (projpair_3 list_0)))))
(declare-fun diseqpair_1 (pair_2 pair_2) Bool)
(declare-fun projpair_6 (list_0 pair_2) Bool)
(declare-fun projpair_7 (list_0 pair_2) Bool)
(declare-fun ispair_1 (pair_2) Bool)
(assert (forall ((x_202 pair_2) (x_200 list_0) (x_201 list_0))
	(=> (= x_202 (pair_3 x_200 x_201))
	    (projpair_6 x_200 x_202))))
(assert (forall ((x_202 pair_2) (x_200 list_0) (x_201 list_0))
	(=> (= x_202 (pair_3 x_200 x_201))
	    (projpair_7 x_201 x_202))))
(assert (forall ((x_203 list_0) (x_204 list_0))
	(ispair_1 (pair_3 x_203 x_204))))
(assert (forall ((x_205 list_0) (x_206 list_0) (x_207 list_0) (x_208 list_0))
	(=> (diseqlist_0 x_205 x_207)
	    (diseqpair_1 (pair_3 x_205 x_206) (pair_3 x_207 x_208)))))
(assert (forall ((x_205 list_0) (x_206 list_0) (x_207 list_0) (x_208 list_0))
	(=> (diseqlist_0 x_206 x_208)
	    (diseqpair_1 (pair_3 x_205 x_206) (pair_3 x_207 x_208)))))
(declare-datatypes ((Q_0 0)) (((Q_1 (projQ_0 list_0) (projQ_1 list_0)))))
(declare-fun diseqQ_0 (Q_0 Q_0) Bool)
(declare-fun projQ_2 (list_0 Q_0) Bool)
(declare-fun projQ_3 (list_0 Q_0) Bool)
(declare-fun isQ_0 (Q_0) Bool)
(assert (forall ((x_211 Q_0) (x_209 list_0) (x_210 list_0))
	(=> (= x_211 (Q_1 x_209 x_210))
	    (projQ_2 x_209 x_211))))
(assert (forall ((x_211 Q_0) (x_209 list_0) (x_210 list_0))
	(=> (= x_211 (Q_1 x_209 x_210))
	    (projQ_3 x_210 x_211))))
(assert (forall ((x_212 list_0) (x_213 list_0))
	(isQ_0 (Q_1 x_212 x_213))))
(assert (forall ((x_214 list_0) (x_215 list_0) (x_216 list_0) (x_217 list_0))
	(=> (diseqlist_0 x_214 x_216)
	    (diseqQ_0 (Q_1 x_214 x_215) (Q_1 x_216 x_217)))))
(assert (forall ((x_214 list_0) (x_215 list_0) (x_216 list_0) (x_217 list_0))
	(=> (diseqlist_0 x_215 x_217)
	    (diseqQ_0 (Q_1 x_214 x_215) (Q_1 x_216 x_217)))))
(declare-datatypes ((Maybe_0 0)) (((Nothing_0 ) (Just_0 (projJust_0 Nat_0)))))
(declare-fun diseqMaybe_0 (Maybe_0 Maybe_0) Bool)
(declare-fun projJust_2 (Nat_0 Maybe_0) Bool)
(declare-fun isNothing_0 (Maybe_0) Bool)
(declare-fun isJust_0 (Maybe_0) Bool)
(assert (forall ((x_220 Maybe_0) (x_219 Nat_0))
	(=> (= x_220 (Just_0 x_219))
	    (projJust_2 x_219 x_220))))
(assert (isNothing_0 Nothing_0))
(assert (forall ((x_221 Nat_0))
	(isJust_0 (Just_0 x_221))))
(assert (forall ((x_222 Nat_0))
	(diseqMaybe_0 Nothing_0 (Just_0 x_222))))
(assert (forall ((x_223 Nat_0))
	(diseqMaybe_0 (Just_0 x_223) Nothing_0)))
(assert (forall ((x_224 Nat_0) (x_225 Nat_0))
	(=> (diseqNat_0 x_224 x_225)
	    (diseqMaybe_0 (Just_0 x_224) (Just_0 x_225)))))
(declare-datatypes ((Maybe_1 0)) (((Nothing_1 ) (Just_1 (projJust_1 Q_0)))))
(declare-fun diseqMaybe_1 (Maybe_1 Maybe_1) Bool)
(declare-fun projJust_3 (Q_0 Maybe_1) Bool)
(declare-fun isNothing_1 (Maybe_1) Bool)
(declare-fun isJust_1 (Maybe_1) Bool)
(assert (forall ((x_228 Maybe_1) (x_227 Q_0))
	(=> (= x_228 (Just_1 x_227))
	    (projJust_3 x_227 x_228))))
(assert (isNothing_1 Nothing_1))
(assert (forall ((x_229 Q_0))
	(isJust_1 (Just_1 x_229))))
(assert (forall ((x_230 Q_0))
	(diseqMaybe_1 Nothing_1 (Just_1 x_230))))
(assert (forall ((x_231 Q_0))
	(diseqMaybe_1 (Just_1 x_231) Nothing_1)))
(assert (forall ((x_232 Q_0) (x_233 Q_0))
	(=> (diseqQ_0 x_232 x_233)
	    (diseqMaybe_1 (Just_1 x_232) (Just_1 x_233)))))
(declare-datatypes ((E_0 0)) (((Empty_0 ) (EnqL_0 (projEnqL_0 Nat_0) (projEnqL_1 E_0)) (EnqR_0 (projEnqR_0 E_0) (projEnqR_1 Nat_0)) (DeqL_0 (projDeqL_0 E_0)) (DeqR_0 (projDeqR_0 E_0)) (App_0 (projApp_0 E_0) (projApp_1 E_0)))))
(declare-fun diseqE_0 (E_0 E_0) Bool)
(declare-fun projEnqL_2 (Nat_0 E_0) Bool)
(declare-fun projEnqL_3 (E_0 E_0) Bool)
(declare-fun projEnqR_2 (E_0 E_0) Bool)
(declare-fun projEnqR_3 (Nat_0 E_0) Bool)
(declare-fun projDeqL_1 (E_0 E_0) Bool)
(declare-fun projDeqR_1 (E_0 E_0) Bool)
(declare-fun projApp_2 (E_0 E_0) Bool)
(declare-fun projApp_3 (E_0 E_0) Bool)
(declare-fun isEmpty_0 (E_0) Bool)
(declare-fun isEnqL_0 (E_0) Bool)
(declare-fun isEnqR_0 (E_0) Bool)
(declare-fun isDeqL_0 (E_0) Bool)
(declare-fun isDeqR_0 (E_0) Bool)
(declare-fun isApp_0 (E_0) Bool)
(assert (forall ((x_237 E_0) (x_235 Nat_0) (x_236 E_0))
	(=> (= x_237 (EnqL_0 x_235 x_236))
	    (projEnqL_2 x_235 x_237))))
(assert (forall ((x_237 E_0) (x_235 Nat_0) (x_236 E_0))
	(=> (= x_237 (EnqL_0 x_235 x_236))
	    (projEnqL_3 x_236 x_237))))
(assert (forall ((x_240 E_0) (x_238 E_0) (x_239 Nat_0))
	(=> (= x_240 (EnqR_0 x_238 x_239))
	    (projEnqR_2 x_238 x_240))))
(assert (forall ((x_240 E_0) (x_238 E_0) (x_239 Nat_0))
	(=> (= x_240 (EnqR_0 x_238 x_239))
	    (projEnqR_3 x_239 x_240))))
(assert (forall ((x_242 E_0) (x_241 E_0))
	(=> (= x_242 (DeqL_0 x_241))
	    (projDeqL_1 x_241 x_242))))
(assert (forall ((x_244 E_0) (x_243 E_0))
	(=> (= x_244 (DeqR_0 x_243))
	    (projDeqR_1 x_243 x_244))))
(assert (forall ((x_247 E_0) (x_245 E_0) (x_246 E_0))
	(=> (= x_247 (App_0 x_245 x_246))
	    (projApp_2 x_245 x_247))))
(assert (forall ((x_247 E_0) (x_245 E_0) (x_246 E_0))
	(=> (= x_247 (App_0 x_245 x_246))
	    (projApp_3 x_246 x_247))))
(assert (isEmpty_0 Empty_0))
(assert (forall ((x_248 Nat_0) (x_249 E_0))
	(isEnqL_0 (EnqL_0 x_248 x_249))))
(assert (forall ((x_250 E_0) (x_251 Nat_0))
	(isEnqR_0 (EnqR_0 x_250 x_251))))
(assert (forall ((x_252 E_0))
	(isDeqL_0 (DeqL_0 x_252))))
(assert (forall ((x_253 E_0))
	(isDeqR_0 (DeqR_0 x_253))))
(assert (forall ((x_254 E_0) (x_255 E_0))
	(isApp_0 (App_0 x_254 x_255))))
(assert (forall ((x_256 Nat_0) (x_257 E_0))
	(diseqE_0 Empty_0 (EnqL_0 x_256 x_257))))
(assert (forall ((x_258 E_0) (x_259 Nat_0))
	(diseqE_0 Empty_0 (EnqR_0 x_258 x_259))))
(assert (forall ((x_260 E_0))
	(diseqE_0 Empty_0 (DeqL_0 x_260))))
(assert (forall ((x_261 E_0))
	(diseqE_0 Empty_0 (DeqR_0 x_261))))
(assert (forall ((x_262 E_0) (x_263 E_0))
	(diseqE_0 Empty_0 (App_0 x_262 x_263))))
(assert (forall ((x_264 Nat_0) (x_265 E_0))
	(diseqE_0 (EnqL_0 x_264 x_265) Empty_0)))
(assert (forall ((x_266 E_0) (x_267 Nat_0))
	(diseqE_0 (EnqR_0 x_266 x_267) Empty_0)))
(assert (forall ((x_268 E_0))
	(diseqE_0 (DeqL_0 x_268) Empty_0)))
(assert (forall ((x_269 E_0))
	(diseqE_0 (DeqR_0 x_269) Empty_0)))
(assert (forall ((x_270 E_0) (x_271 E_0))
	(diseqE_0 (App_0 x_270 x_271) Empty_0)))
(assert (forall ((x_272 Nat_0) (x_273 E_0) (x_274 E_0) (x_275 Nat_0))
	(diseqE_0 (EnqL_0 x_272 x_273) (EnqR_0 x_274 x_275))))
(assert (forall ((x_276 Nat_0) (x_277 E_0) (x_278 E_0))
	(diseqE_0 (EnqL_0 x_276 x_277) (DeqL_0 x_278))))
(assert (forall ((x_279 Nat_0) (x_280 E_0) (x_281 E_0))
	(diseqE_0 (EnqL_0 x_279 x_280) (DeqR_0 x_281))))
(assert (forall ((x_282 Nat_0) (x_283 E_0) (x_284 E_0) (x_285 E_0))
	(diseqE_0 (EnqL_0 x_282 x_283) (App_0 x_284 x_285))))
(assert (forall ((x_286 E_0) (x_287 Nat_0) (x_288 Nat_0) (x_289 E_0))
	(diseqE_0 (EnqR_0 x_286 x_287) (EnqL_0 x_288 x_289))))
(assert (forall ((x_290 E_0) (x_291 Nat_0) (x_292 E_0))
	(diseqE_0 (DeqL_0 x_290) (EnqL_0 x_291 x_292))))
(assert (forall ((x_293 E_0) (x_294 Nat_0) (x_295 E_0))
	(diseqE_0 (DeqR_0 x_293) (EnqL_0 x_294 x_295))))
(assert (forall ((x_296 E_0) (x_297 E_0) (x_298 Nat_0) (x_299 E_0))
	(diseqE_0 (App_0 x_296 x_297) (EnqL_0 x_298 x_299))))
(assert (forall ((x_300 E_0) (x_301 Nat_0) (x_302 E_0))
	(diseqE_0 (EnqR_0 x_300 x_301) (DeqL_0 x_302))))
(assert (forall ((x_303 E_0) (x_304 Nat_0) (x_305 E_0))
	(diseqE_0 (EnqR_0 x_303 x_304) (DeqR_0 x_305))))
(assert (forall ((x_306 E_0) (x_307 Nat_0) (x_308 E_0) (x_309 E_0))
	(diseqE_0 (EnqR_0 x_306 x_307) (App_0 x_308 x_309))))
(assert (forall ((x_310 E_0) (x_311 E_0) (x_312 Nat_0))
	(diseqE_0 (DeqL_0 x_310) (EnqR_0 x_311 x_312))))
(assert (forall ((x_313 E_0) (x_314 E_0) (x_315 Nat_0))
	(diseqE_0 (DeqR_0 x_313) (EnqR_0 x_314 x_315))))
(assert (forall ((x_316 E_0) (x_317 E_0) (x_318 E_0) (x_319 Nat_0))
	(diseqE_0 (App_0 x_316 x_317) (EnqR_0 x_318 x_319))))
(assert (forall ((x_320 E_0) (x_321 E_0))
	(diseqE_0 (DeqL_0 x_320) (DeqR_0 x_321))))
(assert (forall ((x_322 E_0) (x_323 E_0) (x_324 E_0))
	(diseqE_0 (DeqL_0 x_322) (App_0 x_323 x_324))))
(assert (forall ((x_325 E_0) (x_326 E_0))
	(diseqE_0 (DeqR_0 x_325) (DeqL_0 x_326))))
(assert (forall ((x_327 E_0) (x_328 E_0) (x_329 E_0))
	(diseqE_0 (App_0 x_327 x_328) (DeqL_0 x_329))))
(assert (forall ((x_330 E_0) (x_331 E_0) (x_332 E_0))
	(diseqE_0 (DeqR_0 x_330) (App_0 x_331 x_332))))
(assert (forall ((x_333 E_0) (x_334 E_0) (x_335 E_0))
	(diseqE_0 (App_0 x_333 x_334) (DeqR_0 x_335))))
(assert (forall ((x_336 Nat_0) (x_337 E_0) (x_338 Nat_0) (x_339 E_0))
	(=> (diseqNat_0 x_336 x_338)
	    (diseqE_0 (EnqL_0 x_336 x_337) (EnqL_0 x_338 x_339)))))
(assert (forall ((x_336 Nat_0) (x_337 E_0) (x_338 Nat_0) (x_339 E_0))
	(=> (diseqE_0 x_337 x_339)
	    (diseqE_0 (EnqL_0 x_336 x_337) (EnqL_0 x_338 x_339)))))
(assert (forall ((x_340 E_0) (x_341 Nat_0) (x_342 E_0) (x_343 Nat_0))
	(=> (diseqE_0 x_340 x_342)
	    (diseqE_0 (EnqR_0 x_340 x_341) (EnqR_0 x_342 x_343)))))
(assert (forall ((x_340 E_0) (x_341 Nat_0) (x_342 E_0) (x_343 Nat_0))
	(=> (diseqNat_0 x_341 x_343)
	    (diseqE_0 (EnqR_0 x_340 x_341) (EnqR_0 x_342 x_343)))))
(assert (forall ((x_344 E_0) (x_345 E_0))
	(=> (diseqE_0 x_344 x_345)
	    (diseqE_0 (DeqL_0 x_344) (DeqL_0 x_345)))))
(assert (forall ((x_346 E_0) (x_347 E_0))
	(=> (diseqE_0 x_346 x_347)
	    (diseqE_0 (DeqR_0 x_346) (DeqR_0 x_347)))))
(assert (forall ((x_348 E_0) (x_349 E_0) (x_350 E_0) (x_351 E_0))
	(=> (diseqE_0 x_348 x_350)
	    (diseqE_0 (App_0 x_348 x_349) (App_0 x_350 x_351)))))
(assert (forall ((x_348 E_0) (x_349 E_0) (x_350 E_0) (x_351 E_0))
	(=> (diseqE_0 x_349 x_351)
	    (diseqE_0 (App_0 x_348 x_349) (App_0 x_350 x_351)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_44 list_0))
	(=>	(and (= x_44 nil_0)
			(le_0 x_0 Z_0))
		(take_0 x_44 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (xs_0 list_0) (x_45 list_0) (x_46 list_0) (x_165 Nat_0))
	(=>	(and (= x_45 (cons_0 z_0 x_46))
			(take_0 x_46 x_165 xs_0)
			(gt_0 x_0 Z_0)
			(= y_0 (cons_0 z_0 xs_0))
			(minus_0 x_165 x_0 (S_0 Z_0)))
		(take_0 x_45 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_47 list_0))
	(=>	(and (= x_47 nil_0)
			(le_0 x_0 Z_0))
		(take_0 x_47 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_48 list_0))
	(=>	(and (= x_48 nil_0)
			(gt_0 x_0 Z_0)
			(= y_0 nil_0))
		(take_0 x_48 x_0 y_0))))
(declare-fun tail_1 (list_0 list_0) Bool)
(assert (forall ((x_1 list_0) (y_1 Nat_0) (xs_1 list_0) (x_49 list_0))
	(=>	(and (= x_49 xs_1)
			(= x_1 (cons_0 y_1 xs_1)))
		(tail_1 x_49 x_1))))
(assert (forall ((x_1 list_0) (x_50 list_0))
	(=>	(and (= x_50 nil_0)
			(= x_1 nil_0))
		(tail_1 x_50 x_1))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_2 list_0) (y_2 Nat_0) (l_0 list_0) (x_51 Nat_0) (x_52 Nat_0) (x_166 Nat_0))
	(=>	(and (= x_51 x_166)
			(length_0 x_52 l_0)
			(= x_2 (cons_0 y_2 l_0))
			(add_0 x_166 (S_0 Z_0) x_52))
		(length_0 x_51 x_2))))
(assert (forall ((x_2 list_0) (x_53 Nat_0))
	(=>	(and (= x_53 Z_0)
			(= x_2 nil_0))
		(length_0 x_53 x_2))))
(declare-fun init_0 (list_0 list_0) Bool)
(assert (forall ((x_3 list_0) (y_3 Nat_0) (z_1 list_0) (x_4 Nat_0) (x_5 list_0) (x_54 list_0) (x_55 list_0))
	(=>	(and (= x_54 (cons_0 y_3 x_55))
			(init_0 x_55 (cons_0 x_4 x_5))
			(= x_3 (cons_0 y_3 z_1))
			(= z_1 (cons_0 x_4 x_5)))
		(init_0 x_54 x_3))))
(assert (forall ((x_3 list_0) (y_3 Nat_0) (z_1 list_0) (x_56 list_0))
	(=>	(and (= x_56 nil_0)
			(= x_3 (cons_0 y_3 z_1))
			(= z_1 nil_0))
		(init_0 x_56 x_3))))
(assert (forall ((x_3 list_0) (x_57 list_0))
	(=>	(and (= x_57 nil_0)
			(= x_3 nil_0))
		(init_0 x_57 x_3))))
(declare-fun fstL_0 (Maybe_0 Q_0) Bool)
(assert (forall ((x_6 Q_0) (y_4 list_0) (z_2 list_0) (x_7 Nat_0) (x_8 list_0) (x_58 Maybe_0))
	(=>	(and (= x_58 (Just_0 x_7))
			(= x_6 (Q_1 y_4 z_2))
			(= y_4 (cons_0 x_7 x_8)))
		(fstL_0 x_58 x_6))))
(assert (forall ((x_6 Q_0) (y_4 list_0) (z_2 list_0) (y_5 Nat_0) (x_9 list_0) (x_10 Nat_0) (x_11 list_0) (x_59 Maybe_0))
	(=>	(and (= x_59 Nothing_0)
			(= x_6 (Q_1 y_4 z_2))
			(= y_4 nil_0)
			(= z_2 (cons_0 y_5 x_9))
			(= x_9 (cons_0 x_10 x_11)))
		(fstL_0 x_59 x_6))))
(assert (forall ((x_6 Q_0) (y_4 list_0) (z_2 list_0) (y_5 Nat_0) (x_9 list_0) (x_60 Maybe_0))
	(=>	(and (= x_60 (Just_0 y_5))
			(= x_6 (Q_1 y_4 z_2))
			(= y_4 nil_0)
			(= z_2 (cons_0 y_5 x_9))
			(= x_9 nil_0))
		(fstL_0 x_60 x_6))))
(assert (forall ((x_6 Q_0) (y_4 list_0) (z_2 list_0) (x_61 Maybe_0))
	(=>	(and (= x_61 Nothing_0)
			(= x_6 (Q_1 y_4 z_2))
			(= y_4 nil_0)
			(= z_2 nil_0))
		(fstL_0 x_61 x_6))))
(declare-fun fromMaybe_0 (Nat_0 Nat_0 Maybe_0) Bool)
(assert (forall ((x_12 Nat_0) (y_6 Maybe_0) (z_3 Nat_0) (x_62 Nat_0))
	(=>	(and (= x_62 z_3)
			(= y_6 (Just_0 z_3)))
		(fromMaybe_0 x_62 x_12 y_6))))
(assert (forall ((x_12 Nat_0) (y_6 Maybe_0) (x_63 Nat_0))
	(=>	(and (= x_63 x_12)
			(= y_6 Nothing_0))
		(fromMaybe_0 x_63 x_12 y_6))))
(declare-fun fromMaybe_1 (Q_0 Q_0 Maybe_1) Bool)
(assert (forall ((x_13 Q_0) (y_7 Maybe_1) (z_4 Q_0) (x_64 Q_0))
	(=>	(and (= x_64 z_4)
			(= y_7 (Just_1 z_4)))
		(fromMaybe_1 x_64 x_13 y_7))))
(assert (forall ((x_13 Q_0) (y_7 Maybe_1) (x_65 Q_0))
	(=>	(and (= x_65 x_13)
			(= y_7 Nothing_1))
		(fromMaybe_1 x_65 x_13 y_7))))
(declare-fun empty_0 (Q_0) Bool)
(assert (forall ((x_66 Q_0))
	(=> (= x_66 (Q_1 nil_0 nil_0))
	    (empty_0 x_66))))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_14 Nat_0) (y_8 list_0) (x_67 list_0))
	(=>	(and (= x_67 y_8)
			(le_0 x_14 Z_0))
		(drop_0 x_67 x_14 y_8))))
(assert (forall ((x_14 Nat_0) (y_8 list_0) (z_5 Nat_0) (xs_2 list_0) (x_68 list_0) (x_69 list_0) (x_167 Nat_0))
	(=>	(and (= x_68 x_69)
			(drop_0 x_69 x_167 xs_2)
			(gt_0 x_14 Z_0)
			(= y_8 (cons_0 z_5 xs_2))
			(minus_0 x_167 x_14 (S_0 Z_0)))
		(drop_0 x_68 x_14 y_8))))
(assert (forall ((x_14 Nat_0) (y_8 list_0) (x_70 list_0))
	(=>	(and (= x_70 y_8)
			(le_0 x_14 Z_0))
		(drop_0 x_70 x_14 y_8))))
(assert (forall ((x_14 Nat_0) (y_8 list_0) (x_71 list_0))
	(=>	(and (= x_71 nil_0)
			(gt_0 x_14 Z_0)
			(= y_8 nil_0))
		(drop_0 x_71 x_14 y_8))))
(declare-fun halve_0 (pair_2 list_0) Bool)
(assert (forall ((x_15 list_0) (k_0 Nat_0) (x_73 pair_2) (x_74 list_0) (x_75 list_0) (x_72 Nat_0) (x_168 Nat_0))
	(=>	(and (= x_73 (pair_3 x_74 x_75))
			(take_0 x_74 k_0 x_15)
			(drop_0 x_75 k_0 x_15)
			(= k_0 x_168)
			(length_0 x_72 x_15)
			(div_0 x_168 x_72 (S_0 (S_0 Z_0))))
		(halve_0 x_73 x_15))))
(declare-fun x_16 (list_0 list_0 list_0) Bool)
(assert (forall ((x_17 list_0) (y_9 list_0) (z_6 Nat_0) (xs_3 list_0) (x_76 list_0) (x_77 list_0))
	(=>	(and (= x_76 (cons_0 z_6 x_77))
			(x_16 x_77 xs_3 y_9)
			(= x_17 (cons_0 z_6 xs_3)))
		(x_16 x_76 x_17 y_9))))
(assert (forall ((x_17 list_0) (y_9 list_0) (x_78 list_0))
	(=>	(and (= x_78 y_9)
			(= x_17 nil_0))
		(x_16 x_78 x_17 y_9))))
(declare-fun list_1 (list_0 E_0) Bool)
(assert (forall ((x_18 E_0) (a_0 E_0) (b_0 E_0) (x_79 list_0) (x_80 list_0) (x_81 list_0) (x_82 list_0))
	(=>	(and (= x_79 x_82)
			(list_1 x_80 a_0)
			(list_1 x_81 b_0)
			(x_16 x_82 x_80 x_81)
			(= x_18 (App_0 a_0 b_0)))
		(list_1 x_79 x_18))))
(assert (forall ((x_18 E_0) (e_0 E_0) (x_83 list_0) (x_84 list_0) (x_85 list_0))
	(=>	(and (= x_83 x_85)
			(list_1 x_84 e_0)
			(init_0 x_85 x_84)
			(= x_18 (DeqR_0 e_0)))
		(list_1 x_83 x_18))))
(assert (forall ((x_18 E_0) (e_1 E_0) (x_86 list_0) (x_87 list_0) (x_88 list_0))
	(=>	(and (= x_86 x_88)
			(list_1 x_87 e_1)
			(tail_1 x_88 x_87)
			(= x_18 (DeqL_0 e_1)))
		(list_1 x_86 x_18))))
(assert (forall ((x_18 E_0) (e_2 E_0) (z_7 Nat_0) (x_89 list_0) (x_90 list_0) (x_91 list_0))
	(=>	(and (= x_89 x_91)
			(list_1 x_90 e_2)
			(x_16 x_91 x_90 (cons_0 z_7 nil_0))
			(= x_18 (EnqR_0 e_2 z_7)))
		(list_1 x_89 x_18))))
(assert (forall ((x_18 E_0) (y_10 Nat_0) (e_3 E_0) (x_92 list_0) (x_93 list_0))
	(=>	(and (= x_92 (cons_0 y_10 x_93))
			(list_1 x_93 e_3)
			(= x_18 (EnqL_0 y_10 e_3)))
		(list_1 x_92 x_18))))
(assert (forall ((x_18 E_0) (x_94 list_0))
	(=>	(and (= x_94 nil_0)
			(= x_18 Empty_0))
		(list_1 x_94 x_18))))
(declare-fun reverse_0 (list_0 list_0) Bool)
(assert (forall ((x_19 list_0) (y_11 Nat_0) (xs_4 list_0) (x_95 list_0) (x_96 list_0) (x_97 list_0))
	(=>	(and (= x_95 x_97)
			(reverse_0 x_96 xs_4)
			(x_16 x_97 x_96 (cons_0 y_11 nil_0))
			(= x_19 (cons_0 y_11 xs_4)))
		(reverse_0 x_95 x_19))))
(assert (forall ((x_19 list_0) (x_98 list_0))
	(=>	(and (= x_98 nil_0)
			(= x_19 nil_0))
		(reverse_0 x_98 x_19))))
(declare-fun enqL_0 (Q_0 Nat_0 Q_0) Bool)
(assert (forall ((x_20 Nat_0) (y_12 Q_0) (xs_5 list_0) (ys_0 list_0) (z_8 Nat_0) (x_21 list_0) (x_99 Q_0))
	(=>	(and (= x_99 (Q_1 (cons_0 x_20 xs_5) (cons_0 z_8 x_21)))
			(= y_12 (Q_1 xs_5 ys_0))
			(= ys_0 (cons_0 z_8 x_21)))
		(enqL_0 x_99 x_20 y_12))))
(assert (forall ((x_20 Nat_0) (y_12 Q_0) (xs_5 list_0) (ys_0 list_0) (as_0 list_0) (bs_0 list_0) (x_101 Q_0) (x_102 list_0) (x_100 pair_2))
	(=>	(and (= x_101 (Q_1 as_0 x_102))
			(reverse_0 x_102 bs_0)
			(= y_12 (Q_1 xs_5 ys_0))
			(= ys_0 nil_0)
			(= x_100 (pair_3 as_0 bs_0))
			(halve_0 x_100 (cons_0 x_20 xs_5)))
		(enqL_0 x_101 x_20 y_12))))
(declare-fun mkQ_0 (Q_0 list_0 list_0) Bool)
(assert (forall ((x_22 list_0) (y_13 list_0) (z_9 Nat_0) (x_23 list_0) (x_24 Nat_0) (x_25 list_0) (x_103 Q_0))
	(=>	(and (= x_103 (Q_1 (cons_0 z_9 x_23) (cons_0 x_24 x_25)))
			(= x_22 (cons_0 z_9 x_23))
			(= y_13 (cons_0 x_24 x_25)))
		(mkQ_0 x_103 x_22 y_13))))
(assert (forall ((x_22 list_0) (y_13 list_0) (z_9 Nat_0) (x_23 list_0) (as_1 list_0) (bs_1 list_0) (x_105 Q_0) (x_106 list_0) (x_104 pair_2))
	(=>	(and (= x_105 (Q_1 as_1 x_106))
			(reverse_0 x_106 bs_1)
			(= x_22 (cons_0 z_9 x_23))
			(= y_13 nil_0)
			(= x_104 (pair_3 as_1 bs_1))
			(halve_0 x_104 (cons_0 z_9 x_23)))
		(mkQ_0 x_105 x_22 y_13))))
(assert (forall ((x_22 list_0) (y_13 list_0) (as_2 list_0) (bs_2 list_0) (x_108 Q_0) (x_109 list_0) (x_107 pair_2))
	(=>	(and (= x_108 (Q_1 x_109 as_2))
			(reverse_0 x_109 bs_2)
			(= x_22 nil_0)
			(= x_107 (pair_3 as_2 bs_2))
			(halve_0 x_107 y_13))
		(mkQ_0 x_108 x_22 y_13))))
(declare-fun x_26 (Q_0 Q_0 Q_0) Bool)
(assert (forall ((x_27 Q_0) (y_14 Q_0) (xs_6 list_0) (ys_1 list_0) (vs_0 list_0) (ws_0 list_0) (x_110 Q_0) (x_111 list_0) (x_112 list_0) (x_113 list_0) (x_114 list_0) (x_115 Q_0))
	(=>	(and (= x_110 x_115)
			(reverse_0 x_111 ys_1)
			(x_16 x_112 xs_6 x_111)
			(reverse_0 x_113 vs_0)
			(x_16 x_114 x_113 ws_0)
			(mkQ_0 x_115 x_112 x_114)
			(= x_27 (Q_1 xs_6 ys_1))
			(= y_14 (Q_1 vs_0 ws_0)))
		(x_26 x_110 x_27 y_14))))
(declare-fun deqL_0 (Maybe_1 Q_0) Bool)
(assert (forall ((x_28 Q_0) (y_15 list_0) (z_10 list_0) (x_29 Nat_0) (xs_7 list_0) (x_116 Maybe_1) (x_117 Q_0))
	(=>	(and (= x_116 (Just_1 x_117))
			(mkQ_0 x_117 xs_7 z_10)
			(= x_28 (Q_1 y_15 z_10))
			(= y_15 (cons_0 x_29 xs_7)))
		(deqL_0 x_116 x_28))))
(assert (forall ((x_28 Q_0) (y_15 list_0) (z_10 list_0) (x_30 Nat_0) (x_31 list_0) (x_32 Nat_0) (x_33 list_0) (x_118 Maybe_1))
	(=>	(and (= x_118 Nothing_1)
			(= x_28 (Q_1 y_15 z_10))
			(= y_15 nil_0)
			(= z_10 (cons_0 x_30 x_31))
			(= x_31 (cons_0 x_32 x_33)))
		(deqL_0 x_118 x_28))))
(assert (forall ((x_28 Q_0) (y_15 list_0) (z_10 list_0) (x_30 Nat_0) (x_31 list_0) (x_119 Maybe_1) (x_120 Q_0))
	(=>	(and (= x_119 (Just_1 x_120))
			(empty_0 x_120)
			(= x_28 (Q_1 y_15 z_10))
			(= y_15 nil_0)
			(= z_10 (cons_0 x_30 x_31))
			(= x_31 nil_0))
		(deqL_0 x_119 x_28))))
(assert (forall ((x_28 Q_0) (y_15 list_0) (z_10 list_0) (x_121 Maybe_1))
	(=>	(and (= x_121 Nothing_1)
			(= x_28 (Q_1 y_15 z_10))
			(= y_15 nil_0)
			(= z_10 nil_0))
		(deqL_0 x_121 x_28))))
(declare-fun deqR_0 (Maybe_1 Q_0) Bool)
(assert (forall ((x_34 Q_0) (y_16 list_0) (z_11 list_0) (fail_0 Maybe_1) (y_17 Nat_0) (ys_2 list_0) (x_35 Nat_0) (x_36 list_0) (x_37 Nat_0) (x_38 list_0) (x_123 Maybe_1) (x_122 Q_0))
	(=>	(and (= x_123 fail_0)
			(= x_34 (Q_1 y_16 z_11))
			(= fail_0 (Just_1 x_122))
			(= z_11 (cons_0 y_17 ys_2))
			(= y_16 (cons_0 x_35 x_36))
			(= x_36 (cons_0 x_37 x_38))
			(mkQ_0 x_122 y_16 ys_2))
		(deqR_0 x_123 x_34))))
(assert (forall ((x_34 Q_0) (y_16 list_0) (z_11 list_0) (fail_0 Maybe_1) (y_17 Nat_0) (ys_2 list_0) (x_35 Nat_0) (x_36 list_0) (x_39 Nat_0) (x_40 list_0) (x_125 Maybe_1) (x_124 Q_0))
	(=>	(and (= x_125 fail_0)
			(= x_34 (Q_1 y_16 z_11))
			(= fail_0 (Just_1 x_124))
			(= z_11 (cons_0 y_17 ys_2))
			(= y_16 (cons_0 x_35 x_36))
			(= x_36 nil_0)
			(= z_11 (cons_0 x_39 x_40))
			(mkQ_0 x_124 y_16 ys_2))
		(deqR_0 x_125 x_34))))
(assert (forall ((x_34 Q_0) (y_16 list_0) (z_11 list_0) (fail_0 Maybe_1) (y_17 Nat_0) (ys_2 list_0) (x_35 Nat_0) (x_36 list_0) (x_127 Maybe_1) (x_128 Q_0) (x_126 Q_0))
	(=>	(and (= x_127 (Just_1 x_128))
			(empty_0 x_128)
			(= x_34 (Q_1 y_16 z_11))
			(= fail_0 (Just_1 x_126))
			(= z_11 (cons_0 y_17 ys_2))
			(= y_16 (cons_0 x_35 x_36))
			(= x_36 nil_0)
			(= z_11 nil_0)
			(mkQ_0 x_126 y_16 ys_2))
		(deqR_0 x_127 x_34))))
(assert (forall ((x_34 Q_0) (y_16 list_0) (z_11 list_0) (fail_0 Maybe_1) (y_17 Nat_0) (ys_2 list_0) (x_130 Maybe_1) (x_129 Q_0))
	(=>	(and (= x_130 fail_0)
			(= x_34 (Q_1 y_16 z_11))
			(= fail_0 (Just_1 x_129))
			(= z_11 (cons_0 y_17 ys_2))
			(= y_16 nil_0)
			(mkQ_0 x_129 y_16 ys_2))
		(deqR_0 x_130 x_34))))
(assert (forall ((x_34 Q_0) (y_16 list_0) (z_11 list_0) (fail_0 Maybe_1) (x_35 Nat_0) (x_36 list_0) (x_37 Nat_0) (x_38 list_0) (x_131 Maybe_1))
	(=>	(and (= x_131 fail_0)
			(= x_34 (Q_1 y_16 z_11))
			(= fail_0 Nothing_1)
			(= z_11 nil_0)
			(= y_16 (cons_0 x_35 x_36))
			(= x_36 (cons_0 x_37 x_38)))
		(deqR_0 x_131 x_34))))
(assert (forall ((x_34 Q_0) (y_16 list_0) (z_11 list_0) (fail_0 Maybe_1) (x_35 Nat_0) (x_36 list_0) (x_39 Nat_0) (x_40 list_0) (x_132 Maybe_1))
	(=>	(and (= x_132 fail_0)
			(= x_34 (Q_1 y_16 z_11))
			(= fail_0 Nothing_1)
			(= z_11 nil_0)
			(= y_16 (cons_0 x_35 x_36))
			(= x_36 nil_0)
			(= z_11 (cons_0 x_39 x_40)))
		(deqR_0 x_132 x_34))))
(assert (forall ((x_34 Q_0) (y_16 list_0) (z_11 list_0) (fail_0 Maybe_1) (x_35 Nat_0) (x_36 list_0) (x_133 Maybe_1) (x_134 Q_0))
	(=>	(and (= x_133 (Just_1 x_134))
			(empty_0 x_134)
			(= x_34 (Q_1 y_16 z_11))
			(= fail_0 Nothing_1)
			(= z_11 nil_0)
			(= y_16 (cons_0 x_35 x_36))
			(= x_36 nil_0)
			(= z_11 nil_0))
		(deqR_0 x_133 x_34))))
(assert (forall ((x_34 Q_0) (y_16 list_0) (z_11 list_0) (fail_0 Maybe_1) (x_135 Maybe_1))
	(=>	(and (= x_135 fail_0)
			(= x_34 (Q_1 y_16 z_11))
			(= fail_0 Nothing_1)
			(= z_11 nil_0)
			(= y_16 nil_0))
		(deqR_0 x_135 x_34))))
(declare-fun enqR_0 (Q_0 Q_0 Nat_0) Bool)
(assert (forall ((x_41 Q_0) (y_18 Nat_0) (xs_8 list_0) (ys_3 list_0) (x_136 Q_0) (x_137 Q_0))
	(=>	(and (= x_136 x_137)
			(mkQ_0 x_137 xs_8 (cons_0 y_18 ys_3))
			(= x_41 (Q_1 xs_8 ys_3)))
		(enqR_0 x_136 x_41 y_18))))
(declare-fun queue_0 (Q_0 E_0) Bool)
(assert (forall ((x_42 E_0) (a_1 E_0) (b_1 E_0) (x_138 Q_0) (x_139 Q_0) (x_140 Q_0) (x_141 Q_0))
	(=>	(and (= x_138 x_141)
			(queue_0 x_139 a_1)
			(queue_0 x_140 b_1)
			(x_26 x_141 x_139 x_140)
			(= x_42 (App_0 a_1 b_1)))
		(queue_0 x_138 x_42))))
(assert (forall ((x_42 E_0) (e_4 E_0) (r_0 Q_0) (x_143 Q_0) (x_144 Maybe_1) (x_145 Q_0) (x_142 Q_0))
	(=>	(and (= x_143 x_145)
			(deqR_0 x_144 r_0)
			(fromMaybe_1 x_145 r_0 x_144)
			(= x_42 (DeqR_0 e_4))
			(= r_0 x_142)
			(queue_0 x_142 e_4))
		(queue_0 x_143 x_42))))
(assert (forall ((x_42 E_0) (e_5 E_0) (q_0 Q_0) (x_147 Q_0) (x_148 Maybe_1) (x_149 Q_0) (x_146 Q_0))
	(=>	(and (= x_147 x_149)
			(deqL_0 x_148 q_0)
			(fromMaybe_1 x_149 q_0 x_148)
			(= x_42 (DeqL_0 e_5))
			(= q_0 x_146)
			(queue_0 x_146 e_5))
		(queue_0 x_147 x_42))))
(assert (forall ((x_42 E_0) (e_6 E_0) (z_12 Nat_0) (x_150 Q_0) (x_151 Q_0) (x_152 Q_0))
	(=>	(and (= x_150 x_152)
			(queue_0 x_151 e_6)
			(enqR_0 x_152 x_151 z_12)
			(= x_42 (EnqR_0 e_6 z_12)))
		(queue_0 x_150 x_42))))
(assert (forall ((x_42 E_0) (y_19 Nat_0) (e_7 E_0) (x_153 Q_0) (x_154 Q_0) (x_155 Q_0))
	(=>	(and (= x_153 x_155)
			(queue_0 x_154 e_7)
			(enqL_0 x_155 y_19 x_154)
			(= x_42 (EnqL_0 y_19 e_7)))
		(queue_0 x_153 x_42))))
(assert (forall ((x_42 E_0) (x_156 Q_0) (x_157 Q_0))
	(=>	(and (= x_156 x_157)
			(empty_0 x_157)
			(= x_42 Empty_0))
		(queue_0 x_156 x_42))))
(assert (forall ((e_8 E_0) (x_43 Nat_0) (y_20 list_0) (x_158 Q_0) (x_159 Maybe_0) (x_160 list_0))
	(=>	(and (diseqMaybe_0 x_159 (Just_0 x_43))
			(= x_160 (cons_0 x_43 y_20))
			(queue_0 x_158 e_8)
			(fstL_0 x_159 x_158)
			(list_1 x_160 e_8))
		false)))
(assert (forall ((e_8 E_0) (x_161 Q_0) (x_162 Maybe_0) (x_163 list_0))
	(=>	(and (diseqMaybe_0 x_162 Nothing_0)
			(= x_163 nil_0)
			(queue_0 x_161 e_8)
			(fstL_0 x_162 x_161)
			(list_1 x_163 e_8))
		false)))
(check-sat)
