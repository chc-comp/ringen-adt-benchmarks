(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_13 ) (Z_14 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Nat_0)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-datatypes ((pair_2 0)) (((pair_3 (projpair_2 list_0) (projpair_3 list_0)))))
(declare-datatypes ((Q_0 0)) (((Q_1 (projQ_0 list_0) (projQ_1 list_0)))))
(declare-datatypes ((Maybe_0 0)) (((Nothing_0 ) (Just_0 (projJust_0 Nat_0)))))
(declare-fun diseqMaybe_0 (Maybe_0 Maybe_0) Bool)
(declare-datatypes ((Maybe_1 0)) (((Nothing_1 ) (Just_1 (projJust_1 Q_0)))))
(declare-datatypes ((E_0 0)) (((Empty_0 ) (EnqL_0 (projEnqL_0 Nat_0) (projEnqL_1 E_0)) (EnqR_0 (projEnqR_0 E_0) (projEnqR_1 Nat_0)) (DeqL_0 (projDeqL_0 E_0)) (DeqR_0 (projDeqR_0 E_0)) (App_0 (projApp_0 E_0) (projApp_1 E_0)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun length_0 (Nat_0 list_0) Bool)
(declare-fun init_0 (list_0 list_0) Bool)
(declare-fun fstL_0 (Maybe_0 Q_0) Bool)
(declare-fun fromMaybe_1 (Q_0 Q_0 Maybe_1) Bool)
(declare-fun empty_1 (Q_0) Bool)
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(declare-fun halve_0 (pair_2 list_0) Bool)
(declare-fun x_16 (list_0 list_0 list_0) Bool)
(declare-fun list_1 (list_0 E_0) Bool)
(declare-fun reverse_0 (list_0 list_0) Bool)
(declare-fun x_20 (Q_0 Q_0 Q_0) Bool)
(declare-fun enqL_1 (Q_0 Nat_0 Q_0) Bool)
(declare-fun mkQ_0 (Q_0 list_0 list_0) Bool)
(declare-fun deqL_1 (Maybe_1 Q_0) Bool)
(declare-fun deqR_1 (Maybe_1 Q_0) Bool)
(declare-fun enqR_1 (Q_0 Q_0 Nat_0) Bool)
(declare-fun queue_0 (Q_0 E_0) Bool)
(assert (forall ((x_172 Nat_0))
	(diseqNat_0 Z_13 (Z_14 x_172))))
(assert (forall ((x_173 Nat_0))
	(diseqNat_0 (Z_14 x_173) Z_13)))
(assert (forall ((x_174 Nat_0) (x_175 Nat_0))
	(=> (diseqNat_0 x_174 x_175) (diseqNat_0 (Z_14 x_174) (Z_14 x_175)))))
(assert (forall ((y_21 Nat_0))
	(add_0 y_21 Z_13 y_21)))
(assert (forall ((r_1 Nat_0) (x_163 Nat_0) (y_21 Nat_0))
	(=> (add_0 r_1 x_163 y_21) (add_0 (Z_14 r_1) (Z_14 x_163) y_21))))
(assert (forall ((y_21 Nat_0))
	(minus_0 Z_13 Z_13 y_21)))
(assert (forall ((r_1 Nat_0) (x_163 Nat_0) (y_21 Nat_0))
	(=> (minus_0 r_1 x_163 y_21) (minus_0 (Z_14 r_1) (Z_14 x_163) y_21))))
(assert (forall ((y_21 Nat_0))
	(le_0 Z_13 y_21)))
(assert (forall ((x_163 Nat_0) (y_21 Nat_0))
	(=> (le_0 x_163 y_21) (le_0 (Z_14 x_163) (Z_14 y_21)))))
(assert (forall ((y_21 Nat_0))
	(ge_0 y_21 Z_13)))
(assert (forall ((x_163 Nat_0) (y_21 Nat_0))
	(=> (ge_0 x_163 y_21) (ge_0 (Z_14 x_163) (Z_14 y_21)))))
(assert (forall ((y_21 Nat_0))
	(lt_0 Z_13 (Z_14 y_21))))
(assert (forall ((x_163 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_163 y_21) (lt_0 (Z_14 x_163) (Z_14 y_21)))))
(assert (forall ((y_21 Nat_0))
	(gt_0 (Z_14 y_21) Z_13)))
(assert (forall ((x_163 Nat_0) (y_21 Nat_0))
	(=> (gt_0 x_163 y_21) (gt_0 (Z_14 x_163) (Z_14 y_21)))))
(assert (forall ((x_163 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_163 y_21) (div_0 Z_13 x_163 y_21))))
(assert (forall ((r_1 Nat_0) (x_163 Nat_0) (y_21 Nat_0) (z_15 Nat_0))
	(=> (and (ge_0 x_163 y_21) (minus_0 z_15 x_163 y_21) (div_0 r_1 z_15 y_21)) (div_0 (Z_14 r_1) x_163 y_21))))
(assert (forall ((x_221 Nat_0))
	(diseqMaybe_0 Nothing_0 (Just_0 x_221))))
(assert (forall ((x_222 Nat_0))
	(diseqMaybe_0 (Just_0 x_222) Nothing_0)))
(assert (forall ((x_223 Nat_0) (x_224 Nat_0))
	(=> (diseqNat_0 x_223 x_224) (diseqMaybe_0 (Just_0 x_223) (Just_0 x_224)))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_13) (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_164 Nat_0) (x_46 list_0) (z_0 Nat_0) (xs_0 list_0) (x_0 Nat_0))
	(=> (and (gt_0 x_0 Z_13) (take_0 x_46 x_164 xs_0) (minus_0 x_164 x_0 (Z_14 Z_13))) (take_0 (cons_0 z_0 x_46) x_0 (cons_0 z_0 xs_0)))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_13) (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_0 Nat_0))
	(=> (gt_0 x_0 Z_13) (take_0 nil_0 x_0 nil_0))))
(assert (forall ((x_49 list_0) (y_1 Nat_0))
	(tail_1 x_49 (cons_0 y_1 x_49))))
(assert (tail_1 nil_0 nil_0))
(assert (forall ((x_165 Nat_0) (x_52 Nat_0) (y_2 Nat_0) (l_0 list_0))
	(=> (and (length_0 x_52 l_0) (add_0 x_165 (Z_14 Z_13) x_52)) (length_0 x_165 (cons_0 y_2 l_0)))))
(assert (length_0 Z_13 nil_0))
(assert (forall ((x_55 list_0) (x_4 Nat_0) (x_5 list_0) (y_3 Nat_0))
	(=> (init_0 x_55 (cons_0 x_4 x_5)) (init_0 (cons_0 y_3 x_55) (cons_0 y_3 (cons_0 x_4 x_5))))))
(assert (forall ((y_3 Nat_0))
	(init_0 nil_0 (cons_0 y_3 nil_0))))
(assert (init_0 nil_0 nil_0))
(assert (forall ((x_10 Nat_0) (x_11 list_0) (z_2 list_0))
	(fstL_0 (Just_0 x_10) (Q_1 (cons_0 x_10 x_11) z_2))))
(assert (forall ((x_8 Nat_0) (x_9 list_0) (y_5 Nat_0))
	(fstL_0 Nothing_0 (Q_1 nil_0 (cons_0 y_5 (cons_0 x_8 x_9))))))
(assert (forall ((y_5 Nat_0))
	(fstL_0 (Just_0 y_5) (Q_1 nil_0 (cons_0 y_5 nil_0)))))
(assert (fstL_0 Nothing_0 (Q_1 nil_0 nil_0)))
(assert (forall ((x_64 Q_0) (x_13 Q_0))
	(fromMaybe_1 x_64 x_13 (Just_1 x_64))))
(assert (forall ((x_13 Q_0))
	(fromMaybe_1 x_13 x_13 Nothing_1)))
(assert (empty_1 (Q_1 nil_0 nil_0)))
(assert (forall ((x_67 list_0) (x_14 Nat_0))
	(=> (le_0 x_14 Z_13) (drop_0 x_67 x_14 x_67))))
(assert (forall ((x_166 Nat_0) (x_68 list_0) (z_5 Nat_0) (xs_2 list_0) (x_14 Nat_0))
	(=> (and (gt_0 x_14 Z_13) (drop_0 x_68 x_166 xs_2) (minus_0 x_166 x_14 (Z_14 Z_13))) (drop_0 x_68 x_14 (cons_0 z_5 xs_2)))))
(assert (forall ((x_70 list_0) (x_14 Nat_0))
	(=> (le_0 x_14 Z_13) (drop_0 x_70 x_14 x_70))))
(assert (forall ((x_14 Nat_0))
	(=> (gt_0 x_14 Z_13) (drop_0 nil_0 x_14 nil_0))))
(assert (forall ((x_74 list_0) (x_75 list_0) (x_72 Nat_0) (k_0 Nat_0) (x_15 list_0))
	(=> (and (take_0 x_74 k_0 x_15) (drop_0 x_75 k_0 x_15) (length_0 x_72 x_15) (div_0 k_0 x_72 (Z_14 (Z_14 Z_13)))) (halve_0 (pair_3 x_74 x_75) x_15))))
(assert (forall ((x_77 list_0) (z_6 Nat_0) (xs_3 list_0) (y_9 list_0))
	(=> (x_16 x_77 xs_3 y_9) (x_16 (cons_0 z_6 x_77) (cons_0 z_6 xs_3) y_9))))
(assert (forall ((x_78 list_0))
	(x_16 x_78 nil_0 x_78)))
(assert (forall ((x_79 list_0) (x_80 list_0) (x_81 list_0) (a_0 E_0) (b_0 E_0))
	(=> (and (list_1 x_80 a_0) (list_1 x_81 b_0) (x_16 x_79 x_80 x_81)) (list_1 x_79 (App_0 a_0 b_0)))))
(assert (forall ((x_83 list_0) (x_84 list_0) (e_4 E_0))
	(=> (and (list_1 x_84 e_4) (init_0 x_83 x_84)) (list_1 x_83 (DeqR_0 e_4)))))
(assert (forall ((x_86 list_0) (x_87 list_0) (e_3 E_0))
	(=> (and (list_1 x_87 e_3) (tail_1 x_86 x_87)) (list_1 x_86 (DeqL_0 e_3)))))
(assert (forall ((x_89 list_0) (x_90 list_0) (e_2 E_0) (z_7 Nat_0))
	(=> (and (list_1 x_90 e_2) (x_16 x_89 x_90 (cons_0 z_7 nil_0))) (list_1 x_89 (EnqR_0 e_2 z_7)))))
(assert (forall ((x_93 list_0) (y_10 Nat_0) (e_1 E_0))
	(=> (list_1 x_93 e_1) (list_1 (cons_0 y_10 x_93) (EnqL_0 y_10 e_1)))))
(assert (list_1 nil_0 Empty_0))
(assert (forall ((x_95 list_0) (x_96 list_0) (y_11 Nat_0) (xs_4 list_0))
	(=> (and (reverse_0 x_96 xs_4) (x_16 x_95 x_96 (cons_0 y_11 nil_0))) (reverse_0 x_95 (cons_0 y_11 xs_4)))))
(assert (reverse_0 nil_0 nil_0))
(assert (forall ((x_100 list_0) (x_101 list_0) (x_102 list_0) (x_103 list_0) (vs_0 list_0) (ws_0 list_0) (xs_5 list_0) (ys_0 list_0))
	(=> (and (reverse_0 x_100 ys_0) (x_16 x_101 xs_5 x_100) (reverse_0 x_102 vs_0) (x_16 x_103 ws_0 x_102)) (x_20 (Q_1 x_101 x_103) (Q_1 xs_5 ys_0) (Q_1 vs_0 ws_0)))))
(assert (forall ((z_8 Nat_0) (x_23 list_0) (xs_6 list_0) (x_22 Nat_0))
	(enqL_1 (Q_1 (cons_0 x_22 xs_6) (cons_0 z_8 x_23)) x_22 (Q_1 xs_6 (cons_0 z_8 x_23)))))
(assert (forall ((x_107 list_0) (as_0 list_0) (bs_0 list_0) (xs_6 list_0) (x_22 Nat_0))
	(=> (and (reverse_0 x_107 bs_0) (halve_0 (pair_3 as_0 bs_0) (cons_0 x_22 xs_6))) (enqL_1 (Q_1 as_0 x_107) x_22 (Q_1 xs_6 nil_0)))))
(assert (forall ((x_26 Nat_0) (x_27 list_0) (z_9 Nat_0) (x_25 list_0))
	(mkQ_0 (Q_1 (cons_0 z_9 x_25) (cons_0 x_26 x_27)) (cons_0 z_9 x_25) (cons_0 x_26 x_27))))
(assert (forall ((x_111 list_0) (as_2 list_0) (bs_2 list_0) (z_9 Nat_0) (x_25 list_0))
	(=> (and (reverse_0 x_111 bs_2) (halve_0 (pair_3 as_2 bs_2) (cons_0 z_9 x_25))) (mkQ_0 (Q_1 as_2 x_111) (cons_0 z_9 x_25) nil_0))))
(assert (forall ((x_114 list_0) (as_1 list_0) (bs_1 list_0) (y_14 list_0))
	(=> (and (reverse_0 x_114 bs_1) (halve_0 (pair_3 as_1 bs_1) y_14)) (mkQ_0 (Q_1 x_114 as_1) nil_0 y_14))))
(assert (forall ((x_116 Q_0) (x_33 Nat_0) (xs_7 list_0) (z_10 list_0))
	(=> (mkQ_0 x_116 xs_7 z_10) (deqL_1 (Just_1 x_116) (Q_1 (cons_0 x_33 xs_7) z_10)))))
(assert (forall ((x_31 Nat_0) (x_32 list_0) (x_29 Nat_0))
	(deqL_1 Nothing_1 (Q_1 nil_0 (cons_0 x_29 (cons_0 x_31 x_32))))))
(assert (forall ((x_119 Q_0) (x_29 Nat_0))
	(=> (empty_1 x_119) (deqL_1 (Just_1 x_119) (Q_1 nil_0 (cons_0 x_29 nil_0))))))
(assert (deqL_1 Nothing_1 (Q_1 nil_0 nil_0)))
(assert (forall ((x_121 Q_0) (x_39 Nat_0) (x_40 list_0) (x_35 Nat_0) (y_17 Nat_0) (ys_2 list_0))
	(=> (mkQ_0 x_121 (cons_0 x_35 (cons_0 x_39 x_40)) ys_2) (deqR_1 (Just_1 x_121) (Q_1 (cons_0 x_35 (cons_0 x_39 x_40)) (cons_0 y_17 ys_2))))))
(assert (forall ((x_123 Q_0) (x_37 Nat_0) (x_38 list_0) (x_35 Nat_0))
	(=> (mkQ_0 x_123 (cons_0 x_35 nil_0) x_38) (deqR_1 (Just_1 x_123) (Q_1 (cons_0 x_35 nil_0) (cons_0 x_37 x_38))))))
(assert (forall ((x_128 Q_0) (y_17 Nat_0) (ys_2 list_0))
	(=> (mkQ_0 x_128 nil_0 ys_2) (deqR_1 (Just_1 x_128) (Q_1 nil_0 (cons_0 y_17 ys_2))))))
(assert (forall ((x_39 Nat_0) (x_40 list_0) (x_35 Nat_0))
	(deqR_1 Nothing_1 (Q_1 (cons_0 x_35 (cons_0 x_39 x_40)) nil_0))))
(assert (forall ((x_133 Q_0) (x_35 Nat_0))
	(=> (empty_1 x_133) (deqR_1 (Just_1 x_133) (Q_1 (cons_0 x_35 nil_0) nil_0)))))
(assert (deqR_1 Nothing_1 (Q_1 nil_0 nil_0)))
(assert (forall ((x_135 Q_0) (xs_8 list_0) (ys_3 list_0) (y_18 Nat_0))
	(=> (mkQ_0 x_135 xs_8 (cons_0 y_18 ys_3)) (enqR_1 x_135 (Q_1 xs_8 ys_3) y_18))))
(assert (forall ((x_137 Q_0) (x_138 Q_0) (x_139 Q_0) (a_1 E_0) (b_1 E_0))
	(=> (and (queue_0 x_138 a_1) (queue_0 x_139 b_1) (x_20 x_137 x_138 x_139)) (queue_0 x_137 (App_0 a_1 b_1)))))
(assert (forall ((x_142 Q_0) (x_143 Maybe_1) (r_0 Q_0) (e_8 E_0))
	(=> (and (deqR_1 x_143 r_0) (fromMaybe_1 x_142 r_0 x_143) (queue_0 r_0 e_8)) (queue_0 x_142 (DeqR_0 e_8)))))
(assert (forall ((x_146 Q_0) (x_147 Maybe_1) (q_2 Q_0) (e_7 E_0))
	(=> (and (deqL_1 x_147 q_2) (fromMaybe_1 x_146 q_2 x_147) (queue_0 q_2 e_7)) (queue_0 x_146 (DeqL_0 e_7)))))
(assert (forall ((x_149 Q_0) (x_150 Q_0) (e_6 E_0) (z_12 Nat_0))
	(=> (and (queue_0 x_150 e_6) (enqR_1 x_149 x_150 z_12)) (queue_0 x_149 (EnqR_0 e_6 z_12)))))
(assert (forall ((x_152 Q_0) (x_153 Q_0) (y_19 Nat_0) (e_5 E_0))
	(=> (and (queue_0 x_153 e_5) (enqL_1 x_152 y_19 x_153)) (queue_0 x_152 (EnqL_0 y_19 e_5)))))
(assert (forall ((x_155 Q_0))
	(=> (empty_1 x_155) (queue_0 x_155 Empty_0))))
(assert (forall ((x_157 Q_0) (x_158 Maybe_0) (x_43 Nat_0) (y_20 list_0) (e_9 E_0))
	(=> (and (diseqMaybe_0 x_158 (Just_0 x_43)) (list_1 (cons_0 x_43 y_20) e_9) (queue_0 x_157 e_9) (fstL_0 x_158 x_157)) false)))
(assert (forall ((x_160 Q_0) (x_161 Maybe_0) (e_9 E_0))
	(=> (and (diseqMaybe_0 x_161 Nothing_0) (list_1 nil_0 e_9) (queue_0 x_160 e_9) (fstL_0 x_161 x_160)) false)))
(check-sat)
(get-model)
