(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_174 Nat_0) (x_173 Nat_0))
	(=> (= x_174 (S_0 x_173))
	    (unS_1 x_173 x_174))))
(assert (isZ_0 Z_0))
(assert (forall ((x_175 Nat_0))
	(isS_0 (S_0 x_175))))
(assert (forall ((x_176 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_176))))
(assert (forall ((x_177 Nat_0))
	(diseqNat_0 (S_0 x_177) Z_0)))
(assert (forall ((x_178 Nat_0) (x_179 Nat_0))
	(=> (diseqNat_0 x_178 x_179)
	    (diseqNat_0 (S_0 x_178) (S_0 x_179)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_21 Nat_0))
	(add_0 y_21 Z_0 y_21)))
(assert (forall ((x_153 Nat_0) (y_21 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_153 y_21)
	    (add_0 (S_0 r_0) (S_0 x_153) y_21))))
(assert (forall ((y_21 Nat_0))
	(minus_0 Z_0 Z_0 y_21)))
(assert (forall ((x_153 Nat_0) (y_21 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_153 y_21)
	    (minus_0 (S_0 r_0) (S_0 x_153) y_21))))
(assert (forall ((y_21 Nat_0))
	(le_0 Z_0 y_21)))
(assert (forall ((x_153 Nat_0) (y_21 Nat_0))
	(=> (le_0 x_153 y_21)
	    (le_0 (S_0 x_153) (S_0 y_21)))))
(assert (forall ((y_21 Nat_0))
	(ge_0 y_21 Z_0)))
(assert (forall ((x_153 Nat_0) (y_21 Nat_0))
	(=> (ge_0 x_153 y_21)
	    (ge_0 (S_0 x_153) (S_0 y_21)))))
(assert (forall ((y_21 Nat_0))
	(lt_0 Z_0 (S_0 y_21))))
(assert (forall ((x_153 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_153 y_21)
	    (lt_0 (S_0 x_153) (S_0 y_21)))))
(assert (forall ((y_21 Nat_0))
	(gt_0 (S_0 y_21) Z_0)))
(assert (forall ((x_153 Nat_0) (y_21 Nat_0))
	(=> (gt_0 x_153 y_21)
	    (gt_0 (S_0 x_153) (S_0 y_21)))))
(assert (forall ((y_21 Nat_0))
	(mult_0 Z_0 Z_0 y_21)))
(assert (forall ((x_153 Nat_0) (y_21 Nat_0) (r_0 Nat_0) (z_13 Nat_0))
	(=>	(and (mult_0 r_0 x_153 y_21)
			(add_0 z_13 r_0 y_21))
		(mult_0 z_13 (S_0 x_153) y_21))))
(assert (forall ((x_153 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_153 y_21)
	    (div_0 Z_0 x_153 y_21))))
(assert (forall ((x_153 Nat_0) (y_21 Nat_0) (r_0 Nat_0) (z_13 Nat_0))
	(=>	(and (ge_0 x_153 y_21)
			(minus_0 z_13 x_153 y_21)
			(div_0 r_0 z_13 y_21))
		(div_0 (S_0 r_0) x_153 y_21))))
(assert (forall ((x_153 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_153 y_21)
	    (mod_0 x_153 x_153 y_21))))
(assert (forall ((x_153 Nat_0) (y_21 Nat_0) (r_0 Nat_0) (z_13 Nat_0))
	(=>	(and (ge_0 x_153 y_21)
			(minus_0 z_13 x_153 y_21)
			(mod_0 r_0 z_13 y_21))
		(mod_0 r_0 x_153 y_21))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Nat_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_4 (Nat_0 pair_0) Bool)
(declare-fun projpair_5 (Nat_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_182 pair_0) (x_180 Nat_0) (x_181 Nat_0))
	(=> (= x_182 (pair_1 x_180 x_181))
	    (projpair_4 x_180 x_182))))
(assert (forall ((x_182 pair_0) (x_180 Nat_0) (x_181 Nat_0))
	(=> (= x_182 (pair_1 x_180 x_181))
	    (projpair_5 x_181 x_182))))
(assert (forall ((x_183 Nat_0) (x_184 Nat_0))
	(ispair_0 (pair_1 x_183 x_184))))
(assert (forall ((x_185 Nat_0) (x_186 Nat_0) (x_187 Nat_0) (x_188 Nat_0))
	(=> (diseqNat_0 x_185 x_187)
	    (diseqpair_0 (pair_1 x_185 x_186) (pair_1 x_187 x_188)))))
(assert (forall ((x_185 Nat_0) (x_186 Nat_0) (x_187 Nat_0) (x_188 Nat_0))
	(=> (diseqNat_0 x_186 x_188)
	    (diseqpair_0 (pair_1 x_185 x_186) (pair_1 x_187 x_188)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Bool) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_7 (Bool list_0) Bool)
(declare-fun tail_7 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_192 list_0) (x_190 Bool) (x_191 list_0))
	(=> (= x_192 (cons_0 x_190 x_191))
	    (head_7 x_190 x_192))))
(assert (forall ((x_192 list_0) (x_190 Bool) (x_191 list_0))
	(=> (= x_192 (cons_0 x_190 x_191))
	    (tail_7 x_191 x_192))))
(assert (isnil_0 nil_0))
(assert (forall ((x_193 Bool) (x_194 list_0))
	(iscons_0 (cons_0 x_193 x_194))))
(assert (forall ((x_195 Bool) (x_196 list_0))
	(diseqlist_0 nil_0 (cons_0 x_195 x_196))))
(assert (forall ((x_197 Bool) (x_198 list_0))
	(diseqlist_0 (cons_0 x_197 x_198) nil_0)))
(assert (forall ((x_199 Bool) (x_200 list_0) (x_201 Bool) (x_202 list_0))
	(=> (not (= x_199 x_201))
	    (diseqlist_0 (cons_0 x_199 x_200) (cons_0 x_201 x_202)))))
(assert (forall ((x_199 Bool) (x_200 list_0) (x_201 Bool) (x_202 list_0))
	(=> (diseqlist_0 x_200 x_202)
	    (diseqlist_0 (cons_0 x_199 x_200) (cons_0 x_201 x_202)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 Nat_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_8 (Nat_0 list_1) Bool)
(declare-fun tail_8 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_206 list_1) (x_204 Nat_0) (x_205 list_1))
	(=> (= x_206 (cons_1 x_204 x_205))
	    (head_8 x_204 x_206))))
(assert (forall ((x_206 list_1) (x_204 Nat_0) (x_205 list_1))
	(=> (= x_206 (cons_1 x_204 x_205))
	    (tail_8 x_205 x_206))))
(assert (isnil_1 nil_1))
(assert (forall ((x_207 Nat_0) (x_208 list_1))
	(iscons_1 (cons_1 x_207 x_208))))
(assert (forall ((x_209 Nat_0) (x_210 list_1))
	(diseqlist_1 nil_1 (cons_1 x_209 x_210))))
(assert (forall ((x_211 Nat_0) (x_212 list_1))
	(diseqlist_1 (cons_1 x_211 x_212) nil_1)))
(assert (forall ((x_213 Nat_0) (x_214 list_1) (x_215 Nat_0) (x_216 list_1))
	(=> (diseqNat_0 x_213 x_215)
	    (diseqlist_1 (cons_1 x_213 x_214) (cons_1 x_215 x_216)))))
(assert (forall ((x_213 Nat_0) (x_214 list_1) (x_215 Nat_0) (x_216 list_1))
	(=> (diseqlist_1 x_214 x_216)
	    (diseqlist_1 (cons_1 x_213 x_214) (cons_1 x_215 x_216)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 pair_0) (tail_2 list_2)))))
(declare-fun diseqlist_2 (list_2 list_2) Bool)
(declare-fun head_9 (pair_0 list_2) Bool)
(declare-fun tail_9 (list_2 list_2) Bool)
(declare-fun isnil_2 (list_2) Bool)
(declare-fun iscons_2 (list_2) Bool)
(assert (forall ((x_220 list_2) (x_218 pair_0) (x_219 list_2))
	(=> (= x_220 (cons_2 x_218 x_219))
	    (head_9 x_218 x_220))))
(assert (forall ((x_220 list_2) (x_218 pair_0) (x_219 list_2))
	(=> (= x_220 (cons_2 x_218 x_219))
	    (tail_9 x_219 x_220))))
(assert (isnil_2 nil_2))
(assert (forall ((x_221 pair_0) (x_222 list_2))
	(iscons_2 (cons_2 x_221 x_222))))
(assert (forall ((x_223 pair_0) (x_224 list_2))
	(diseqlist_2 nil_2 (cons_2 x_223 x_224))))
(assert (forall ((x_225 pair_0) (x_226 list_2))
	(diseqlist_2 (cons_2 x_225 x_226) nil_2)))
(assert (forall ((x_227 pair_0) (x_228 list_2) (x_229 pair_0) (x_230 list_2))
	(=> (diseqpair_0 x_227 x_229)
	    (diseqlist_2 (cons_2 x_227 x_228) (cons_2 x_229 x_230)))))
(assert (forall ((x_227 pair_0) (x_228 list_2) (x_229 pair_0) (x_230 list_2))
	(=> (diseqlist_2 x_228 x_230)
	    (diseqlist_2 (cons_2 x_227 x_228) (cons_2 x_229 x_230)))))
(declare-datatypes ((list_3 0)) (((nil_3 ) (cons_3 (head_3 list_2) (tail_3 list_3)))))
(declare-fun diseqlist_3 (list_3 list_3) Bool)
(declare-fun head_10 (list_2 list_3) Bool)
(declare-fun tail_10 (list_3 list_3) Bool)
(declare-fun isnil_3 (list_3) Bool)
(declare-fun iscons_3 (list_3) Bool)
(assert (forall ((x_234 list_3) (x_232 list_2) (x_233 list_3))
	(=> (= x_234 (cons_3 x_232 x_233))
	    (head_10 x_232 x_234))))
(assert (forall ((x_234 list_3) (x_232 list_2) (x_233 list_3))
	(=> (= x_234 (cons_3 x_232 x_233))
	    (tail_10 x_233 x_234))))
(assert (isnil_3 nil_3))
(assert (forall ((x_235 list_2) (x_236 list_3))
	(iscons_3 (cons_3 x_235 x_236))))
(assert (forall ((x_237 list_2) (x_238 list_3))
	(diseqlist_3 nil_3 (cons_3 x_237 x_238))))
(assert (forall ((x_239 list_2) (x_240 list_3))
	(diseqlist_3 (cons_3 x_239 x_240) nil_3)))
(assert (forall ((x_241 list_2) (x_242 list_3) (x_243 list_2) (x_244 list_3))
	(=> (diseqlist_2 x_241 x_243)
	    (diseqlist_3 (cons_3 x_241 x_242) (cons_3 x_243 x_244)))))
(assert (forall ((x_241 list_2) (x_242 list_3) (x_243 list_2) (x_244 list_3))
	(=> (diseqlist_3 x_242 x_244)
	    (diseqlist_3 (cons_3 x_241 x_242) (cons_3 x_243 x_244)))))
(declare-datatypes ((B_0 0)) (((I_0 ) (O_0 ))))
(declare-fun diseqB_0 (B_0 B_0) Bool)
(declare-fun isI_0 (B_0) Bool)
(declare-fun isO_0 (B_0) Bool)
(assert (isI_0 I_0))
(assert (isO_0 O_0))
(assert (diseqB_0 I_0 O_0))
(assert (diseqB_0 O_0 I_0))
(declare-datatypes ((list_4 0)) (((nil_4 ) (cons_4 (head_4 B_0) (tail_4 list_4)))))
(declare-fun diseqlist_4 (list_4 list_4) Bool)
(declare-fun head_11 (B_0 list_4) Bool)
(declare-fun tail_11 (list_4 list_4) Bool)
(declare-fun isnil_4 (list_4) Bool)
(declare-fun iscons_4 (list_4) Bool)
(assert (forall ((x_250 list_4) (x_248 B_0) (x_249 list_4))
	(=> (= x_250 (cons_4 x_248 x_249))
	    (head_11 x_248 x_250))))
(assert (forall ((x_250 list_4) (x_248 B_0) (x_249 list_4))
	(=> (= x_250 (cons_4 x_248 x_249))
	    (tail_11 x_249 x_250))))
(assert (isnil_4 nil_4))
(assert (forall ((x_251 B_0) (x_252 list_4))
	(iscons_4 (cons_4 x_251 x_252))))
(assert (forall ((x_253 B_0) (x_254 list_4))
	(diseqlist_4 nil_4 (cons_4 x_253 x_254))))
(assert (forall ((x_255 B_0) (x_256 list_4))
	(diseqlist_4 (cons_4 x_255 x_256) nil_4)))
(assert (forall ((x_257 B_0) (x_258 list_4) (x_259 B_0) (x_260 list_4))
	(=> (diseqB_0 x_257 x_259)
	    (diseqlist_4 (cons_4 x_257 x_258) (cons_4 x_259 x_260)))))
(assert (forall ((x_257 B_0) (x_258 list_4) (x_259 B_0) (x_260 list_4))
	(=> (diseqlist_4 x_258 x_260)
	    (diseqlist_4 (cons_4 x_257 x_258) (cons_4 x_259 x_260)))))
(declare-datatypes ((list_5 0)) (((nil_5 ) (cons_5 (head_5 list_4) (tail_5 list_5)))))
(declare-fun diseqlist_5 (list_5 list_5) Bool)
(declare-fun head_12 (list_4 list_5) Bool)
(declare-fun tail_12 (list_5 list_5) Bool)
(declare-fun isnil_5 (list_5) Bool)
(declare-fun iscons_5 (list_5) Bool)
(assert (forall ((x_264 list_5) (x_262 list_4) (x_263 list_5))
	(=> (= x_264 (cons_5 x_262 x_263))
	    (head_12 x_262 x_264))))
(assert (forall ((x_264 list_5) (x_262 list_4) (x_263 list_5))
	(=> (= x_264 (cons_5 x_262 x_263))
	    (tail_12 x_263 x_264))))
(assert (isnil_5 nil_5))
(assert (forall ((x_265 list_4) (x_266 list_5))
	(iscons_5 (cons_5 x_265 x_266))))
(assert (forall ((x_267 list_4) (x_268 list_5))
	(diseqlist_5 nil_5 (cons_5 x_267 x_268))))
(assert (forall ((x_269 list_4) (x_270 list_5))
	(diseqlist_5 (cons_5 x_269 x_270) nil_5)))
(assert (forall ((x_271 list_4) (x_272 list_5) (x_273 list_4) (x_274 list_5))
	(=> (diseqlist_4 x_271 x_273)
	    (diseqlist_5 (cons_5 x_271 x_272) (cons_5 x_273 x_274)))))
(assert (forall ((x_271 list_4) (x_272 list_5) (x_273 list_4) (x_274 list_5))
	(=> (diseqlist_5 x_272 x_274)
	    (diseqlist_5 (cons_5 x_271 x_272) (cons_5 x_273 x_274)))))
(declare-datatypes ((pair_2 0)) (((pair_3 (projpair_2 list_4) (projpair_3 list_4)))))
(declare-fun diseqpair_1 (pair_2 pair_2) Bool)
(declare-fun projpair_6 (list_4 pair_2) Bool)
(declare-fun projpair_7 (list_4 pair_2) Bool)
(declare-fun ispair_1 (pair_2) Bool)
(assert (forall ((x_277 pair_2) (x_275 list_4) (x_276 list_4))
	(=> (= x_277 (pair_3 x_275 x_276))
	    (projpair_6 x_275 x_277))))
(assert (forall ((x_277 pair_2) (x_275 list_4) (x_276 list_4))
	(=> (= x_277 (pair_3 x_275 x_276))
	    (projpair_7 x_276 x_277))))
(assert (forall ((x_278 list_4) (x_279 list_4))
	(ispair_1 (pair_3 x_278 x_279))))
(assert (forall ((x_280 list_4) (x_281 list_4) (x_282 list_4) (x_283 list_4))
	(=> (diseqlist_4 x_280 x_282)
	    (diseqpair_1 (pair_3 x_280 x_281) (pair_3 x_282 x_283)))))
(assert (forall ((x_280 list_4) (x_281 list_4) (x_282 list_4) (x_283 list_4))
	(=> (diseqlist_4 x_281 x_283)
	    (diseqpair_1 (pair_3 x_280 x_281) (pair_3 x_282 x_283)))))
(declare-datatypes ((list_6 0)) (((nil_6 ) (cons_6 (head_6 pair_2) (tail_6 list_6)))))
(declare-fun diseqlist_6 (list_6 list_6) Bool)
(declare-fun head_13 (pair_2 list_6) Bool)
(declare-fun tail_13 (list_6 list_6) Bool)
(declare-fun isnil_6 (list_6) Bool)
(declare-fun iscons_6 (list_6) Bool)
(assert (forall ((x_287 list_6) (x_285 pair_2) (x_286 list_6))
	(=> (= x_287 (cons_6 x_285 x_286))
	    (head_13 x_285 x_287))))
(assert (forall ((x_287 list_6) (x_285 pair_2) (x_286 list_6))
	(=> (= x_287 (cons_6 x_285 x_286))
	    (tail_13 x_286 x_287))))
(assert (isnil_6 nil_6))
(assert (forall ((x_288 pair_2) (x_289 list_6))
	(iscons_6 (cons_6 x_288 x_289))))
(assert (forall ((x_290 pair_2) (x_291 list_6))
	(diseqlist_6 nil_6 (cons_6 x_290 x_291))))
(assert (forall ((x_292 pair_2) (x_293 list_6))
	(diseqlist_6 (cons_6 x_292 x_293) nil_6)))
(assert (forall ((x_294 pair_2) (x_295 list_6) (x_296 pair_2) (x_297 list_6))
	(=> (diseqpair_1 x_294 x_296)
	    (diseqlist_6 (cons_6 x_294 x_295) (cons_6 x_296 x_297)))))
(assert (forall ((x_294 pair_2) (x_295 list_6) (x_296 pair_2) (x_297 list_6))
	(=> (diseqlist_6 x_295 x_297)
	    (diseqlist_6 (cons_6 x_294 x_295) (cons_6 x_296 x_297)))))
(declare-fun primEnumFromTo_0 (list_1 Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_35 list_1))
	(=>	(and (= x_35 nil_1)
			(gt_0 x_0 y_0))
		(primEnumFromTo_0 x_35 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_36 list_1) (x_37 list_1) (x_154 Nat_0))
	(=>	(and (= x_36 (cons_1 x_0 x_37))
			(primEnumFromTo_0 x_37 x_154 y_0)
			(le_0 x_0 y_0)
			(add_0 x_154 (S_0 Z_0) x_0))
		(primEnumFromTo_0 x_36 x_0 y_0))))
(declare-fun petersen_0 (list_2 Nat_0 list_1) Bool)
(assert (forall ((x_1 Nat_0) (y_1 list_1) (z_0 Nat_0) (x_2 list_1) (x_38 list_2) (x_39 list_2) (x_155 Nat_0))
	(=>	(and (= x_38 (cons_2 (pair_1 z_0 x_155) x_39))
			(petersen_0 x_39 x_1 x_2)
			(= y_1 (cons_1 z_0 x_2))
			(add_0 x_155 x_1 z_0))
		(petersen_0 x_38 x_1 y_1))))
(assert (forall ((x_1 Nat_0) (y_1 list_1) (x_40 list_2))
	(=>	(and (= x_40 nil_2)
			(= y_1 nil_1))
		(petersen_0 x_40 x_1 y_1))))
(declare-fun petersen_1 (list_2 list_1) Bool)
(assert (forall ((x_3 list_1) (y_2 Nat_0) (z_1 list_1) (x_41 list_2) (x_42 list_2) (x_156 Nat_0))
	(=>	(and (= x_41 (cons_2 (pair_1 y_2 x_156) x_42))
			(petersen_1 x_42 z_1)
			(= x_3 (cons_1 y_2 z_1))
			(add_0 x_156 (S_0 Z_0) y_2))
		(petersen_1 x_41 x_3))))
(assert (forall ((x_3 list_1) (x_43 list_2))
	(=>	(and (= x_43 nil_2)
			(= x_3 nil_1))
		(petersen_1 x_43 x_3))))
(declare-fun petersen_2 (list_3 Nat_0 list_2) Bool)
(assert (forall ((x_4 Nat_0) (y_3 list_2) (z_2 pair_0) (x_5 list_2) (u_0 Nat_0) (v_0 Nat_0) (x_44 list_3) (x_45 list_3) (x_157 Nat_0) (x_158 Nat_0))
	(=>	(and (= x_44 (cons_3 (cons_2 (pair_1 u_0 v_0) (cons_2 (pair_1 x_157 x_158) nil_2)) x_45))
			(petersen_2 x_45 x_4 x_5)
			(= y_3 (cons_2 z_2 x_5))
			(= z_2 (pair_1 u_0 v_0))
			(add_0 x_157 x_4 u_0)
			(add_0 x_158 x_4 v_0))
		(petersen_2 x_44 x_4 y_3))))
(assert (forall ((x_4 Nat_0) (y_3 list_2) (x_46 list_3))
	(=>	(and (= x_46 nil_3)
			(= y_3 nil_2))
		(petersen_2 x_46 x_4 y_3))))
(declare-fun or_0 (Bool list_0) Bool)
(assert (forall ((x_6 list_0) (y_4 Bool) (xs_0 list_0) (x_47 Bool) (x_48 Bool))
	(=>	(and (= x_47 (or y_4 x_48))
			(or_0 x_48 xs_0)
			(= x_6 (cons_0 y_4 xs_0)))
		(or_0 x_47 x_6))))
(assert (forall ((x_6 list_0) (x_49 Bool))
	(=>	(and (= x_49 false)
			(= x_6 nil_0))
		(or_0 x_49 x_6))))
(declare-fun maximummaximum_0 (Nat_0 Nat_0 list_2) Bool)
(assert (forall ((x_7 Nat_0) (y_5 list_2) (z_3 pair_0) (yzs_0 list_2) (y_6 Nat_0) (z_4 Nat_0) (y_7 Nat_0) (x_50 Nat_0) (x_51 Nat_0))
	(=>	(and (= x_50 x_51)
			(maximummaximum_0 x_51 y_7 yzs_0)
			(= y_5 (cons_2 z_3 yzs_0))
			(= z_3 (pair_1 y_6 z_4))
			(= y_7 z_4)
			(le_0 y_6 z_4)
			(le_0 x_7 y_7))
		(maximummaximum_0 x_50 x_7 y_5))))
(assert (forall ((x_7 Nat_0) (y_5 list_2) (z_3 pair_0) (yzs_0 list_2) (y_6 Nat_0) (z_4 Nat_0) (y_7 Nat_0) (x_52 Nat_0) (x_53 Nat_0))
	(=>	(and (= x_52 x_53)
			(maximummaximum_0 x_53 x_7 yzs_0)
			(= y_5 (cons_2 z_3 yzs_0))
			(= z_3 (pair_1 y_6 z_4))
			(= y_7 z_4)
			(le_0 y_6 z_4)
			(gt_0 x_7 y_7))
		(maximummaximum_0 x_52 x_7 y_5))))
(assert (forall ((x_7 Nat_0) (y_5 list_2) (z_3 pair_0) (yzs_0 list_2) (y_6 Nat_0) (z_4 Nat_0) (y_7 Nat_0) (x_54 Nat_0) (x_55 Nat_0))
	(=>	(and (= x_54 x_55)
			(maximummaximum_0 x_55 y_7 yzs_0)
			(= y_5 (cons_2 z_3 yzs_0))
			(= z_3 (pair_1 y_6 z_4))
			(= y_7 y_6)
			(gt_0 y_6 z_4)
			(le_0 x_7 y_7))
		(maximummaximum_0 x_54 x_7 y_5))))
(assert (forall ((x_7 Nat_0) (y_5 list_2) (z_3 pair_0) (yzs_0 list_2) (y_6 Nat_0) (z_4 Nat_0) (y_7 Nat_0) (x_56 Nat_0) (x_57 Nat_0))
	(=>	(and (= x_56 x_57)
			(maximummaximum_0 x_57 x_7 yzs_0)
			(= y_5 (cons_2 z_3 yzs_0))
			(= z_3 (pair_1 y_6 z_4))
			(= y_7 y_6)
			(gt_0 y_6 z_4)
			(gt_0 x_7 y_7))
		(maximummaximum_0 x_56 x_7 y_5))))
(assert (forall ((x_7 Nat_0) (y_5 list_2) (x_58 Nat_0))
	(=>	(and (= x_58 x_7)
			(= y_5 nil_2))
		(maximummaximum_0 x_58 x_7 y_5))))
(declare-fun length_0 (Nat_0 list_5) Bool)
(assert (forall ((x_8 list_5) (y_8 list_4) (l_0 list_5) (x_59 Nat_0) (x_60 Nat_0) (x_159 Nat_0))
	(=>	(and (= x_59 x_159)
			(length_0 x_60 l_0)
			(= x_8 (cons_5 y_8 l_0))
			(add_0 x_159 (S_0 Z_0) x_60))
		(length_0 x_59 x_8))))
(assert (forall ((x_8 list_5) (x_61 Nat_0))
	(=>	(and (= x_61 Z_0)
			(= x_8 nil_5))
		(length_0 x_61 x_8))))
(declare-fun last_0 (list_4 list_4 list_5) Bool)
(assert (forall ((x_9 list_4) (y_9 list_5) (z_5 list_4) (ys_0 list_5) (x_62 list_4) (x_63 list_4))
	(=>	(and (= x_62 x_63)
			(last_0 x_63 z_5 ys_0)
			(= y_9 (cons_5 z_5 ys_0)))
		(last_0 x_62 x_9 y_9))))
(assert (forall ((x_9 list_4) (y_9 list_5) (x_64 list_4))
	(=>	(and (= x_64 x_9)
			(= y_9 nil_5))
		(last_0 x_64 x_9 y_9))))
(declare-fun bin_0 (list_4 Nat_0) Bool)
(assert (forall ((x_10 Nat_0) (x_65 list_4))
	(=>	(and (= x_65 nil_4)
			(= x_10 Z_0))
		(bin_0 x_65 x_10))))
(assert (forall ((x_10 Nat_0) (x_66 list_4) (x_67 list_4) (x_160 Nat_0) (x_161 Nat_0))
	(=>	(and (= x_66 (cons_4 O_0 x_67))
			(bin_0 x_67 x_160)
			(diseqNat_0 x_10 Z_0)
			(= x_161 Z_0)
			(div_0 x_160 x_10 (S_0 (S_0 Z_0)))
			(mod_0 x_161 x_10 (S_0 (S_0 Z_0))))
		(bin_0 x_66 x_10))))
(assert (forall ((x_10 Nat_0) (x_68 list_4))
	(=>	(and (= x_68 nil_4)
			(= x_10 Z_0))
		(bin_0 x_68 x_10))))
(assert (forall ((x_10 Nat_0) (x_69 list_4) (x_70 list_4) (x_162 Nat_0) (x_163 Nat_0))
	(=>	(and (= x_69 (cons_4 I_0 x_70))
			(bin_0 x_70 x_162)
			(diseqNat_0 x_10 Z_0)
			(diseqNat_0 x_163 Z_0)
			(div_0 x_162 x_10 (S_0 (S_0 Z_0)))
			(mod_0 x_163 x_10 (S_0 (S_0 Z_0))))
		(bin_0 x_69 x_10))))
(declare-fun bgraph_0 (list_6 list_2) Bool)
(assert (forall ((x_11 list_2) (y_10 pair_0) (z_6 list_2) (u_1 Nat_0) (v_1 Nat_0) (x_71 list_6) (x_72 list_4) (x_73 list_4) (x_74 list_6))
	(=>	(and (= x_71 (cons_6 (pair_3 x_72 x_73) x_74))
			(bin_0 x_72 u_1)
			(bin_0 x_73 v_1)
			(bgraph_0 x_74 z_6)
			(= x_11 (cons_2 y_10 z_6))
			(= y_10 (pair_1 u_1 v_1)))
		(bgraph_0 x_71 x_11))))
(assert (forall ((x_11 list_2) (x_75 list_6))
	(=>	(and (= x_75 nil_6)
			(= x_11 nil_2))
		(bgraph_0 x_75 x_11))))
(declare-fun beq_0 (Bool list_4 list_4) Bool)
(assert (forall ((x_12 list_4) (y_11 list_4) (x_13 B_0) (xs_1 list_4) (x_14 B_0) (zs_0 list_4) (x_76 Bool) (x_77 Bool))
	(=>	(and (= x_76 x_77)
			(beq_0 x_77 xs_1 zs_0)
			(= x_12 (cons_4 x_13 xs_1))
			(= x_13 O_0)
			(= y_11 (cons_4 x_14 zs_0))
			(= x_14 O_0))
		(beq_0 x_76 x_12 y_11))))
(assert (forall ((x_12 list_4) (y_11 list_4) (x_13 B_0) (xs_1 list_4) (x_14 B_0) (zs_0 list_4) (x_78 Bool))
	(=>	(and (= x_78 false)
			(= x_12 (cons_4 x_13 xs_1))
			(= x_13 O_0)
			(= y_11 (cons_4 x_14 zs_0))
			(= x_14 I_0))
		(beq_0 x_78 x_12 y_11))))
(assert (forall ((x_12 list_4) (y_11 list_4) (x_13 B_0) (xs_1 list_4) (x_79 Bool))
	(=>	(and (= x_79 false)
			(= x_12 (cons_4 x_13 xs_1))
			(= x_13 O_0)
			(= y_11 nil_4))
		(beq_0 x_79 x_12 y_11))))
(assert (forall ((x_12 list_4) (y_11 list_4) (x_13 B_0) (xs_1 list_4) (x_15 B_0) (ys_1 list_4) (x_80 Bool))
	(=>	(and (= x_80 false)
			(= x_12 (cons_4 x_13 xs_1))
			(= x_13 I_0)
			(= y_11 (cons_4 x_15 ys_1))
			(= x_15 O_0))
		(beq_0 x_80 x_12 y_11))))
(assert (forall ((x_12 list_4) (y_11 list_4) (x_13 B_0) (xs_1 list_4) (x_15 B_0) (ys_1 list_4) (x_81 Bool) (x_82 Bool))
	(=>	(and (= x_81 x_82)
			(beq_0 x_82 xs_1 ys_1)
			(= x_12 (cons_4 x_13 xs_1))
			(= x_13 I_0)
			(= y_11 (cons_4 x_15 ys_1))
			(= x_15 I_0))
		(beq_0 x_81 x_12 y_11))))
(assert (forall ((x_12 list_4) (y_11 list_4) (x_13 B_0) (xs_1 list_4) (x_83 Bool))
	(=>	(and (= x_83 false)
			(= x_12 (cons_4 x_13 xs_1))
			(= x_13 I_0)
			(= y_11 nil_4))
		(beq_0 x_83 x_12 y_11))))
(assert (forall ((x_12 list_4) (y_11 list_4) (z_7 B_0) (x_16 list_4) (x_84 Bool))
	(=>	(and (= x_84 false)
			(= x_12 nil_4)
			(= y_11 (cons_4 z_7 x_16)))
		(beq_0 x_84 x_12 y_11))))
(assert (forall ((x_12 list_4) (y_11 list_4) (x_85 Bool))
	(=>	(and (= x_85 true)
			(= x_12 nil_4)
			(= y_11 nil_4))
		(beq_0 x_85 x_12 y_11))))
(declare-fun bpath_0 (list_0 list_4 list_4 list_6) Bool)
(assert (forall ((x_17 list_4) (y_12 list_4) (z_8 list_6) (x_18 pair_2) (x_19 list_6) (u_2 list_4) (v_2 list_4) (x_86 list_0) (x_87 Bool) (x_88 Bool) (x_89 Bool) (x_90 Bool) (x_91 list_0))
	(=>	(and (= x_86 (cons_0 (or (and x_87 x_88) (and x_89 x_90)) x_91))
			(beq_0 x_87 u_2 x_17)
			(beq_0 x_88 v_2 y_12)
			(beq_0 x_89 u_2 y_12)
			(beq_0 x_90 v_2 x_17)
			(bpath_0 x_91 x_17 y_12 x_19)
			(= z_8 (cons_6 x_18 x_19))
			(= x_18 (pair_3 u_2 v_2)))
		(bpath_0 x_86 x_17 y_12 z_8))))
(assert (forall ((x_17 list_4) (y_12 list_4) (z_8 list_6) (x_92 list_0))
	(=>	(and (= x_92 nil_0)
			(= z_8 nil_6))
		(bpath_0 x_92 x_17 y_12 z_8))))
(declare-fun bpath_1 (Bool list_5 list_6) Bool)
(assert (forall ((x_20 list_5) (y_13 list_6) (z_9 list_4) (x_21 list_5) (y_14 list_4) (xs_2 list_5) (x_93 Bool) (x_94 list_0) (x_95 Bool) (x_96 Bool))
	(=>	(and (= x_93 (and x_95 x_96))
			(bpath_0 x_94 z_9 y_14 y_13)
			(or_0 x_95 x_94)
			(bpath_1 x_96 (cons_5 y_14 xs_2) y_13)
			(= x_20 (cons_5 z_9 x_21))
			(= x_21 (cons_5 y_14 xs_2)))
		(bpath_1 x_93 x_20 y_13))))
(assert (forall ((x_20 list_5) (y_13 list_6) (z_9 list_4) (x_21 list_5) (x_97 Bool))
	(=>	(and (= x_97 true)
			(= x_20 (cons_5 z_9 x_21))
			(= x_21 nil_5))
		(bpath_1 x_97 x_20 y_13))))
(assert (forall ((x_20 list_5) (y_13 list_6) (x_98 Bool))
	(=>	(and (= x_98 true)
			(= x_20 nil_5))
		(bpath_1 x_98 x_20 y_13))))
(declare-fun belem_0 (list_0 list_4 list_5) Bool)
(assert (forall ((x_22 list_4) (y_15 list_5) (z_10 list_4) (x_23 list_5) (x_99 list_0) (x_100 Bool) (x_101 list_0))
	(=>	(and (= x_99 (cons_0 x_100 x_101))
			(beq_0 x_100 x_22 z_10)
			(belem_0 x_101 x_22 x_23)
			(= y_15 (cons_5 z_10 x_23)))
		(belem_0 x_99 x_22 y_15))))
(assert (forall ((x_22 list_4) (y_15 list_5) (x_102 list_0))
	(=>	(and (= x_102 nil_0)
			(= y_15 nil_5))
		(belem_0 x_102 x_22 y_15))))
(declare-fun belem_1 (Bool list_4 list_5) Bool)
(assert (forall ((x_24 list_4) (y_16 list_5) (x_103 Bool) (x_104 list_0) (x_105 Bool))
	(=>	(and (= x_103 x_105)
			(belem_0 x_104 x_24 y_16)
			(or_0 x_105 x_104))
		(belem_1 x_103 x_24 y_16))))
(declare-fun bunique_0 (Bool list_5) Bool)
(assert (forall ((x_25 list_5) (y_17 list_4) (xs_3 list_5) (x_106 Bool) (x_107 Bool) (x_108 Bool))
	(=>	(and (= x_106 (and (not x_107) x_108))
			(belem_1 x_107 y_17 xs_3)
			(bunique_0 x_108 xs_3)
			(= x_25 (cons_5 y_17 xs_3)))
		(bunique_0 x_106 x_25))))
(assert (forall ((x_25 list_5) (x_109 Bool))
	(=>	(and (= x_109 true)
			(= x_25 nil_5))
		(bunique_0 x_109 x_25))))
(declare-fun btour_0 (Bool list_5 list_2) Bool)
(assert (forall ((x_26 list_5) (y_18 list_2) (x_27 list_4) (x_28 list_5) (x_29 pair_0) (vs_0 list_2) (u_3 Nat_0) (v_3 Nat_0) (x_110 Bool) (x_111 list_4) (x_112 Bool) (x_113 list_6) (x_114 Bool) (x_115 Bool) (x_116 Nat_0) (x_117 Nat_0) (x_164 Nat_0) (x_165 Nat_0))
	(=>	(and (= x_110 (and x_112 (and x_114 (and x_115 (= x_116 x_165)))))
			(last_0 x_111 x_27 x_28)
			(beq_0 x_112 x_27 x_111)
			(bgraph_0 x_113 (cons_2 (pair_1 u_3 v_3) vs_0))
			(bpath_1 x_114 (cons_5 x_27 x_28) x_113)
			(bunique_0 x_115 x_28)
			(length_0 x_116 (cons_5 x_27 x_28))
			(maximummaximum_0 x_117 v_3 vs_0)
			(= x_26 (cons_5 x_27 x_28))
			(= y_18 (cons_2 x_29 vs_0))
			(= x_29 (pair_1 u_3 v_3))
			(le_0 u_3 v_3)
			(add_0 x_164 (S_0 Z_0) x_117)
			(add_0 x_165 (S_0 Z_0) x_164))
		(btour_0 x_110 x_26 y_18))))
(assert (forall ((x_26 list_5) (y_18 list_2) (x_27 list_4) (x_28 list_5) (x_29 pair_0) (vs_0 list_2) (u_3 Nat_0) (v_3 Nat_0) (x_118 Bool) (x_119 list_4) (x_120 Bool) (x_121 list_6) (x_122 Bool) (x_123 Bool) (x_124 Nat_0) (x_125 Nat_0) (x_166 Nat_0) (x_167 Nat_0))
	(=>	(and (= x_118 (and x_120 (and x_122 (and x_123 (= x_124 x_167)))))
			(last_0 x_119 x_27 x_28)
			(beq_0 x_120 x_27 x_119)
			(bgraph_0 x_121 (cons_2 (pair_1 u_3 v_3) vs_0))
			(bpath_1 x_122 (cons_5 x_27 x_28) x_121)
			(bunique_0 x_123 x_28)
			(length_0 x_124 (cons_5 x_27 x_28))
			(maximummaximum_0 x_125 u_3 vs_0)
			(= x_26 (cons_5 x_27 x_28))
			(= y_18 (cons_2 x_29 vs_0))
			(= x_29 (pair_1 u_3 v_3))
			(gt_0 u_3 v_3)
			(add_0 x_166 (S_0 Z_0) x_125)
			(add_0 x_167 (S_0 Z_0) x_166))
		(btour_0 x_118 x_26 y_18))))
(assert (forall ((x_26 list_5) (y_18 list_2) (x_27 list_4) (x_28 list_5) (x_126 Bool))
	(=>	(and (= x_126 false)
			(= x_26 (cons_5 x_27 x_28))
			(= y_18 nil_2))
		(btour_0 x_126 x_26 y_18))))
(assert (forall ((x_26 list_5) (y_18 list_2) (z_11 pair_0) (x_30 list_2) (x_127 Bool))
	(=>	(and (= x_127 false)
			(= x_26 nil_5)
			(= y_18 (cons_2 z_11 x_30)))
		(btour_0 x_127 x_26 y_18))))
(assert (forall ((x_26 list_5) (y_18 list_2) (x_128 Bool))
	(=>	(and (= x_128 true)
			(= x_26 nil_5)
			(= y_18 nil_2))
		(btour_0 x_128 x_26 y_18))))
(declare-fun x_31 (list_2 list_2 list_2) Bool)
(assert (forall ((x_32 list_2) (y_19 list_2) (z_12 pair_0) (xs_4 list_2) (x_129 list_2) (x_130 list_2))
	(=>	(and (= x_129 (cons_2 z_12 x_130))
			(x_31 x_130 xs_4 y_19)
			(= x_32 (cons_2 z_12 xs_4)))
		(x_31 x_129 x_32 y_19))))
(assert (forall ((x_32 list_2) (y_19 list_2) (x_131 list_2))
	(=>	(and (= x_131 y_19)
			(= x_32 nil_2))
		(x_31 x_131 x_32 y_19))))
(declare-fun concat_0 (list_2 list_3) Bool)
(assert (forall ((x_33 list_3) (y_20 list_2) (xs_5 list_3) (x_132 list_2) (x_133 list_2) (x_134 list_2))
	(=>	(and (= x_132 x_134)
			(concat_0 x_133 xs_5)
			(x_31 x_134 y_20 x_133)
			(= x_33 (cons_3 y_20 xs_5)))
		(concat_0 x_132 x_33))))
(assert (forall ((x_33 list_3) (x_135 list_2))
	(=>	(and (= x_135 nil_2)
			(= x_33 nil_3))
		(concat_0 x_135 x_33))))
(declare-fun petersen_3 (list_2 Nat_0) Bool)
(assert (forall ((x_34 Nat_0) (x_136 list_2))
	(=>	(and (= x_136 nil_2)
			(= x_34 Z_0))
		(petersen_3 x_136 x_34))))
(assert (forall ((x_34 Nat_0) (x_137 list_2) (x_138 list_1) (x_139 list_2) (x_140 list_3) (x_141 list_2) (x_142 list_1) (x_143 list_2) (x_144 list_2) (x_168 Nat_0) (x_169 Nat_0))
	(=>	(and (= x_137 x_144)
			(primEnumFromTo_0 x_138 Z_0 x_168)
			(petersen_1 x_139 x_138)
			(petersen_2 x_140 x_34 (cons_2 (pair_1 x_169 Z_0) x_139))
			(concat_0 x_141 x_140)
			(primEnumFromTo_0 x_142 Z_0 x_34)
			(petersen_0 x_143 x_34 x_142)
			(x_31 x_144 x_141 x_143)
			(diseqNat_0 x_34 Z_0)
			(minus_0 x_168 x_34 (S_0 Z_0))
			(minus_0 x_169 x_34 (S_0 Z_0)))
		(petersen_3 x_137 x_34))))
(assert (forall ((p_0 list_5) (x_145 list_1) (x_146 list_2) (x_147 list_3) (x_148 list_2) (x_149 list_1) (x_150 list_2) (x_151 list_2) (x_152 Bool) (x_170 Nat_0) (x_171 Nat_0))
	(=>	(and (= x_152 true)
			(primEnumFromTo_0 x_145 Z_0 x_170)
			(petersen_1 x_146 x_145)
			(petersen_2 x_147 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (cons_2 (pair_1 x_171 Z_0) x_146))
			(concat_0 x_148 x_147)
			(primEnumFromTo_0 x_149 Z_0 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))))
			(petersen_0 x_150 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) x_149)
			(x_31 x_151 x_148 x_150)
			(btour_0 x_152 p_0 x_151)
			(minus_0 x_170 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (S_0 Z_0))
			(minus_0 x_171 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (S_0 Z_0)))
		false)))
(check-sat)
