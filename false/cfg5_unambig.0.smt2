(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_62 Nat_0) (x_61 Nat_0))
	(=> (= x_62 (S_0 x_61))
	    (unS_1 x_61 x_62))))
(assert (isZ_0 Z_0))
(assert (forall ((x_63 Nat_0))
	(isS_0 (S_0 x_63))))
(assert (forall ((x_64 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_64))))
(assert (forall ((x_65 Nat_0))
	(diseqNat_0 (S_0 x_65) Z_0)))
(assert (forall ((x_66 Nat_0) (x_67 Nat_0))
	(=> (diseqNat_0 x_66 x_67)
	    (diseqNat_0 (S_0 x_66) (S_0 x_67)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_2 Nat_0))
	(add_0 y_2 Z_0 y_2)))
(assert (forall ((x_59 Nat_0) (y_2 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_59 y_2)
	    (add_0 (S_0 r_0) (S_0 x_59) y_2))))
(assert (forall ((y_2 Nat_0))
	(minus_0 Z_0 Z_0 y_2)))
(assert (forall ((x_59 Nat_0) (y_2 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_59 y_2)
	    (minus_0 (S_0 r_0) (S_0 x_59) y_2))))
(assert (forall ((y_2 Nat_0))
	(le_0 Z_0 y_2)))
(assert (forall ((x_59 Nat_0) (y_2 Nat_0))
	(=> (le_0 x_59 y_2)
	    (le_0 (S_0 x_59) (S_0 y_2)))))
(assert (forall ((y_2 Nat_0))
	(ge_0 y_2 Z_0)))
(assert (forall ((x_59 Nat_0) (y_2 Nat_0))
	(=> (ge_0 x_59 y_2)
	    (ge_0 (S_0 x_59) (S_0 y_2)))))
(assert (forall ((y_2 Nat_0))
	(lt_0 Z_0 (S_0 y_2))))
(assert (forall ((x_59 Nat_0) (y_2 Nat_0))
	(=> (lt_0 x_59 y_2)
	    (lt_0 (S_0 x_59) (S_0 y_2)))))
(assert (forall ((y_2 Nat_0))
	(gt_0 (S_0 y_2) Z_0)))
(assert (forall ((x_59 Nat_0) (y_2 Nat_0))
	(=> (gt_0 x_59 y_2)
	    (gt_0 (S_0 x_59) (S_0 y_2)))))
(assert (forall ((y_2 Nat_0))
	(mult_0 Z_0 Z_0 y_2)))
(assert (forall ((x_59 Nat_0) (y_2 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (mult_0 r_0 x_59 y_2)
			(add_0 z_1 r_0 y_2))
		(mult_0 z_1 (S_0 x_59) y_2))))
(assert (forall ((x_59 Nat_0) (y_2 Nat_0))
	(=> (lt_0 x_59 y_2)
	    (div_0 Z_0 x_59 y_2))))
(assert (forall ((x_59 Nat_0) (y_2 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_59 y_2)
			(minus_0 z_1 x_59 y_2)
			(div_0 r_0 z_1 y_2))
		(div_0 (S_0 r_0) x_59 y_2))))
(assert (forall ((x_59 Nat_0) (y_2 Nat_0))
	(=> (lt_0 x_59 y_2)
	    (mod_0 x_59 x_59 y_2))))
(assert (forall ((x_59 Nat_0) (y_2 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_59 y_2)
			(minus_0 z_1 x_59 y_2)
			(mod_0 r_0 z_1 y_2))
		(mod_0 r_0 x_59 y_2))))
(declare-datatypes ((Tok_0 0)) (((C_0 ) (D_0 ) (X_0 ) (Y_0 ) (Plus_0 ) (Mul_0 ))))
(declare-fun diseqTok_0 (Tok_0 Tok_0) Bool)
(declare-fun isC_0 (Tok_0) Bool)
(declare-fun isD_0 (Tok_0) Bool)
(declare-fun isX_0 (Tok_0) Bool)
(declare-fun isY_0 (Tok_0) Bool)
(declare-fun isPlus_0 (Tok_0) Bool)
(declare-fun isMul_0 (Tok_0) Bool)
(assert (isC_0 C_0))
(assert (isD_0 D_0))
(assert (isX_0 X_0))
(assert (isY_0 Y_0))
(assert (isPlus_0 Plus_0))
(assert (isMul_0 Mul_0))
(assert (diseqTok_0 C_0 D_0))
(assert (diseqTok_0 C_0 X_0))
(assert (diseqTok_0 C_0 Y_0))
(assert (diseqTok_0 C_0 Plus_0))
(assert (diseqTok_0 C_0 Mul_0))
(assert (diseqTok_0 D_0 C_0))
(assert (diseqTok_0 X_0 C_0))
(assert (diseqTok_0 Y_0 C_0))
(assert (diseqTok_0 Plus_0 C_0))
(assert (diseqTok_0 Mul_0 C_0))
(assert (diseqTok_0 D_0 X_0))
(assert (diseqTok_0 D_0 Y_0))
(assert (diseqTok_0 D_0 Plus_0))
(assert (diseqTok_0 D_0 Mul_0))
(assert (diseqTok_0 X_0 D_0))
(assert (diseqTok_0 Y_0 D_0))
(assert (diseqTok_0 Plus_0 D_0))
(assert (diseqTok_0 Mul_0 D_0))
(assert (diseqTok_0 X_0 Y_0))
(assert (diseqTok_0 X_0 Plus_0))
(assert (diseqTok_0 X_0 Mul_0))
(assert (diseqTok_0 Y_0 X_0))
(assert (diseqTok_0 Plus_0 X_0))
(assert (diseqTok_0 Mul_0 X_0))
(assert (diseqTok_0 Y_0 Plus_0))
(assert (diseqTok_0 Y_0 Mul_0))
(assert (diseqTok_0 Plus_0 Y_0))
(assert (diseqTok_0 Mul_0 Y_0))
(assert (diseqTok_0 Plus_0 Mul_0))
(assert (diseqTok_0 Mul_0 Plus_0))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Tok_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Tok_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_77 list_0) (x_75 Tok_0) (x_76 list_0))
	(=> (= x_77 (cons_0 x_75 x_76))
	    (head_1 x_75 x_77))))
(assert (forall ((x_77 list_0) (x_75 Tok_0) (x_76 list_0))
	(=> (= x_77 (cons_0 x_75 x_76))
	    (tail_1 x_76 x_77))))
(assert (isnil_0 nil_0))
(assert (forall ((x_78 Tok_0) (x_79 list_0))
	(iscons_0 (cons_0 x_78 x_79))))
(assert (forall ((x_80 Tok_0) (x_81 list_0))
	(diseqlist_0 nil_0 (cons_0 x_80 x_81))))
(assert (forall ((x_82 Tok_0) (x_83 list_0))
	(diseqlist_0 (cons_0 x_82 x_83) nil_0)))
(assert (forall ((x_84 Tok_0) (x_85 list_0) (x_86 Tok_0) (x_87 list_0))
	(=> (diseqTok_0 x_84 x_86)
	    (diseqlist_0 (cons_0 x_84 x_85) (cons_0 x_86 x_87)))))
(assert (forall ((x_84 Tok_0) (x_85 list_0) (x_86 Tok_0) (x_87 list_0))
	(=> (diseqlist_0 x_85 x_87)
	    (diseqlist_0 (cons_0 x_84 x_85) (cons_0 x_86 x_87)))))
(declare-datatypes ((E_0 0)) (((x_0 (proj_0 E_0) (proj_1 E_0)) (x_1 (proj_2 E_0) (proj_3 E_0)) (EX_0 ) (EY_0 ))))
(declare-fun diseqE_0 (E_0 E_0) Bool)
(declare-fun proj_4 (E_0 E_0) Bool)
(declare-fun proj_5 (E_0 E_0) Bool)
(declare-fun proj_6 (E_0 E_0) Bool)
(declare-fun proj_7 (E_0 E_0) Bool)
(declare-fun isx_0 (E_0) Bool)
(declare-fun isx_1 (E_0) Bool)
(declare-fun isEX_0 (E_0) Bool)
(declare-fun isEY_0 (E_0) Bool)
(assert (forall ((x_90 E_0) (x_88 E_0) (x_89 E_0))
	(=> (= x_90 (x_0 x_88 x_89))
	    (proj_4 x_88 x_90))))
(assert (forall ((x_90 E_0) (x_88 E_0) (x_89 E_0))
	(=> (= x_90 (x_0 x_88 x_89))
	    (proj_5 x_89 x_90))))
(assert (forall ((x_93 E_0) (x_91 E_0) (x_92 E_0))
	(=> (= x_93 (x_1 x_91 x_92))
	    (proj_6 x_91 x_93))))
(assert (forall ((x_93 E_0) (x_91 E_0) (x_92 E_0))
	(=> (= x_93 (x_1 x_91 x_92))
	    (proj_7 x_92 x_93))))
(assert (forall ((x_96 E_0) (x_97 E_0))
	(isx_0 (x_0 x_96 x_97))))
(assert (forall ((x_98 E_0) (x_99 E_0))
	(isx_1 (x_1 x_98 x_99))))
(assert (isEX_0 EX_0))
(assert (isEY_0 EY_0))
(assert (forall ((x_100 E_0) (x_101 E_0) (x_102 E_0) (x_103 E_0))
	(diseqE_0 (x_0 x_100 x_101) (x_1 x_102 x_103))))
(assert (forall ((x_104 E_0) (x_105 E_0))
	(diseqE_0 (x_0 x_104 x_105) EX_0)))
(assert (forall ((x_106 E_0) (x_107 E_0))
	(diseqE_0 (x_0 x_106 x_107) EY_0)))
(assert (forall ((x_108 E_0) (x_109 E_0) (x_110 E_0) (x_111 E_0))
	(diseqE_0 (x_1 x_108 x_109) (x_0 x_110 x_111))))
(assert (forall ((x_112 E_0) (x_113 E_0))
	(diseqE_0 EX_0 (x_0 x_112 x_113))))
(assert (forall ((x_114 E_0) (x_115 E_0))
	(diseqE_0 EY_0 (x_0 x_114 x_115))))
(assert (forall ((x_116 E_0) (x_117 E_0))
	(diseqE_0 (x_1 x_116 x_117) EX_0)))
(assert (forall ((x_118 E_0) (x_119 E_0))
	(diseqE_0 (x_1 x_118 x_119) EY_0)))
(assert (forall ((x_120 E_0) (x_121 E_0))
	(diseqE_0 EX_0 (x_1 x_120 x_121))))
(assert (forall ((x_122 E_0) (x_123 E_0))
	(diseqE_0 EY_0 (x_1 x_122 x_123))))
(assert (diseqE_0 EX_0 EY_0))
(assert (diseqE_0 EY_0 EX_0))
(assert (forall ((x_124 E_0) (x_125 E_0) (x_126 E_0) (x_127 E_0))
	(=> (diseqE_0 x_124 x_126)
	    (diseqE_0 (x_0 x_124 x_125) (x_0 x_126 x_127)))))
(assert (forall ((x_124 E_0) (x_125 E_0) (x_126 E_0) (x_127 E_0))
	(=> (diseqE_0 x_125 x_127)
	    (diseqE_0 (x_0 x_124 x_125) (x_0 x_126 x_127)))))
(assert (forall ((x_128 E_0) (x_129 E_0) (x_130 E_0) (x_131 E_0))
	(=> (diseqE_0 x_128 x_130)
	    (diseqE_0 (x_1 x_128 x_129) (x_1 x_130 x_131)))))
(assert (forall ((x_128 E_0) (x_129 E_0) (x_130 E_0) (x_131 E_0))
	(=> (diseqE_0 x_129 x_131)
	    (diseqE_0 (x_1 x_128 x_129) (x_1 x_130 x_131)))))
(declare-fun assoc_0 (E_0 E_0) Bool)
(assert (forall ((x_2 E_0) (a_0 E_0) (b_0 E_0) (x_14 E_0) (x_15 E_0) (x_16 E_0))
	(=>	(and (= x_14 (x_1 x_15 x_16))
			(assoc_0 x_15 a_0)
			(assoc_0 x_16 b_0)
			(= x_2 (x_1 a_0 b_0)))
		(assoc_0 x_14 x_2))))
(assert (forall ((x_2 E_0) (y_0 E_0) (c_0 E_0) (a_1 E_0) (b_1 E_0) (x_17 E_0) (x_18 E_0))
	(=>	(and (= x_17 x_18)
			(assoc_0 x_18 (x_0 a_1 (x_0 b_1 c_0)))
			(= x_2 (x_0 y_0 c_0))
			(= y_0 (x_0 a_1 b_1)))
		(assoc_0 x_17 x_2))))
(assert (forall ((x_2 E_0) (y_0 E_0) (c_0 E_0) (x_3 E_0) (x_19 E_0) (x_20 E_0) (x_21 E_0))
	(=>	(and (= x_19 (x_0 x_20 x_21))
			(assoc_0 x_20 y_0)
			(assoc_0 x_21 c_0)
			(= x_2 (x_0 y_0 c_0))
			(= y_0 EX_0))
		(assoc_0 x_19 x_2))))
(assert (forall ((x_2 E_0) (y_0 E_0) (c_0 E_0) (x_3 E_0) (x_22 E_0) (x_23 E_0) (x_24 E_0))
	(=>	(and (= x_22 (x_0 x_23 x_24))
			(assoc_0 x_23 y_0)
			(assoc_0 x_24 c_0)
			(= x_2 (x_0 y_0 c_0))
			(= y_0 EY_0))
		(assoc_0 x_22 x_2))))
(assert (forall ((x_2 E_0) (y_0 E_0) (c_0 E_0) (x_10 E_0) (x_11 E_0) (x_3 E_0) (x_25 E_0) (x_26 E_0) (x_27 E_0))
	(=>	(and (= x_25 (x_0 x_26 x_27))
			(assoc_0 x_26 y_0)
			(assoc_0 x_27 c_0)
			(= x_2 (x_0 y_0 c_0))
			(= y_0 (x_1 x_10 x_11)))
		(assoc_0 x_25 x_2))))
(assert (forall ((x_2 E_0) (x_4 E_0) (x_28 E_0))
	(=>	(and (= x_28 x_2)
			(= x_2 EX_0))
		(assoc_0 x_28 x_2))))
(assert (forall ((x_2 E_0) (x_4 E_0) (x_29 E_0))
	(=>	(and (= x_29 x_2)
			(= x_2 EY_0))
		(assoc_0 x_29 x_2))))
(declare-fun x_5 (list_0 list_0 list_0) Bool)
(assert (forall ((x_6 list_0) (y_1 list_0) (z_0 Tok_0) (xs_0 list_0) (x_30 list_0) (x_31 list_0))
	(=>	(and (= x_30 (cons_0 z_0 x_31))
			(x_5 x_31 xs_0 y_1)
			(= x_6 (cons_0 z_0 xs_0)))
		(x_5 x_30 x_6 y_1))))
(assert (forall ((x_6 list_0) (y_1 list_0) (x_32 list_0))
	(=>	(and (= x_32 y_1)
			(= x_6 nil_0))
		(x_5 x_32 x_6 y_1))))
(declare-fun linTerm_0 (list_0 E_0) Bool)
(declare-fun lin_0 (list_0 E_0) Bool)
(assert (forall ((x_7 E_0) (a_2 E_0) (b_2 E_0) (x_33 list_0) (x_34 list_0) (x_35 list_0) (x_36 list_0))
	(=>	(and (= x_33 x_36)
			(lin_0 x_34 (x_0 a_2 b_2))
			(x_5 x_35 x_34 (cons_0 D_0 nil_0))
			(x_5 x_36 (cons_0 C_0 nil_0) x_35)
			(= x_7 (x_1 a_2 b_2)))
		(linTerm_0 x_33 x_7))))
(assert (forall ((x_7 E_0) (x_8 E_0) (x_37 list_0) (x_38 list_0))
	(=>	(and (= x_37 x_38)
			(lin_0 x_38 x_7)
			(= x_7 EX_0))
		(linTerm_0 x_37 x_7))))
(assert (forall ((x_7 E_0) (x_8 E_0) (x_39 list_0) (x_40 list_0))
	(=>	(and (= x_39 x_40)
			(lin_0 x_40 x_7)
			(= x_7 EY_0))
		(linTerm_0 x_39 x_7))))
(assert (forall ((x_7 E_0) (x_12 E_0) (x_13 E_0) (x_8 E_0) (x_41 list_0) (x_42 list_0))
	(=>	(and (= x_41 x_42)
			(lin_0 x_42 x_7)
			(= x_7 (x_0 x_12 x_13)))
		(linTerm_0 x_41 x_7))))
(assert (forall ((x_9 E_0) (x_43 list_0))
	(=>	(and (= x_43 (cons_0 Y_0 nil_0))
			(= x_9 EY_0))
		(lin_0 x_43 x_9))))
(assert (forall ((x_9 E_0) (x_44 list_0))
	(=>	(and (= x_44 (cons_0 X_0 nil_0))
			(= x_9 EX_0))
		(lin_0 x_44 x_9))))
(assert (forall ((x_9 E_0) (a_3 E_0) (b_3 E_0) (x_45 list_0) (x_46 list_0) (x_47 list_0) (x_48 list_0) (x_49 list_0))
	(=>	(and (= x_45 x_49)
			(lin_0 x_46 a_3)
			(lin_0 x_47 b_3)
			(x_5 x_48 (cons_0 Mul_0 nil_0) x_47)
			(x_5 x_49 x_46 x_48)
			(= x_9 (x_1 a_3 b_3)))
		(lin_0 x_45 x_9))))
(assert (forall ((x_9 E_0) (a_4 E_0) (b_4 E_0) (x_50 list_0) (x_51 list_0) (x_52 list_0) (x_53 list_0) (x_54 list_0))
	(=>	(and (= x_50 x_54)
			(linTerm_0 x_51 a_4)
			(linTerm_0 x_52 b_4)
			(x_5 x_53 (cons_0 Plus_0 nil_0) x_52)
			(x_5 x_54 x_51 x_53)
			(= x_9 (x_0 a_4 b_4)))
		(lin_0 x_50 x_9))))
(assert (forall ((u_0 E_0) (v_0 E_0) (x_55 E_0) (x_56 E_0) (x_57 list_0) (x_58 list_0))
	(=>	(and (diseqE_0 x_55 x_56)
			(= x_57 x_58)
			(assoc_0 x_55 u_0)
			(assoc_0 x_56 v_0)
			(lin_0 x_57 u_0)
			(lin_0 x_58 v_0))
		false)))
(check-sat)
