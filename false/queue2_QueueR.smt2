(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_14 ) (Z_15 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Nat_0)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-datatypes ((pair_2 0)) (((pair_3 (projpair_2 list_0) (projpair_3 list_0)))))
(declare-datatypes ((Q_0 0)) (((Q_1 (projQ_0 list_0) (projQ_1 list_0)))))
(declare-datatypes ((Maybe_0 0)) (((Nothing_0 ) (Just_0 (projJust_0 Nat_0)))))
(declare-fun diseqMaybe_0 (Maybe_0 Maybe_0) Bool)
(declare-datatypes ((Maybe_1 0)) (((Nothing_1 ) (Just_1 (projJust_1 Q_0)))))
(declare-datatypes ((E_0 0)) (((Empty_0 ) (EnqL_0 (projEnqL_0 Nat_0) (projEnqL_1 E_0)) (EnqR_0 (projEnqR_0 E_0) (projEnqR_1 Nat_0)) (DeqL_0 (projDeqL_0 E_0)) (DeqR_0 (projDeqR_0 E_0)) (App_0 (projApp_0 E_0) (projApp_1 E_0)))))
(declare-fun take_0 (list_0 Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun length_0 (Nat_0 list_0) Bool)
(declare-fun last_0 (Maybe_0 list_0) Bool)
(declare-fun init_0 (list_0 list_0) Bool)
(declare-fun fstR_0 (Maybe_0 Q_0) Bool)
(declare-fun fromMaybe_1 (Q_0 Q_0 Maybe_1) Bool)
(declare-fun empty_1 (Q_0) Bool)
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(declare-fun halve_0 (pair_2 list_0) Bool)
(declare-fun x_21 (list_0 list_0 list_0) Bool)
(declare-fun list_1 (list_0 E_0) Bool)
(declare-fun reverse_0 (list_0 list_0) Bool)
(declare-fun enqL_1 (Q_0 Nat_0 Q_0) Bool)
(declare-fun mkQ_0 (Q_0 list_0 list_0) Bool)
(declare-fun x_31 (Q_0 Q_0 Q_0) Bool)
(declare-fun deqL_1 (Maybe_1 Q_0) Bool)
(declare-fun deqR_1 (Maybe_1 Q_0) Bool)
(declare-fun enqR_1 (Q_0 Q_0 Nat_0) Bool)
(declare-fun queue_0 (Q_0 E_0) Bool)
(assert (forall ((x_183 Nat_0))
	(diseqNat_0 Z_14 (Z_15 x_183))))
(assert (forall ((x_184 Nat_0))
	(diseqNat_0 (Z_15 x_184) Z_14)))
(assert (forall ((x_185 Nat_0) (x_186 Nat_0))
	(=> (diseqNat_0 x_185 x_186) (diseqNat_0 (Z_15 x_185) (Z_15 x_186)))))
(assert (forall ((y_21 Nat_0))
	(add_0 y_21 Z_14 y_21)))
(assert (forall ((r_1 Nat_0) (x_174 Nat_0) (y_21 Nat_0))
	(=> (add_0 r_1 x_174 y_21) (add_0 (Z_15 r_1) (Z_15 x_174) y_21))))
(assert (forall ((y_21 Nat_0))
	(minus_0 Z_14 Z_14 y_21)))
(assert (forall ((r_1 Nat_0) (x_174 Nat_0) (y_21 Nat_0))
	(=> (minus_0 r_1 x_174 y_21) (minus_0 (Z_15 r_1) (Z_15 x_174) y_21))))
(assert (forall ((y_21 Nat_0))
	(le_0 Z_14 y_21)))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0))
	(=> (le_0 x_174 y_21) (le_0 (Z_15 x_174) (Z_15 y_21)))))
(assert (forall ((y_21 Nat_0))
	(ge_0 y_21 Z_14)))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0))
	(=> (ge_0 x_174 y_21) (ge_0 (Z_15 x_174) (Z_15 y_21)))))
(assert (forall ((y_21 Nat_0))
	(lt_0 Z_14 (Z_15 y_21))))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_174 y_21) (lt_0 (Z_15 x_174) (Z_15 y_21)))))
(assert (forall ((y_21 Nat_0))
	(gt_0 (Z_15 y_21) Z_14)))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0))
	(=> (gt_0 x_174 y_21) (gt_0 (Z_15 x_174) (Z_15 y_21)))))
(assert (forall ((x_174 Nat_0) (y_21 Nat_0))
	(=> (lt_0 x_174 y_21) (div_0 Z_14 x_174 y_21))))
(assert (forall ((r_1 Nat_0) (x_174 Nat_0) (y_21 Nat_0) (z_16 Nat_0))
	(=> (and (ge_0 x_174 y_21) (minus_0 z_16 x_174 y_21) (div_0 r_1 z_16 y_21)) (div_0 (Z_15 r_1) x_174 y_21))))
(assert (forall ((x_232 Nat_0))
	(diseqMaybe_0 Nothing_0 (Just_0 x_232))))
(assert (forall ((x_233 Nat_0))
	(diseqMaybe_0 (Just_0 x_233) Nothing_0)))
(assert (forall ((x_234 Nat_0) (x_235 Nat_0))
	(=> (diseqNat_0 x_234 x_235) (diseqMaybe_0 (Just_0 x_234) (Just_0 x_235)))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_14) (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_175 Nat_0) (x_50 list_0) (z_0 Nat_0) (xs_0 list_0) (x_0 Nat_0))
	(=> (and (gt_0 x_0 Z_14) (take_0 x_50 x_175 xs_0) (minus_0 x_175 x_0 (Z_15 Z_14))) (take_0 (cons_0 z_0 x_50) x_0 (cons_0 z_0 xs_0)))))
(assert (forall ((x_0 Nat_0) (y_0 list_0))
	(=> (le_0 x_0 Z_14) (take_0 nil_0 x_0 y_0))))
(assert (forall ((x_0 Nat_0))
	(=> (gt_0 x_0 Z_14) (take_0 nil_0 x_0 nil_0))))
(assert (forall ((x_53 list_0) (y_1 Nat_0))
	(tail_1 x_53 (cons_0 y_1 x_53))))
(assert (tail_1 nil_0 nil_0))
(assert (forall ((x_176 Nat_0) (x_56 Nat_0) (y_2 Nat_0) (l_0 list_0))
	(=> (and (length_0 x_56 l_0) (add_0 x_176 (Z_15 Z_14) x_56)) (length_0 x_176 (cons_0 y_2 l_0)))))
(assert (length_0 Z_14 nil_0))
(assert (forall ((x_58 Maybe_0) (x_4 Nat_0) (x_5 list_0) (y_3 Nat_0))
	(=> (last_0 x_58 (cons_0 x_4 x_5)) (last_0 x_58 (cons_0 y_3 (cons_0 x_4 x_5))))))
(assert (forall ((y_3 Nat_0))
	(last_0 (Just_0 y_3) (cons_0 y_3 nil_0))))
(assert (last_0 Nothing_0 nil_0))
(assert (forall ((x_63 list_0) (x_7 Nat_0) (x_8 list_0) (y_4 Nat_0))
	(=> (init_0 x_63 (cons_0 x_7 x_8)) (init_0 (cons_0 y_4 x_63) (cons_0 y_4 (cons_0 x_7 x_8))))))
(assert (forall ((y_4 Nat_0))
	(init_0 nil_0 (cons_0 y_4 nil_0))))
(assert (init_0 nil_0 nil_0))
(assert (forall ((x_15 Nat_0) (x_16 list_0) (x_11 Nat_0) (y_6 Nat_0) (x_10 list_0))
	(fstR_0 (Just_0 y_6) (Q_1 (cons_0 x_11 (cons_0 x_15 x_16)) (cons_0 y_6 x_10)))))
(assert (forall ((x_13 Nat_0) (x_11 Nat_0) (x_10 list_0))
	(fstR_0 (Just_0 x_13) (Q_1 (cons_0 x_11 nil_0) (cons_0 x_13 x_10)))))
(assert (forall ((y_6 Nat_0) (x_10 list_0))
	(fstR_0 (Just_0 y_6) (Q_1 nil_0 (cons_0 y_6 x_10)))))
(assert (forall ((x_15 Nat_0) (x_16 list_0) (x_11 Nat_0))
	(fstR_0 Nothing_0 (Q_1 (cons_0 x_11 (cons_0 x_15 x_16)) nil_0))))
(assert (forall ((x_11 Nat_0))
	(fstR_0 (Just_0 x_11) (Q_1 (cons_0 x_11 nil_0) nil_0))))
(assert (fstR_0 Nothing_0 (Q_1 nil_0 nil_0)))
(assert (forall ((x_76 Q_0) (x_18 Q_0))
	(fromMaybe_1 x_76 x_18 (Just_1 x_76))))
(assert (forall ((x_18 Q_0))
	(fromMaybe_1 x_18 x_18 Nothing_1)))
(assert (empty_1 (Q_1 nil_0 nil_0)))
(assert (forall ((x_79 list_0) (x_19 Nat_0))
	(=> (le_0 x_19 Z_14) (drop_0 x_79 x_19 x_79))))
(assert (forall ((x_177 Nat_0) (x_80 list_0) (z_6 Nat_0) (xs_2 list_0) (x_19 Nat_0))
	(=> (and (gt_0 x_19 Z_14) (drop_0 x_80 x_177 xs_2) (minus_0 x_177 x_19 (Z_15 Z_14))) (drop_0 x_80 x_19 (cons_0 z_6 xs_2)))))
(assert (forall ((x_82 list_0) (x_19 Nat_0))
	(=> (le_0 x_19 Z_14) (drop_0 x_82 x_19 x_82))))
(assert (forall ((x_19 Nat_0))
	(=> (gt_0 x_19 Z_14) (drop_0 nil_0 x_19 nil_0))))
(assert (forall ((x_86 list_0) (x_87 list_0) (x_84 Nat_0) (k_0 Nat_0) (x_20 list_0))
	(=> (and (take_0 x_86 k_0 x_20) (drop_0 x_87 k_0 x_20) (length_0 x_84 x_20) (div_0 k_0 x_84 (Z_15 (Z_15 Z_14)))) (halve_0 (pair_3 x_86 x_87) x_20))))
(assert (forall ((x_89 list_0) (z_7 Nat_0) (xs_3 list_0) (y_10 list_0))
	(=> (x_21 x_89 xs_3 y_10) (x_21 (cons_0 z_7 x_89) (cons_0 z_7 xs_3) y_10))))
(assert (forall ((x_90 list_0))
	(x_21 x_90 nil_0 x_90)))
(assert (forall ((x_91 list_0) (x_92 list_0) (x_93 list_0) (a_0 E_0) (b_0 E_0))
	(=> (and (list_1 x_92 a_0) (list_1 x_93 b_0) (x_21 x_91 x_92 x_93)) (list_1 x_91 (App_0 a_0 b_0)))))
(assert (forall ((x_95 list_0) (x_96 list_0) (e_4 E_0))
	(=> (and (list_1 x_96 e_4) (init_0 x_95 x_96)) (list_1 x_95 (DeqR_0 e_4)))))
(assert (forall ((x_99 list_0) (x_100 list_0) (e_3 E_0))
	(=> (and (list_1 x_99 e_3) (tail_1 x_100 x_99)) (list_1 x_100 (DeqL_0 e_3)))))
(assert (forall ((x_101 list_0) (x_102 list_0) (e_2 E_0) (z_8 Nat_0))
	(=> (and (list_1 x_102 e_2) (x_21 x_101 x_102 (cons_0 z_8 nil_0))) (list_1 x_101 (EnqR_0 e_2 z_8)))))
(assert (forall ((x_105 list_0) (y_11 Nat_0) (e_1 E_0))
	(=> (list_1 x_105 e_1) (list_1 (cons_0 y_11 x_105) (EnqL_0 y_11 e_1)))))
(assert (list_1 nil_0 Empty_0))
(assert (forall ((x_107 list_0) (x_108 list_0) (y_12 Nat_0) (xs_4 list_0))
	(=> (and (reverse_0 x_108 xs_4) (x_21 x_107 x_108 (cons_0 y_12 nil_0))) (reverse_0 x_107 (cons_0 y_12 xs_4)))))
(assert (reverse_0 nil_0 nil_0))
(assert (forall ((z_9 Nat_0) (x_26 list_0) (xs_5 list_0) (x_25 Nat_0))
	(enqL_1 (Q_1 (cons_0 x_25 xs_5) (cons_0 z_9 x_26)) x_25 (Q_1 xs_5 (cons_0 z_9 x_26)))))
(assert (forall ((x_114 list_0) (as_0 list_0) (bs_0 list_0) (xs_5 list_0) (x_25 Nat_0))
	(=> (and (reverse_0 x_114 bs_0) (halve_0 (pair_3 as_0 bs_0) (cons_0 x_25 xs_5))) (enqL_1 (Q_1 as_0 x_114) x_25 (Q_1 xs_5 nil_0)))))
(assert (forall ((x_29 Nat_0) (x_30 list_0) (z_10 Nat_0) (x_28 list_0))
	(mkQ_0 (Q_1 (cons_0 z_10 x_28) (cons_0 x_29 x_30)) (cons_0 z_10 x_28) (cons_0 x_29 x_30))))
(assert (forall ((x_118 list_0) (as_2 list_0) (bs_2 list_0) (z_10 Nat_0) (x_28 list_0))
	(=> (and (reverse_0 x_118 bs_2) (halve_0 (pair_3 as_2 bs_2) (cons_0 z_10 x_28))) (mkQ_0 (Q_1 as_2 x_118) (cons_0 z_10 x_28) nil_0))))
(assert (forall ((x_121 list_0) (as_1 list_0) (bs_1 list_0) (y_14 list_0))
	(=> (and (reverse_0 x_121 bs_1) (halve_0 (pair_3 as_1 bs_1) y_14)) (mkQ_0 (Q_1 x_121 as_1) nil_0 y_14))))
(assert (forall ((x_122 Q_0) (x_123 list_0) (x_124 list_0) (x_125 list_0) (x_126 list_0) (vs_0 list_0) (ws_0 list_0) (xs_6 list_0) (ys_1 list_0))
	(=> (and (reverse_0 x_123 ys_1) (x_21 x_124 xs_6 x_123) (reverse_0 x_125 vs_0) (x_21 x_126 x_125 ws_0) (mkQ_0 x_122 x_124 x_126)) (x_31 x_122 (Q_1 xs_6 ys_1) (Q_1 vs_0 ws_0)))))
(assert (forall ((x_129 Q_0) (x_38 Nat_0) (xs_7 list_0) (z_11 list_0))
	(=> (mkQ_0 x_129 xs_7 z_11) (deqL_1 (Just_1 x_129) (Q_1 (cons_0 x_38 xs_7) z_11)))))
(assert (forall ((x_36 Nat_0) (x_37 list_0) (x_34 Nat_0))
	(deqL_1 Nothing_1 (Q_1 nil_0 (cons_0 x_34 (cons_0 x_36 x_37))))))
(assert (forall ((x_132 Q_0) (x_34 Nat_0))
	(=> (empty_1 x_132) (deqL_1 (Just_1 x_132) (Q_1 nil_0 (cons_0 x_34 nil_0))))))
(assert (deqL_1 Nothing_1 (Q_1 nil_0 nil_0)))
(assert (forall ((x_134 Q_0) (x_44 Nat_0) (x_45 list_0) (x_40 Nat_0) (y_18 Nat_0) (ys_2 list_0))
	(=> (mkQ_0 x_134 (cons_0 x_40 (cons_0 x_44 x_45)) ys_2) (deqR_1 (Just_1 x_134) (Q_1 (cons_0 x_40 (cons_0 x_44 x_45)) (cons_0 y_18 ys_2))))))
(assert (forall ((x_136 Q_0) (x_42 Nat_0) (x_43 list_0) (x_40 Nat_0))
	(=> (mkQ_0 x_136 (cons_0 x_40 nil_0) x_43) (deqR_1 (Just_1 x_136) (Q_1 (cons_0 x_40 nil_0) (cons_0 x_42 x_43))))))
(assert (forall ((x_141 Q_0) (y_18 Nat_0) (ys_2 list_0))
	(=> (mkQ_0 x_141 nil_0 ys_2) (deqR_1 (Just_1 x_141) (Q_1 nil_0 (cons_0 y_18 ys_2))))))
(assert (forall ((x_44 Nat_0) (x_45 list_0) (x_40 Nat_0))
	(deqR_1 Nothing_1 (Q_1 (cons_0 x_40 (cons_0 x_44 x_45)) nil_0))))
(assert (forall ((x_146 Q_0) (x_40 Nat_0))
	(=> (empty_1 x_146) (deqR_1 (Just_1 x_146) (Q_1 (cons_0 x_40 nil_0) nil_0)))))
(assert (deqR_1 Nothing_1 (Q_1 nil_0 nil_0)))
(assert (forall ((x_148 Q_0) (xs_8 list_0) (ys_3 list_0) (y_19 Nat_0))
	(=> (mkQ_0 x_148 xs_8 (cons_0 y_19 ys_3)) (enqR_1 x_148 (Q_1 xs_8 ys_3) y_19))))
(assert (forall ((x_150 Q_0) (x_151 Q_0) (x_152 Q_0) (a_1 E_0) (b_1 E_0))
	(=> (and (queue_0 x_151 a_1) (queue_0 x_152 b_1) (x_31 x_150 x_151 x_152)) (queue_0 x_150 (App_0 a_1 b_1)))))
(assert (forall ((x_155 Q_0) (x_156 Maybe_1) (r_0 Q_0) (e_8 E_0))
	(=> (and (deqR_1 x_156 r_0) (fromMaybe_1 x_155 r_0 x_156) (queue_0 r_0 e_8)) (queue_0 x_155 (DeqR_0 e_8)))))
(assert (forall ((x_159 Q_0) (x_160 Maybe_1) (q_2 Q_0) (e_7 E_0))
	(=> (and (deqL_1 x_160 q_2) (fromMaybe_1 x_159 q_2 x_160) (queue_0 q_2 e_7)) (queue_0 x_159 (DeqL_0 e_7)))))
(assert (forall ((x_162 Q_0) (x_163 Q_0) (e_6 E_0) (z_13 Nat_0))
	(=> (and (queue_0 x_163 e_6) (enqR_1 x_162 x_163 z_13)) (queue_0 x_162 (EnqR_0 e_6 z_13)))))
(assert (forall ((x_165 Q_0) (x_166 Q_0) (y_20 Nat_0) (e_5 E_0))
	(=> (and (queue_0 x_166 e_5) (enqL_1 x_165 y_20 x_166)) (queue_0 x_165 (EnqL_0 y_20 e_5)))))
(assert (forall ((x_168 Q_0))
	(=> (empty_1 x_168) (queue_0 x_168 Empty_0))))
(assert (forall ((x_170 Q_0) (x_171 Maybe_0) (x_172 list_0) (x_173 Maybe_0) (e_9 E_0))
	(=> (and (diseqMaybe_0 x_171 x_173) (queue_0 x_170 e_9) (fstR_0 x_171 x_170) (list_1 x_172 e_9) (last_0 x_173 x_172)) false)))
(check-sat)
(get-model)
