(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_10 ) (Z_11 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun and_1 (Bool_0 Bool_0 Bool_0) Bool)
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Nat_0)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Bool_0) (tail_0 list_0)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 Nat_0) (tail_1 list_1)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 pair_0) (tail_2 list_2)))))
(declare-datatypes ((Maybe_0 0)) (((Nothing_0 ) (Just_0 (projJust_0 Nat_0)))))
(declare-fun primEnumFromTo_0 (list_1 Nat_0 Nat_0) Bool)
(declare-fun index_0 (Maybe_0 list_1 Nat_0) Bool)
(declare-fun formula_0 (list_0 list_1) Bool)
(declare-fun dodeca_0 (list_2 Nat_0 list_1) Bool)
(declare-fun dodeca_1 (list_2 Nat_0 list_1) Bool)
(declare-fun dodeca_2 (list_2 Nat_0 list_1) Bool)
(declare-fun dodeca_3 (list_2 Nat_0 list_1) Bool)
(declare-fun dodeca_4 (list_2 Nat_0 list_1) Bool)
(declare-fun dodeca_5 (list_2 list_1) Bool)
(declare-fun colouring_0 (list_0 list_1 list_2) Bool)
(declare-fun and_0 (Bool_0 list_0) Bool)
(declare-fun colouring_1 (Bool_0 list_2 list_1) Bool)
(declare-fun x_17 (list_2 list_2 list_2) Bool)
(assert (forall ((x_169 Nat_0))
	(diseqNat_0 Z_10 (Z_11 x_169))))
(assert (forall ((x_170 Nat_0))
	(diseqNat_0 (Z_11 x_170) Z_10)))
(assert (forall ((x_171 Nat_0) (x_172 Nat_0))
	(=> (diseqNat_0 x_171 x_172) (diseqNat_0 (Z_11 x_171) (Z_11 x_172)))))
(assert (forall ((y_13 Nat_0))
	(add_0 y_13 Z_10 y_13)))
(assert (forall ((r_0 Nat_0) (x_115 Nat_0) (y_13 Nat_0))
	(=> (add_0 r_0 x_115 y_13) (add_0 (Z_11 r_0) (Z_11 x_115) y_13))))
(assert (forall ((y_13 Nat_0))
	(minus_0 Z_10 Z_10 y_13)))
(assert (forall ((r_0 Nat_0) (x_115 Nat_0) (y_13 Nat_0))
	(=> (minus_0 r_0 x_115 y_13) (minus_0 (Z_11 r_0) (Z_11 x_115) y_13))))
(assert (forall ((y_13 Nat_0))
	(le_0 Z_10 y_13)))
(assert (forall ((x_115 Nat_0) (y_13 Nat_0))
	(=> (le_0 x_115 y_13) (le_0 (Z_11 x_115) (Z_11 y_13)))))
(assert (forall ((y_13 Nat_0))
	(ge_0 y_13 Z_10)))
(assert (forall ((x_115 Nat_0) (y_13 Nat_0))
	(=> (ge_0 x_115 y_13) (ge_0 (Z_11 x_115) (Z_11 y_13)))))
(assert (forall ((y_13 Nat_0))
	(lt_0 Z_10 (Z_11 y_13))))
(assert (forall ((x_115 Nat_0) (y_13 Nat_0))
	(=> (lt_0 x_115 y_13) (lt_0 (Z_11 x_115) (Z_11 y_13)))))
(assert (forall ((y_13 Nat_0))
	(gt_0 (Z_11 y_13) Z_10)))
(assert (forall ((x_115 Nat_0) (y_13 Nat_0))
	(=> (gt_0 x_115 y_13) (gt_0 (Z_11 x_115) (Z_11 y_13)))))
(assert (and_1 false_0 false_0 false_0))
(assert (and_1 false_0 true_0 false_0))
(assert (and_1 false_0 false_0 true_0))
(assert (and_1 true_0 true_0 true_0))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0))
	(=> (gt_0 x_0 y_0) (primEnumFromTo_0 nil_1 x_0 y_0))))
(assert (forall ((x_116 Nat_0) (x_22 list_1) (x_0 Nat_0) (y_0 Nat_0))
	(=> (and (le_0 x_0 y_0) (primEnumFromTo_0 x_22 x_116 y_0) (add_0 x_116 (Z_11 Z_10) x_0)) (primEnumFromTo_0 (cons_1 x_0 x_22) x_0 y_0))))
(assert (forall ((z_0 Nat_0) (xs_0 list_1))
	(index_0 (Just_0 z_0) (cons_1 z_0 xs_0) Z_10)))
(assert (forall ((x_117 Nat_0) (x_24 Maybe_0) (z_0 Nat_0) (xs_0 list_1) (y_1 Nat_0))
	(=> (and (diseqNat_0 y_1 Z_10) (index_0 x_24 xs_0 x_117) (minus_0 x_117 y_1 (Z_11 Z_10))) (index_0 x_24 (cons_1 z_0 xs_0) y_1))))
(assert (forall ((y_1 Nat_0))
	(index_0 Nothing_0 nil_1 y_1)))
(assert (forall ((x_28 list_0) (y_2 Nat_0) (z_1 list_1))
	(=> (and (lt_0 y_2 (Z_11 (Z_11 (Z_11 Z_10)))) (formula_0 x_28 z_1)) (formula_0 (cons_0 true_0 x_28) (cons_1 y_2 z_1)))))
(assert (forall ((x_30 list_0) (y_2 Nat_0) (z_1 list_1))
	(=> (and (ge_0 y_2 (Z_11 (Z_11 (Z_11 Z_10)))) (formula_0 x_30 z_1)) (formula_0 (cons_0 false_0 x_30) (cons_1 y_2 z_1)))))
(assert (formula_0 nil_0 nil_1))
(assert (forall ((x_118 Nat_0) (x_119 Nat_0) (x_120 Nat_0) (x_121 Nat_0) (x_122 Nat_0) (x_123 Nat_0) (x_124 Nat_0) (x_33 list_2) (z_2 Nat_0) (x_4 list_1) (x_3 Nat_0))
	(=> (and (dodeca_0 x_33 x_3 x_4) (add_0 x_118 x_3 x_3) (add_0 x_119 x_118 x_3) (add_0 x_120 x_119 z_2) (add_0 x_121 x_3 x_3) (add_0 x_122 x_121 x_3) (add_0 x_123 (Z_11 Z_10) z_2) (add_0 x_124 x_122 x_123)) (dodeca_0 (cons_2 (pair_1 x_120 x_124) x_33) x_3 (cons_1 z_2 x_4)))))
(assert (forall ((x_3 Nat_0))
	(dodeca_0 nil_2 x_3 nil_1)))
(assert (forall ((x_125 Nat_0) (x_126 Nat_0) (x_127 Nat_0) (x_128 Nat_0) (x_129 Nat_0) (x_36 list_2) (z_3 Nat_0) (x_6 list_1) (x_5 Nat_0))
	(=> (and (dodeca_1 x_36 x_5 x_6) (add_0 x_125 x_5 x_5) (add_0 x_126 x_125 z_3) (add_0 x_127 x_5 x_5) (add_0 x_128 x_127 x_5) (add_0 x_129 x_128 z_3)) (dodeca_1 (cons_2 (pair_1 x_126 x_129) x_36) x_5 (cons_1 z_3 x_6)))))
(assert (forall ((x_5 Nat_0))
	(dodeca_1 nil_2 x_5 nil_1)))
(assert (forall ((x_130 Nat_0) (x_131 Nat_0) (x_132 Nat_0) (x_133 Nat_0) (x_39 list_2) (z_4 Nat_0) (x_8 list_1) (x_7 Nat_0))
	(=> (and (dodeca_2 x_39 x_7 x_8) (add_0 x_130 (Z_11 Z_10) z_4) (add_0 x_131 x_7 x_130) (add_0 x_132 x_7 x_7) (add_0 x_133 x_132 z_4)) (dodeca_2 (cons_2 (pair_1 x_131 x_133) x_39) x_7 (cons_1 z_4 x_8)))))
(assert (forall ((x_7 Nat_0))
	(dodeca_2 nil_2 x_7 nil_1)))
(assert (forall ((x_134 Nat_0) (x_135 Nat_0) (x_136 Nat_0) (x_42 list_2) (z_5 Nat_0) (x_10 list_1) (x_9 Nat_0))
	(=> (and (dodeca_3 x_42 x_9 x_10) (add_0 x_134 x_9 z_5) (add_0 x_135 x_9 x_9) (add_0 x_136 x_135 z_5)) (dodeca_3 (cons_2 (pair_1 x_134 x_136) x_42) x_9 (cons_1 z_5 x_10)))))
(assert (forall ((x_9 Nat_0))
	(dodeca_3 nil_2 x_9 nil_1)))
(assert (forall ((x_137 Nat_0) (x_45 list_2) (z_6 Nat_0) (x_12 list_1) (x_11 Nat_0))
	(=> (and (dodeca_4 x_45 x_11 x_12) (add_0 x_137 x_11 z_6)) (dodeca_4 (cons_2 (pair_1 z_6 x_137) x_45) x_11 (cons_1 z_6 x_12)))))
(assert (forall ((x_11 Nat_0))
	(dodeca_4 nil_2 x_11 nil_1)))
(assert (forall ((x_138 Nat_0) (x_48 list_2) (y_8 Nat_0) (z_7 list_1))
	(=> (and (dodeca_5 x_48 z_7) (add_0 x_138 (Z_11 Z_10) y_8)) (dodeca_5 (cons_2 (pair_1 y_8 x_138) x_48) (cons_1 y_8 z_7)))))
(assert (dodeca_5 nil_2 nil_1))
(assert (forall ((x_53 list_0) (c_0 Nat_0) (u_0 Nat_0) (v_0 Nat_0) (z_8 list_2) (a_0 list_1))
	(=> (and (colouring_0 x_53 a_0 z_8) (index_0 (Just_0 c_0) a_0 v_0) (index_0 (Just_0 c_0) a_0 u_0)) (colouring_0 (cons_0 false_0 x_53) a_0 (cons_2 (pair_1 u_0 v_0) z_8)))))
(assert (forall ((x_57 list_0) (c_1 Nat_0) (c_0 Nat_0) (u_0 Nat_0) (v_0 Nat_0) (z_8 list_2) (a_0 list_1))
	(=> (and (diseqNat_0 c_0 c_1) (colouring_0 x_57 a_0 z_8) (index_0 (Just_0 c_1) a_0 v_0) (index_0 (Just_0 c_0) a_0 u_0)) (colouring_0 (cons_0 true_0 x_57) a_0 (cons_2 (pair_1 u_0 v_0) z_8)))))
(assert (forall ((x_61 list_0) (c_0 Nat_0) (u_0 Nat_0) (v_0 Nat_0) (z_8 list_2) (a_0 list_1))
	(=> (and (colouring_0 x_61 a_0 z_8) (index_0 Nothing_0 a_0 v_0) (index_0 (Just_0 c_0) a_0 u_0)) (colouring_0 (cons_0 false_0 x_61) a_0 (cons_2 (pair_1 u_0 v_0) z_8)))))
(assert (forall ((x_64 list_0) (u_0 Nat_0) (v_0 Nat_0) (z_8 list_2) (a_0 list_1))
	(=> (and (colouring_0 x_64 a_0 z_8) (index_0 Nothing_0 a_0 u_0)) (colouring_0 (cons_0 false_0 x_64) a_0 (cons_2 (pair_1 u_0 v_0) z_8)))))
(assert (forall ((a_0 list_1))
	(colouring_0 nil_0 a_0 nil_2)))
(assert (forall ((x_114 Bool_0) (x_67 Bool_0) (y_10 Bool_0) (xs_1 list_0))
	(=> (and (and_0 x_67 xs_1) (and_1 x_114 y_10 x_67)) (and_0 x_114 (cons_0 y_10 xs_1)))))
(assert (and_0 true_0 nil_0))
(assert (forall ((x_69 Bool_0) (x_70 list_0) (x_16 list_2) (y_11 list_1))
	(=> (and (colouring_0 x_70 y_11 x_16) (and_0 x_69 x_70)) (colouring_1 x_69 x_16 y_11))))
(assert (forall ((x_73 list_2) (z_9 pair_0) (xs_2 list_2) (y_12 list_2))
	(=> (x_17 x_73 xs_2 y_12) (x_17 (cons_2 z_9 x_73) (cons_2 z_9 xs_2) y_12))))
(assert (forall ((x_74 list_2))
	(x_17 x_74 nil_2 x_74)))
(assert (forall ((x_164 Nat_0) (x_161 Nat_0) (x_162 Nat_0) (x_163 Nat_0) (x_155 Nat_0) (x_156 Nat_0) (x_157 Nat_0) (x_158 Nat_0) (x_159 Nat_0) (x_160 Nat_0) (x_154 Nat_0) (x_153 Nat_0) (x_152 Nat_0) (x_112 list_0) (x_94 list_1) (x_95 list_2) (x_96 list_1) (x_97 list_2) (x_98 list_1) (x_99 list_2) (x_100 list_1) (x_101 list_2) (x_102 list_1) (x_103 list_2) (x_104 list_1) (x_105 list_2) (x_106 list_2) (x_107 list_2) (x_108 list_2) (x_109 list_2) (x_110 list_2) (a_1 list_1))
	(=> (and true (formula_0 x_112 a_1) (and_0 true_0 x_112) (primEnumFromTo_0 x_94 Z_10 x_152) (dodeca_5 x_95 x_94) (primEnumFromTo_0 x_96 Z_10 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10)))))))) (dodeca_4 x_97 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) x_96) (primEnumFromTo_0 x_98 Z_10 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10)))))))) (dodeca_3 x_99 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) x_98) (primEnumFromTo_0 x_100 Z_10 x_153) (dodeca_2 x_101 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) x_100) (primEnumFromTo_0 x_102 Z_10 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10)))))))) (dodeca_1 x_103 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) x_102) (primEnumFromTo_0 x_104 Z_10 x_154) (dodeca_0 x_105 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) x_104) (x_17 x_106 x_103 (cons_2 (pair_1 x_158 x_160) x_105)) (x_17 x_107 (cons_2 (pair_1 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) x_163) x_101) x_106) (x_17 x_108 x_99 x_107) (x_17 x_109 x_97 x_108) (x_17 x_110 (cons_2 (pair_1 x_164 Z_10) x_95) x_109) (colouring_1 true_0 x_110 a_1) (minus_0 x_164 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) (Z_11 Z_10)) (add_0 x_161 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10)))))))) (minus_0 x_162 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) (Z_11 Z_10)) (add_0 x_163 x_161 x_162) (add_0 x_155 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10)))))))) (add_0 x_156 x_155 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10)))))))) (minus_0 x_157 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) (Z_11 Z_10)) (add_0 x_158 x_156 x_157) (add_0 x_159 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10)))))))) (add_0 x_160 x_159 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10)))))))) (minus_0 x_154 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) (Z_11 Z_10)) (minus_0 x_153 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) (Z_11 Z_10)) (minus_0 x_152 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 (Z_11 Z_10))))))) (Z_11 Z_10))) false)))
(check-sat)
(get-model)
