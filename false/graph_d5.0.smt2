(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_160 Nat_0) (x_159 Nat_0))
	(=> (= x_160 (S_0 x_159))
	    (unS_1 x_159 x_160))))
(assert (isZ_0 Z_0))
(assert (forall ((x_161 Nat_0))
	(isS_0 (S_0 x_161))))
(assert (forall ((x_162 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_162))))
(assert (forall ((x_163 Nat_0))
	(diseqNat_0 (S_0 x_163) Z_0)))
(assert (forall ((x_164 Nat_0) (x_165 Nat_0))
	(=> (diseqNat_0 x_164 x_165)
	    (diseqNat_0 (S_0 x_164) (S_0 x_165)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_13 Nat_0))
	(add_0 y_13 Z_0 y_13)))
(assert (forall ((x_108 Nat_0) (y_13 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_108 y_13)
	    (add_0 (S_0 r_0) (S_0 x_108) y_13))))
(assert (forall ((y_13 Nat_0))
	(minus_0 Z_0 Z_0 y_13)))
(assert (forall ((x_108 Nat_0) (y_13 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_108 y_13)
	    (minus_0 (S_0 r_0) (S_0 x_108) y_13))))
(assert (forall ((y_13 Nat_0))
	(le_0 Z_0 y_13)))
(assert (forall ((x_108 Nat_0) (y_13 Nat_0))
	(=> (le_0 x_108 y_13)
	    (le_0 (S_0 x_108) (S_0 y_13)))))
(assert (forall ((y_13 Nat_0))
	(ge_0 y_13 Z_0)))
(assert (forall ((x_108 Nat_0) (y_13 Nat_0))
	(=> (ge_0 x_108 y_13)
	    (ge_0 (S_0 x_108) (S_0 y_13)))))
(assert (forall ((y_13 Nat_0))
	(lt_0 Z_0 (S_0 y_13))))
(assert (forall ((x_108 Nat_0) (y_13 Nat_0))
	(=> (lt_0 x_108 y_13)
	    (lt_0 (S_0 x_108) (S_0 y_13)))))
(assert (forall ((y_13 Nat_0))
	(gt_0 (S_0 y_13) Z_0)))
(assert (forall ((x_108 Nat_0) (y_13 Nat_0))
	(=> (gt_0 x_108 y_13)
	    (gt_0 (S_0 x_108) (S_0 y_13)))))
(assert (forall ((y_13 Nat_0))
	(mult_0 Z_0 Z_0 y_13)))
(assert (forall ((x_108 Nat_0) (y_13 Nat_0) (r_0 Nat_0) (z_10 Nat_0))
	(=>	(and (mult_0 r_0 x_108 y_13)
			(add_0 z_10 r_0 y_13))
		(mult_0 z_10 (S_0 x_108) y_13))))
(assert (forall ((x_108 Nat_0) (y_13 Nat_0))
	(=> (lt_0 x_108 y_13)
	    (div_0 Z_0 x_108 y_13))))
(assert (forall ((x_108 Nat_0) (y_13 Nat_0) (r_0 Nat_0) (z_10 Nat_0))
	(=>	(and (ge_0 x_108 y_13)
			(minus_0 z_10 x_108 y_13)
			(div_0 r_0 z_10 y_13))
		(div_0 (S_0 r_0) x_108 y_13))))
(assert (forall ((x_108 Nat_0) (y_13 Nat_0))
	(=> (lt_0 x_108 y_13)
	    (mod_0 x_108 x_108 y_13))))
(assert (forall ((x_108 Nat_0) (y_13 Nat_0) (r_0 Nat_0) (z_10 Nat_0))
	(=>	(and (ge_0 x_108 y_13)
			(minus_0 z_10 x_108 y_13)
			(mod_0 r_0 z_10 y_13))
		(mod_0 r_0 x_108 y_13))))
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Nat_0)))))
(declare-fun diseqpair_0 (pair_0 pair_0) Bool)
(declare-fun projpair_2 (Nat_0 pair_0) Bool)
(declare-fun projpair_3 (Nat_0 pair_0) Bool)
(declare-fun ispair_0 (pair_0) Bool)
(assert (forall ((x_168 pair_0) (x_166 Nat_0) (x_167 Nat_0))
	(=> (= x_168 (pair_1 x_166 x_167))
	    (projpair_2 x_166 x_168))))
(assert (forall ((x_168 pair_0) (x_166 Nat_0) (x_167 Nat_0))
	(=> (= x_168 (pair_1 x_166 x_167))
	    (projpair_3 x_167 x_168))))
(assert (forall ((x_169 Nat_0) (x_170 Nat_0))
	(ispair_0 (pair_1 x_169 x_170))))
(assert (forall ((x_171 Nat_0) (x_172 Nat_0) (x_173 Nat_0) (x_174 Nat_0))
	(=> (diseqNat_0 x_171 x_173)
	    (diseqpair_0 (pair_1 x_171 x_172) (pair_1 x_173 x_174)))))
(assert (forall ((x_171 Nat_0) (x_172 Nat_0) (x_173 Nat_0) (x_174 Nat_0))
	(=> (diseqNat_0 x_172 x_174)
	    (diseqpair_0 (pair_1 x_171 x_172) (pair_1 x_173 x_174)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Bool) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_3 (Bool list_0) Bool)
(declare-fun tail_3 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_178 list_0) (x_176 Bool) (x_177 list_0))
	(=> (= x_178 (cons_0 x_176 x_177))
	    (head_3 x_176 x_178))))
(assert (forall ((x_178 list_0) (x_176 Bool) (x_177 list_0))
	(=> (= x_178 (cons_0 x_176 x_177))
	    (tail_3 x_177 x_178))))
(assert (isnil_0 nil_0))
(assert (forall ((x_179 Bool) (x_180 list_0))
	(iscons_0 (cons_0 x_179 x_180))))
(assert (forall ((x_181 Bool) (x_182 list_0))
	(diseqlist_0 nil_0 (cons_0 x_181 x_182))))
(assert (forall ((x_183 Bool) (x_184 list_0))
	(diseqlist_0 (cons_0 x_183 x_184) nil_0)))
(assert (forall ((x_185 Bool) (x_186 list_0) (x_187 Bool) (x_188 list_0))
	(=> (not (= x_185 x_187))
	    (diseqlist_0 (cons_0 x_185 x_186) (cons_0 x_187 x_188)))))
(assert (forall ((x_185 Bool) (x_186 list_0) (x_187 Bool) (x_188 list_0))
	(=> (diseqlist_0 x_186 x_188)
	    (diseqlist_0 (cons_0 x_185 x_186) (cons_0 x_187 x_188)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 Nat_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_4 (Nat_0 list_1) Bool)
(declare-fun tail_4 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_192 list_1) (x_190 Nat_0) (x_191 list_1))
	(=> (= x_192 (cons_1 x_190 x_191))
	    (head_4 x_190 x_192))))
(assert (forall ((x_192 list_1) (x_190 Nat_0) (x_191 list_1))
	(=> (= x_192 (cons_1 x_190 x_191))
	    (tail_4 x_191 x_192))))
(assert (isnil_1 nil_1))
(assert (forall ((x_193 Nat_0) (x_194 list_1))
	(iscons_1 (cons_1 x_193 x_194))))
(assert (forall ((x_195 Nat_0) (x_196 list_1))
	(diseqlist_1 nil_1 (cons_1 x_195 x_196))))
(assert (forall ((x_197 Nat_0) (x_198 list_1))
	(diseqlist_1 (cons_1 x_197 x_198) nil_1)))
(assert (forall ((x_199 Nat_0) (x_200 list_1) (x_201 Nat_0) (x_202 list_1))
	(=> (diseqNat_0 x_199 x_201)
	    (diseqlist_1 (cons_1 x_199 x_200) (cons_1 x_201 x_202)))))
(assert (forall ((x_199 Nat_0) (x_200 list_1) (x_201 Nat_0) (x_202 list_1))
	(=> (diseqlist_1 x_200 x_202)
	    (diseqlist_1 (cons_1 x_199 x_200) (cons_1 x_201 x_202)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 pair_0) (tail_2 list_2)))))
(declare-fun diseqlist_2 (list_2 list_2) Bool)
(declare-fun head_5 (pair_0 list_2) Bool)
(declare-fun tail_5 (list_2 list_2) Bool)
(declare-fun isnil_2 (list_2) Bool)
(declare-fun iscons_2 (list_2) Bool)
(assert (forall ((x_206 list_2) (x_204 pair_0) (x_205 list_2))
	(=> (= x_206 (cons_2 x_204 x_205))
	    (head_5 x_204 x_206))))
(assert (forall ((x_206 list_2) (x_204 pair_0) (x_205 list_2))
	(=> (= x_206 (cons_2 x_204 x_205))
	    (tail_5 x_205 x_206))))
(assert (isnil_2 nil_2))
(assert (forall ((x_207 pair_0) (x_208 list_2))
	(iscons_2 (cons_2 x_207 x_208))))
(assert (forall ((x_209 pair_0) (x_210 list_2))
	(diseqlist_2 nil_2 (cons_2 x_209 x_210))))
(assert (forall ((x_211 pair_0) (x_212 list_2))
	(diseqlist_2 (cons_2 x_211 x_212) nil_2)))
(assert (forall ((x_213 pair_0) (x_214 list_2) (x_215 pair_0) (x_216 list_2))
	(=> (diseqpair_0 x_213 x_215)
	    (diseqlist_2 (cons_2 x_213 x_214) (cons_2 x_215 x_216)))))
(assert (forall ((x_213 pair_0) (x_214 list_2) (x_215 pair_0) (x_216 list_2))
	(=> (diseqlist_2 x_214 x_216)
	    (diseqlist_2 (cons_2 x_213 x_214) (cons_2 x_215 x_216)))))
(declare-datatypes ((Maybe_0 0)) (((Nothing_0 ) (Just_0 (projJust_0 Nat_0)))))
(declare-fun diseqMaybe_0 (Maybe_0 Maybe_0) Bool)
(declare-fun projJust_1 (Nat_0 Maybe_0) Bool)
(declare-fun isNothing_0 (Maybe_0) Bool)
(declare-fun isJust_0 (Maybe_0) Bool)
(assert (forall ((x_219 Maybe_0) (x_218 Nat_0))
	(=> (= x_219 (Just_0 x_218))
	    (projJust_1 x_218 x_219))))
(assert (isNothing_0 Nothing_0))
(assert (forall ((x_220 Nat_0))
	(isJust_0 (Just_0 x_220))))
(assert (forall ((x_221 Nat_0))
	(diseqMaybe_0 Nothing_0 (Just_0 x_221))))
(assert (forall ((x_222 Nat_0))
	(diseqMaybe_0 (Just_0 x_222) Nothing_0)))
(assert (forall ((x_223 Nat_0) (x_224 Nat_0))
	(=> (diseqNat_0 x_223 x_224)
	    (diseqMaybe_0 (Just_0 x_223) (Just_0 x_224)))))
(declare-fun primEnumFromTo_0 (list_1 Nat_0 Nat_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_20 list_1))
	(=>	(and (= x_20 nil_1)
			(gt_0 x_0 y_0))
		(primEnumFromTo_0 x_20 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (x_21 list_1) (x_22 list_1) (x_109 Nat_0))
	(=>	(and (= x_21 (cons_1 x_0 x_22))
			(primEnumFromTo_0 x_22 x_109 y_0)
			(le_0 x_0 y_0)
			(add_0 x_109 (S_0 Z_0) x_0))
		(primEnumFromTo_0 x_21 x_0 y_0))))
(declare-fun index_0 (Maybe_0 list_1 Nat_0) Bool)
(assert (forall ((x_1 list_1) (y_1 Nat_0) (z_0 Nat_0) (xs_0 list_1) (x_23 Maybe_0))
	(=>	(and (= x_23 (Just_0 z_0))
			(= x_1 (cons_1 z_0 xs_0))
			(= y_1 Z_0))
		(index_0 x_23 x_1 y_1))))
(assert (forall ((x_1 list_1) (y_1 Nat_0) (z_0 Nat_0) (xs_0 list_1) (x_24 Maybe_0) (x_25 Maybe_0) (x_110 Nat_0))
	(=>	(and (= x_24 x_25)
			(index_0 x_25 xs_0 x_110)
			(= x_1 (cons_1 z_0 xs_0))
			(diseqNat_0 y_1 Z_0)
			(minus_0 x_110 y_1 (S_0 Z_0)))
		(index_0 x_24 x_1 y_1))))
(assert (forall ((x_1 list_1) (y_1 Nat_0) (x_26 Maybe_0))
	(=>	(and (= x_26 Nothing_0)
			(= x_1 nil_1))
		(index_0 x_26 x_1 y_1))))
(declare-fun formula_0 (list_0 list_1) Bool)
(assert (forall ((x_2 list_1) (y_2 Nat_0) (z_1 list_1) (x_27 list_0) (x_28 list_0))
	(=>	(and (= x_27 (cons_0 (lt_0 y_2 (S_0 (S_0 (S_0 Z_0)))) x_28))
			(formula_0 x_28 z_1)
			(= x_2 (cons_1 y_2 z_1)))
		(formula_0 x_27 x_2))))
(assert (forall ((x_2 list_1) (x_29 list_0))
	(=>	(and (= x_29 nil_0)
			(= x_2 nil_1))
		(formula_0 x_29 x_2))))
(declare-fun dodeca_0 (list_2 Nat_0 list_1) Bool)
(assert (forall ((x_3 Nat_0) (y_3 list_1) (z_2 Nat_0) (x_4 list_1) (x_30 list_2) (x_31 list_2) (x_111 Nat_0) (x_112 Nat_0) (x_113 Nat_0) (x_114 Nat_0) (x_115 Nat_0) (x_116 Nat_0) (x_117 Nat_0))
	(=>	(and (= x_30 (cons_2 (pair_1 x_113 x_117) x_31))
			(dodeca_0 x_31 x_3 x_4)
			(= y_3 (cons_1 z_2 x_4))
			(add_0 x_111 x_3 x_3)
			(add_0 x_112 x_111 x_3)
			(add_0 x_113 x_112 z_2)
			(add_0 x_114 x_3 x_3)
			(add_0 x_115 x_114 x_3)
			(add_0 x_116 (S_0 Z_0) z_2)
			(add_0 x_117 x_115 x_116))
		(dodeca_0 x_30 x_3 y_3))))
(assert (forall ((x_3 Nat_0) (y_3 list_1) (x_32 list_2))
	(=>	(and (= x_32 nil_2)
			(= y_3 nil_1))
		(dodeca_0 x_32 x_3 y_3))))
(declare-fun dodeca_1 (list_2 Nat_0 list_1) Bool)
(assert (forall ((x_5 Nat_0) (y_4 list_1) (z_3 Nat_0) (x_6 list_1) (x_33 list_2) (x_34 list_2) (x_118 Nat_0) (x_119 Nat_0) (x_120 Nat_0) (x_121 Nat_0) (x_122 Nat_0))
	(=>	(and (= x_33 (cons_2 (pair_1 x_119 x_122) x_34))
			(dodeca_1 x_34 x_5 x_6)
			(= y_4 (cons_1 z_3 x_6))
			(add_0 x_118 x_5 x_5)
			(add_0 x_119 x_118 z_3)
			(add_0 x_120 x_5 x_5)
			(add_0 x_121 x_120 x_5)
			(add_0 x_122 x_121 z_3))
		(dodeca_1 x_33 x_5 y_4))))
(assert (forall ((x_5 Nat_0) (y_4 list_1) (x_35 list_2))
	(=>	(and (= x_35 nil_2)
			(= y_4 nil_1))
		(dodeca_1 x_35 x_5 y_4))))
(declare-fun dodeca_2 (list_2 Nat_0 list_1) Bool)
(assert (forall ((x_7 Nat_0) (y_5 list_1) (z_4 Nat_0) (x_8 list_1) (x_36 list_2) (x_37 list_2) (x_123 Nat_0) (x_124 Nat_0) (x_125 Nat_0) (x_126 Nat_0))
	(=>	(and (= x_36 (cons_2 (pair_1 x_124 x_126) x_37))
			(dodeca_2 x_37 x_7 x_8)
			(= y_5 (cons_1 z_4 x_8))
			(add_0 x_123 (S_0 Z_0) z_4)
			(add_0 x_124 x_7 x_123)
			(add_0 x_125 x_7 x_7)
			(add_0 x_126 x_125 z_4))
		(dodeca_2 x_36 x_7 y_5))))
(assert (forall ((x_7 Nat_0) (y_5 list_1) (x_38 list_2))
	(=>	(and (= x_38 nil_2)
			(= y_5 nil_1))
		(dodeca_2 x_38 x_7 y_5))))
(declare-fun dodeca_3 (list_2 Nat_0 list_1) Bool)
(assert (forall ((x_9 Nat_0) (y_6 list_1) (z_5 Nat_0) (x_10 list_1) (x_39 list_2) (x_40 list_2) (x_127 Nat_0) (x_128 Nat_0) (x_129 Nat_0))
	(=>	(and (= x_39 (cons_2 (pair_1 x_127 x_129) x_40))
			(dodeca_3 x_40 x_9 x_10)
			(= y_6 (cons_1 z_5 x_10))
			(add_0 x_127 x_9 z_5)
			(add_0 x_128 x_9 x_9)
			(add_0 x_129 x_128 z_5))
		(dodeca_3 x_39 x_9 y_6))))
(assert (forall ((x_9 Nat_0) (y_6 list_1) (x_41 list_2))
	(=>	(and (= x_41 nil_2)
			(= y_6 nil_1))
		(dodeca_3 x_41 x_9 y_6))))
(declare-fun dodeca_4 (list_2 Nat_0 list_1) Bool)
(assert (forall ((x_11 Nat_0) (y_7 list_1) (z_6 Nat_0) (x_12 list_1) (x_42 list_2) (x_43 list_2) (x_130 Nat_0))
	(=>	(and (= x_42 (cons_2 (pair_1 z_6 x_130) x_43))
			(dodeca_4 x_43 x_11 x_12)
			(= y_7 (cons_1 z_6 x_12))
			(add_0 x_130 x_11 z_6))
		(dodeca_4 x_42 x_11 y_7))))
(assert (forall ((x_11 Nat_0) (y_7 list_1) (x_44 list_2))
	(=>	(and (= x_44 nil_2)
			(= y_7 nil_1))
		(dodeca_4 x_44 x_11 y_7))))
(declare-fun dodeca_5 (list_2 list_1) Bool)
(assert (forall ((x_13 list_1) (y_8 Nat_0) (z_7 list_1) (x_45 list_2) (x_46 list_2) (x_131 Nat_0))
	(=>	(and (= x_45 (cons_2 (pair_1 y_8 x_131) x_46))
			(dodeca_5 x_46 z_7)
			(= x_13 (cons_1 y_8 z_7))
			(add_0 x_131 (S_0 Z_0) y_8))
		(dodeca_5 x_45 x_13))))
(assert (forall ((x_13 list_1) (x_47 list_2))
	(=>	(and (= x_47 nil_2)
			(= x_13 nil_1))
		(dodeca_5 x_47 x_13))))
(declare-fun colouring_0 (list_0 list_1 list_2) Bool)
(assert (forall ((a_0 list_1) (x_14 list_2) (y_9 pair_0) (z_8 list_2) (u_0 Nat_0) (v_0 Nat_0) (c_0 Nat_0) (c_1 Nat_0) (x_50 list_0) (x_51 list_0) (x_48 Maybe_0) (x_49 Maybe_0))
	(=>	(and (= x_50 (cons_0 (distinct c_0 c_1) x_51))
			(colouring_0 x_51 a_0 z_8)
			(= x_14 (cons_2 y_9 z_8))
			(= y_9 (pair_1 u_0 v_0))
			(= x_48 (Just_0 c_0))
			(= x_49 (Just_0 c_1))
			(index_0 x_48 a_0 u_0)
			(index_0 x_49 a_0 v_0))
		(colouring_0 x_50 a_0 x_14))))
(assert (forall ((a_0 list_1) (x_14 list_2) (y_9 pair_0) (z_8 list_2) (u_0 Nat_0) (v_0 Nat_0) (c_0 Nat_0) (x_54 list_0) (x_55 list_0) (x_52 Maybe_0) (x_53 Maybe_0))
	(=>	(and (= x_54 (cons_0 false x_55))
			(colouring_0 x_55 a_0 z_8)
			(= x_14 (cons_2 y_9 z_8))
			(= y_9 (pair_1 u_0 v_0))
			(= x_52 (Just_0 c_0))
			(= x_53 Nothing_0)
			(index_0 x_52 a_0 u_0)
			(index_0 x_53 a_0 v_0))
		(colouring_0 x_54 a_0 x_14))))
(assert (forall ((a_0 list_1) (x_14 list_2) (y_9 pair_0) (z_8 list_2) (u_0 Nat_0) (v_0 Nat_0) (x_57 list_0) (x_58 list_0) (x_56 Maybe_0))
	(=>	(and (= x_57 (cons_0 false x_58))
			(colouring_0 x_58 a_0 z_8)
			(= x_14 (cons_2 y_9 z_8))
			(= y_9 (pair_1 u_0 v_0))
			(= x_56 Nothing_0)
			(index_0 x_56 a_0 u_0))
		(colouring_0 x_57 a_0 x_14))))
(assert (forall ((a_0 list_1) (x_14 list_2) (x_59 list_0))
	(=>	(and (= x_59 nil_0)
			(= x_14 nil_2))
		(colouring_0 x_59 a_0 x_14))))
(declare-fun and_0 (Bool list_0) Bool)
(assert (forall ((x_15 list_0) (y_10 Bool) (xs_1 list_0) (x_60 Bool) (x_61 Bool))
	(=>	(and (= x_60 (and y_10 x_61))
			(and_0 x_61 xs_1)
			(= x_15 (cons_0 y_10 xs_1)))
		(and_0 x_60 x_15))))
(assert (forall ((x_15 list_0) (x_62 Bool))
	(=>	(and (= x_62 true)
			(= x_15 nil_0))
		(and_0 x_62 x_15))))
(declare-fun colouring_1 (Bool list_2 list_1) Bool)
(assert (forall ((x_16 list_2) (y_11 list_1) (x_63 Bool) (x_64 list_0) (x_65 Bool))
	(=>	(and (= x_63 x_65)
			(colouring_0 x_64 y_11 x_16)
			(and_0 x_65 x_64))
		(colouring_1 x_63 x_16 y_11))))
(declare-fun x_17 (list_2 list_2 list_2) Bool)
(assert (forall ((x_18 list_2) (y_12 list_2) (z_9 pair_0) (xs_2 list_2) (x_66 list_2) (x_67 list_2))
	(=>	(and (= x_66 (cons_2 z_9 x_67))
			(x_17 x_67 xs_2 y_12)
			(= x_18 (cons_2 z_9 xs_2)))
		(x_17 x_66 x_18 y_12))))
(assert (forall ((x_18 list_2) (y_12 list_2) (x_68 list_2))
	(=>	(and (= x_68 y_12)
			(= x_18 nil_2))
		(x_17 x_68 x_18 y_12))))
(declare-fun dodeca_6 (list_2 Nat_0) Bool)
(assert (forall ((x_19 Nat_0) (x_69 list_2))
	(=>	(and (= x_69 nil_2)
			(= x_19 Z_0))
		(dodeca_6 x_69 x_19))))
(assert (forall ((x_19 Nat_0) (x_70 list_2) (x_71 list_1) (x_72 list_2) (x_73 list_1) (x_74 list_2) (x_75 list_1) (x_76 list_2) (x_77 list_1) (x_78 list_2) (x_79 list_1) (x_80 list_2) (x_81 list_1) (x_82 list_2) (x_83 list_2) (x_84 list_2) (x_85 list_2) (x_86 list_2) (x_87 list_2) (x_132 Nat_0) (x_133 Nat_0) (x_134 Nat_0) (x_135 Nat_0) (x_136 Nat_0) (x_137 Nat_0) (x_138 Nat_0) (x_139 Nat_0) (x_140 Nat_0) (x_141 Nat_0) (x_142 Nat_0) (x_143 Nat_0) (x_144 Nat_0))
	(=>	(and (= x_70 x_87)
			(primEnumFromTo_0 x_71 Z_0 x_132)
			(dodeca_5 x_72 x_71)
			(primEnumFromTo_0 x_73 Z_0 x_19)
			(dodeca_4 x_74 x_19 x_73)
			(primEnumFromTo_0 x_75 Z_0 x_19)
			(dodeca_3 x_76 x_19 x_75)
			(primEnumFromTo_0 x_77 Z_0 x_133)
			(dodeca_2 x_78 x_19 x_77)
			(primEnumFromTo_0 x_79 Z_0 x_19)
			(dodeca_1 x_80 x_19 x_79)
			(primEnumFromTo_0 x_81 Z_0 x_134)
			(dodeca_0 x_82 x_19 x_81)
			(x_17 x_83 x_80 (cons_2 (pair_1 x_138 x_140) x_82))
			(x_17 x_84 (cons_2 (pair_1 x_19 x_143) x_78) x_83)
			(x_17 x_85 x_76 x_84)
			(x_17 x_86 x_74 x_85)
			(x_17 x_87 (cons_2 (pair_1 x_144 Z_0) x_72) x_86)
			(diseqNat_0 x_19 Z_0)
			(minus_0 x_132 x_19 (S_0 Z_0))
			(minus_0 x_133 x_19 (S_0 Z_0))
			(minus_0 x_134 x_19 (S_0 Z_0))
			(add_0 x_135 x_19 x_19)
			(add_0 x_136 x_135 x_19)
			(minus_0 x_137 x_19 (S_0 Z_0))
			(add_0 x_138 x_136 x_137)
			(add_0 x_139 x_19 x_19)
			(add_0 x_140 x_139 x_19)
			(add_0 x_141 x_19 x_19)
			(minus_0 x_142 x_19 (S_0 Z_0))
			(add_0 x_143 x_141 x_142)
			(minus_0 x_144 x_19 (S_0 Z_0)))
		(dodeca_6 x_70 x_19))))
(assert (forall ((a_1 list_1) (x_88 list_1) (x_89 list_2) (x_90 list_1) (x_91 list_2) (x_92 list_1) (x_93 list_2) (x_94 list_1) (x_95 list_2) (x_96 list_1) (x_97 list_2) (x_98 list_1) (x_99 list_2) (x_100 list_2) (x_101 list_2) (x_102 list_2) (x_103 list_2) (x_104 list_2) (x_105 Bool) (x_106 list_0) (x_107 Bool) (x_145 Nat_0) (x_146 Nat_0) (x_147 Nat_0) (x_148 Nat_0) (x_149 Nat_0) (x_150 Nat_0) (x_151 Nat_0) (x_152 Nat_0) (x_153 Nat_0) (x_154 Nat_0) (x_155 Nat_0) (x_156 Nat_0) (x_157 Nat_0))
	(=>	(and true
			(= x_105 true)
			(= x_107 true)
			(primEnumFromTo_0 x_88 Z_0 x_145)
			(dodeca_5 x_89 x_88)
			(primEnumFromTo_0 x_90 Z_0 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))))
			(dodeca_4 x_91 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) x_90)
			(primEnumFromTo_0 x_92 Z_0 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))))
			(dodeca_3 x_93 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) x_92)
			(primEnumFromTo_0 x_94 Z_0 x_146)
			(dodeca_2 x_95 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) x_94)
			(primEnumFromTo_0 x_96 Z_0 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))))
			(dodeca_1 x_97 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) x_96)
			(primEnumFromTo_0 x_98 Z_0 x_147)
			(dodeca_0 x_99 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) x_98)
			(x_17 x_100 x_97 (cons_2 (pair_1 x_151 x_153) x_99))
			(x_17 x_101 (cons_2 (pair_1 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) x_156) x_95) x_100)
			(x_17 x_102 x_93 x_101)
			(x_17 x_103 x_91 x_102)
			(x_17 x_104 (cons_2 (pair_1 x_157 Z_0) x_89) x_103)
			(colouring_1 x_105 x_104 a_1)
			(formula_0 x_106 a_1)
			(and_0 x_107 x_106)
			(minus_0 x_145 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (S_0 Z_0))
			(minus_0 x_146 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (S_0 Z_0))
			(minus_0 x_147 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (S_0 Z_0))
			(add_0 x_148 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))))
			(add_0 x_149 x_148 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))))
			(minus_0 x_150 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (S_0 Z_0))
			(add_0 x_151 x_149 x_150)
			(add_0 x_152 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))))
			(add_0 x_153 x_152 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))))
			(add_0 x_154 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))))
			(minus_0 x_155 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (S_0 Z_0))
			(add_0 x_156 x_154 x_155)
			(minus_0 x_157 (S_0 (S_0 (S_0 (S_0 (S_0 Z_0))))) (S_0 Z_0)))
		false)))
(check-sat)
