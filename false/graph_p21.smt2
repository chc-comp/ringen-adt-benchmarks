(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_7 ) (Z_8 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-datatypes ((Bool_0 0)) (((false_0 ) (true_0 ))))
(declare-fun and_1 (Bool_0 Bool_0 Bool_0) Bool)
(declare-datatypes ((pair_0 0)) (((pair_1 (projpair_0 Nat_0) (projpair_1 Nat_0)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Bool_0) (tail_0 list_0)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 Nat_0) (tail_1 list_1)))))
(declare-datatypes ((list_2 0)) (((nil_2 ) (cons_2 (head_2 pair_0) (tail_2 list_2)))))
(declare-datatypes ((list_3 0)) (((nil_3 ) (cons_3 (head_3 list_2) (tail_3 list_3)))))
(declare-datatypes ((Maybe_0 0)) (((Nothing_0 ) (Just_0 (projJust_0 Nat_0)))))
(declare-fun primEnumFromTo_0 (list_1 Nat_0 Nat_0) Bool)
(declare-fun petersen_0 (list_2 Nat_0 list_1) Bool)
(declare-fun petersen_1 (list_2 list_1) Bool)
(declare-fun petersen_2 (list_3 Nat_0 list_2) Bool)
(declare-fun index_0 (Maybe_0 list_1 Nat_0) Bool)
(declare-fun formula_0 (list_0 list_1) Bool)
(declare-fun colouring_0 (list_0 list_1 list_2) Bool)
(declare-fun and_0 (Bool_0 list_0) Bool)
(declare-fun colouring_1 (Bool_0 list_2 list_1) Bool)
(declare-fun x_11 (list_2 list_2 list_2) Bool)
(declare-fun concat_0 (list_2 list_3) Bool)
(assert (forall ((x_100 Nat_0))
	(diseqNat_0 Z_7 (Z_8 x_100))))
(assert (forall ((x_101 Nat_0))
	(diseqNat_0 (Z_8 x_101) Z_7)))
(assert (forall ((x_102 Nat_0) (x_103 Nat_0))
	(=> (diseqNat_0 x_102 x_103) (diseqNat_0 (Z_8 x_102) (Z_8 x_103)))))
(assert (forall ((y_11 Nat_0))
	(add_0 y_11 Z_7 y_11)))
(assert (forall ((r_0 Nat_0) (x_85 Nat_0) (y_11 Nat_0))
	(=> (add_0 r_0 x_85 y_11) (add_0 (Z_8 r_0) (Z_8 x_85) y_11))))
(assert (forall ((y_11 Nat_0))
	(minus_0 Z_7 Z_7 y_11)))
(assert (forall ((r_0 Nat_0) (x_85 Nat_0) (y_11 Nat_0))
	(=> (minus_0 r_0 x_85 y_11) (minus_0 (Z_8 r_0) (Z_8 x_85) y_11))))
(assert (forall ((y_11 Nat_0))
	(le_0 Z_7 y_11)))
(assert (forall ((x_85 Nat_0) (y_11 Nat_0))
	(=> (le_0 x_85 y_11) (le_0 (Z_8 x_85) (Z_8 y_11)))))
(assert (forall ((y_11 Nat_0))
	(ge_0 y_11 Z_7)))
(assert (forall ((x_85 Nat_0) (y_11 Nat_0))
	(=> (ge_0 x_85 y_11) (ge_0 (Z_8 x_85) (Z_8 y_11)))))
(assert (forall ((y_11 Nat_0))
	(lt_0 Z_7 (Z_8 y_11))))
(assert (forall ((x_85 Nat_0) (y_11 Nat_0))
	(=> (lt_0 x_85 y_11) (lt_0 (Z_8 x_85) (Z_8 y_11)))))
(assert (forall ((y_11 Nat_0))
	(gt_0 (Z_8 y_11) Z_7)))
(assert (forall ((x_85 Nat_0) (y_11 Nat_0))
	(=> (gt_0 x_85 y_11) (gt_0 (Z_8 x_85) (Z_8 y_11)))))
(assert (and_1 false_0 false_0 false_0))
(assert (and_1 false_0 true_0 false_0))
(assert (and_1 false_0 false_0 true_0))
(assert (and_1 true_0 true_0 true_0))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0))
	(=> (gt_0 x_0 y_0) (primEnumFromTo_0 nil_1 x_0 y_0))))
(assert (forall ((x_86 Nat_0) (x_17 list_1) (x_0 Nat_0) (y_0 Nat_0))
	(=> (and (le_0 x_0 y_0) (primEnumFromTo_0 x_17 x_86 y_0) (add_0 x_86 (Z_8 Z_7) x_0)) (primEnumFromTo_0 (cons_1 x_0 x_17) x_0 y_0))))
(assert (forall ((x_87 Nat_0) (x_19 list_2) (z_0 Nat_0) (x_2 list_1) (x_1 Nat_0))
	(=> (and (petersen_0 x_19 x_1 x_2) (add_0 x_87 x_1 z_0)) (petersen_0 (cons_2 (pair_1 z_0 x_87) x_19) x_1 (cons_1 z_0 x_2)))))
(assert (forall ((x_1 Nat_0))
	(petersen_0 nil_2 x_1 nil_1)))
(assert (forall ((x_88 Nat_0) (x_22 list_2) (y_2 Nat_0) (z_1 list_1))
	(=> (and (petersen_1 x_22 z_1) (add_0 x_88 (Z_8 Z_7) y_2)) (petersen_1 (cons_2 (pair_1 y_2 x_88) x_22) (cons_1 y_2 z_1)))))
(assert (petersen_1 nil_2 nil_1))
(assert (forall ((x_89 Nat_0) (x_90 Nat_0) (x_25 list_3) (u_0 Nat_0) (v_0 Nat_0) (x_5 list_2) (x_4 Nat_0))
	(=> (and (petersen_2 x_25 x_4 x_5) (add_0 x_89 x_4 u_0) (add_0 x_90 x_4 v_0)) (petersen_2 (cons_3 (cons_2 (pair_1 u_0 v_0) (cons_2 (pair_1 x_89 x_90) nil_2)) x_25) x_4 (cons_2 (pair_1 u_0 v_0) x_5)))))
(assert (forall ((x_4 Nat_0))
	(petersen_2 nil_3 x_4 nil_2)))
(assert (forall ((z_3 Nat_0) (xs_0 list_1))
	(index_0 (Just_0 z_3) (cons_1 z_3 xs_0) Z_7)))
(assert (forall ((x_91 Nat_0) (x_28 Maybe_0) (z_3 Nat_0) (xs_0 list_1) (y_4 Nat_0))
	(=> (and (diseqNat_0 y_4 Z_7) (index_0 x_28 xs_0 x_91) (minus_0 x_91 y_4 (Z_8 Z_7))) (index_0 x_28 (cons_1 z_3 xs_0) y_4))))
(assert (forall ((y_4 Nat_0))
	(index_0 Nothing_0 nil_1 y_4)))
(assert (forall ((x_32 list_0) (y_5 Nat_0) (z_4 list_1))
	(=> (and (lt_0 y_5 (Z_8 (Z_8 (Z_8 Z_7)))) (formula_0 x_32 z_4)) (formula_0 (cons_0 true_0 x_32) (cons_1 y_5 z_4)))))
(assert (forall ((x_34 list_0) (y_5 Nat_0) (z_4 list_1))
	(=> (and (ge_0 y_5 (Z_8 (Z_8 (Z_8 Z_7)))) (formula_0 x_34 z_4)) (formula_0 (cons_0 false_0 x_34) (cons_1 y_5 z_4)))))
(assert (formula_0 nil_0 nil_1))
(assert (forall ((x_39 list_0) (c_0 Nat_0) (u_1 Nat_0) (v_1 Nat_0) (z_5 list_2) (a_0 list_1))
	(=> (and (colouring_0 x_39 a_0 z_5) (index_0 (Just_0 c_0) a_0 v_1) (index_0 (Just_0 c_0) a_0 u_1)) (colouring_0 (cons_0 false_0 x_39) a_0 (cons_2 (pair_1 u_1 v_1) z_5)))))
(assert (forall ((x_43 list_0) (c_1 Nat_0) (c_0 Nat_0) (u_1 Nat_0) (v_1 Nat_0) (z_5 list_2) (a_0 list_1))
	(=> (and (diseqNat_0 c_0 c_1) (colouring_0 x_43 a_0 z_5) (index_0 (Just_0 c_1) a_0 v_1) (index_0 (Just_0 c_0) a_0 u_1)) (colouring_0 (cons_0 true_0 x_43) a_0 (cons_2 (pair_1 u_1 v_1) z_5)))))
(assert (forall ((x_47 list_0) (c_0 Nat_0) (u_1 Nat_0) (v_1 Nat_0) (z_5 list_2) (a_0 list_1))
	(=> (and (colouring_0 x_47 a_0 z_5) (index_0 Nothing_0 a_0 v_1) (index_0 (Just_0 c_0) a_0 u_1)) (colouring_0 (cons_0 false_0 x_47) a_0 (cons_2 (pair_1 u_1 v_1) z_5)))))
(assert (forall ((x_50 list_0) (u_1 Nat_0) (v_1 Nat_0) (z_5 list_2) (a_0 list_1))
	(=> (and (colouring_0 x_50 a_0 z_5) (index_0 Nothing_0 a_0 u_1)) (colouring_0 (cons_0 false_0 x_50) a_0 (cons_2 (pair_1 u_1 v_1) z_5)))))
(assert (forall ((a_0 list_1))
	(colouring_0 nil_0 a_0 nil_2)))
(assert (forall ((x_52 Bool_0) (x_53 Bool_0) (y_7 Bool_0) (xs_1 list_0))
	(=> (and (and_0 x_53 xs_1) (and_1 x_52 y_7 x_53)) (and_0 x_52 (cons_0 y_7 xs_1)))))
(assert (and_0 true_0 nil_0))
(assert (forall ((x_55 Bool_0) (x_56 list_0) (x_10 list_2) (y_8 list_1))
	(=> (and (colouring_0 x_56 y_8 x_10) (and_0 x_55 x_56)) (colouring_1 x_55 x_10 y_8))))
(assert (forall ((x_59 list_2) (z_6 pair_0) (xs_2 list_2) (y_9 list_2))
	(=> (x_11 x_59 xs_2 y_9) (x_11 (cons_2 z_6 x_59) (cons_2 z_6 xs_2) y_9))))
(assert (forall ((x_60 list_2))
	(x_11 x_60 nil_2 x_60)))
(assert (forall ((x_61 list_2) (x_62 list_2) (y_10 list_2) (xs_3 list_3))
	(=> (and (concat_0 x_62 xs_3) (x_11 x_61 y_10 x_62)) (concat_0 x_61 (cons_3 y_10 xs_3)))))
(assert (concat_0 nil_2 nil_3))
(assert (forall ((x_95 Nat_0) (x_94 Nat_0) (x_82 list_0) (x_74 list_1) (x_75 list_2) (x_76 list_3) (x_77 list_2) (x_78 list_1) (x_79 list_2) (x_80 list_2) (a_1 list_1))
	(=> (and true (formula_0 x_82 a_1) (and_0 true_0 x_82) (primEnumFromTo_0 x_74 Z_7 x_94) (petersen_1 x_75 x_74) (petersen_2 x_76 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 Z_7))))))))))))))))))))) (cons_2 (pair_1 x_95 Z_7) x_75)) (concat_0 x_77 x_76) (primEnumFromTo_0 x_78 Z_7 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 Z_7)))))))))))))))))))))) (petersen_0 x_79 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 Z_7))))))))))))))))))))) x_78) (x_11 x_80 x_77 x_79) (colouring_1 true_0 x_80 a_1) (minus_0 x_95 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 Z_7))))))))))))))))))))) (Z_8 Z_7)) (minus_0 x_94 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 (Z_8 Z_7))))))))))))))))))))) (Z_8 Z_7))) false)))
(check-sat)
(get-model)
