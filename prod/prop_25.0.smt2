(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_1 ) (S_1 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_30 Nat_1) (x_29 Nat_1))
	(=> (= x_30 (S_1 x_29))
	    (unS_1 x_29 x_30))))
(assert (isZ_0 Z_1))
(assert (forall ((x_31 Nat_1))
	(isS_0 (S_1 x_31))))
(assert (forall ((x_32 Nat_1))
	(diseqNat_0 Z_1 (S_1 x_32))))
(assert (forall ((x_33 Nat_1))
	(diseqNat_0 (S_1 x_33) Z_1)))
(assert (forall ((x_34 Nat_1) (x_35 Nat_1))
	(=> (diseqNat_0 x_34 x_35)
	    (diseqNat_0 (S_1 x_34) (S_1 x_35)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_5 Nat_1))
	(add_0 y_5 Z_1 y_5)))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_27 y_5)
	    (add_0 (S_1 r_0) (S_1 x_27) y_5))))
(assert (forall ((y_5 Nat_1))
	(minus_0 Z_1 Z_1 y_5)))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_27 y_5)
	    (minus_0 (S_1 r_0) (S_1 x_27) y_5))))
(assert (forall ((y_5 Nat_1))
	(le_0 Z_1 y_5)))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1))
	(=> (le_0 x_27 y_5)
	    (le_0 (S_1 x_27) (S_1 y_5)))))
(assert (forall ((y_5 Nat_1))
	(ge_0 y_5 Z_1)))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1))
	(=> (ge_0 x_27 y_5)
	    (ge_0 (S_1 x_27) (S_1 y_5)))))
(assert (forall ((y_5 Nat_1))
	(lt_0 Z_1 (S_1 y_5))))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1))
	(=> (lt_0 x_27 y_5)
	    (lt_0 (S_1 x_27) (S_1 y_5)))))
(assert (forall ((y_5 Nat_1))
	(gt_0 (S_1 y_5) Z_1)))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1))
	(=> (gt_0 x_27 y_5)
	    (gt_0 (S_1 x_27) (S_1 y_5)))))
(assert (forall ((y_5 Nat_1))
	(mult_0 Z_1 Z_1 y_5)))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (mult_0 r_0 x_27 y_5)
			(add_0 z_3 r_0 y_5))
		(mult_0 z_3 (S_1 x_27) y_5))))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1))
	(=> (lt_0 x_27 y_5)
	    (div_0 Z_1 x_27 y_5))))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_27 y_5)
			(minus_0 z_3 x_27 y_5)
			(div_0 r_0 z_3 y_5))
		(div_0 (S_1 r_0) x_27 y_5))))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1))
	(=> (lt_0 x_27 y_5)
	    (mod_0 x_27 x_27 y_5))))
(assert (forall ((x_27 Nat_1) (y_5 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_27 y_5)
			(minus_0 z_3 x_27 y_5)
			(mod_0 r_0 z_3 y_5))
		(mod_0 r_0 x_27 y_5))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_1 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_39 list_0) (x_37 Nat_1) (x_38 list_0))
	(=> (= x_39 (cons_0 x_37 x_38))
	    (head_1 x_37 x_39))))
(assert (forall ((x_39 list_0) (x_37 Nat_1) (x_38 list_0))
	(=> (= x_39 (cons_0 x_37 x_38))
	    (tail_1 x_38 x_39))))
(assert (isnil_0 nil_0))
(assert (forall ((x_40 Nat_1) (x_41 list_0))
	(iscons_0 (cons_0 x_40 x_41))))
(assert (forall ((x_42 Nat_1) (x_43 list_0))
	(diseqlist_0 nil_0 (cons_0 x_42 x_43))))
(assert (forall ((x_44 Nat_1) (x_45 list_0))
	(diseqlist_0 (cons_0 x_44 x_45) nil_0)))
(assert (forall ((x_46 Nat_1) (x_47 list_0) (x_48 Nat_1) (x_49 list_0))
	(=> (diseqNat_0 x_46 x_48)
	    (diseqlist_0 (cons_0 x_46 x_47) (cons_0 x_48 x_49)))))
(assert (forall ((x_46 Nat_1) (x_47 list_0) (x_48 Nat_1) (x_49 list_0))
	(=> (diseqlist_0 x_47 x_49)
	    (diseqlist_0 (cons_0 x_46 x_47) (cons_0 x_48 x_49)))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_1 (Nat_0) Bool)
(declare-fun isS_1 (Nat_0) Bool)
(assert (forall ((x_52 Nat_0) (x_51 Nat_0))
	(=> (= x_52 (S_0 x_51))
	    (projS_1 x_51 x_52))))
(assert (isZ_1 Z_0))
(assert (forall ((x_53 Nat_0))
	(isS_1 (S_0 x_53))))
(assert (forall ((x_54 Nat_0))
	(diseqNat_1 Z_0 (S_0 x_54))))
(assert (forall ((x_55 Nat_0))
	(diseqNat_1 (S_0 x_55) Z_0)))
(assert (forall ((x_56 Nat_0) (x_57 Nat_0))
	(=> (diseqNat_1 x_56 x_57)
	    (diseqNat_1 (S_0 x_56) (S_0 x_57)))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_0 list_0) (y_0 Nat_1) (xs_0 list_0) (x_7 Nat_0) (x_8 Nat_0))
	(=>	(and (= x_7 (S_0 x_8))
			(length_0 x_8 xs_0)
			(= x_0 (cons_0 y_0 xs_0)))
		(length_0 x_7 x_0))))
(assert (forall ((x_0 list_0) (x_9 Nat_0))
	(=>	(and (= x_9 Z_0)
			(= x_0 nil_0))
		(length_0 x_9 x_0))))
(declare-fun even_0 (Bool Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (z_0 Nat_0) (x_10 Bool) (x_11 Bool))
	(=>	(and (= x_10 x_11)
			(even_0 x_11 z_0)
			(= x_1 (S_0 y_1))
			(= y_1 (S_0 z_0)))
		(even_0 x_10 x_1))))
(assert (forall ((x_1 Nat_0) (y_1 Nat_0) (x_12 Bool))
	(=>	(and (= x_12 false)
			(= x_1 (S_0 y_1))
			(= y_1 Z_0))
		(even_0 x_12 x_1))))
(assert (forall ((x_1 Nat_0) (x_13 Bool))
	(=>	(and (= x_13 true)
			(= x_1 Z_0))
		(even_0 x_13 x_1))))
(declare-fun x_2 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_3 Nat_0) (y_2 Nat_0) (z_1 Nat_0) (x_14 Nat_0) (x_15 Nat_0))
	(=>	(and (= x_14 (S_0 x_15))
			(x_2 x_15 z_1 y_2)
			(= x_3 (S_0 z_1)))
		(x_2 x_14 x_3 y_2))))
(assert (forall ((x_3 Nat_0) (y_2 Nat_0) (x_16 Nat_0))
	(=>	(and (= x_16 y_2)
			(= x_3 Z_0))
		(x_2 x_16 x_3 y_2))))
(declare-fun x_4 (list_0 list_0 list_0) Bool)
(assert (forall ((x_5 list_0) (y_3 list_0) (z_2 Nat_1) (xs_1 list_0) (x_17 list_0) (x_18 list_0))
	(=>	(and (= x_17 (cons_0 z_2 x_18))
			(x_4 x_18 xs_1 y_3)
			(= x_5 (cons_0 z_2 xs_1)))
		(x_4 x_17 x_5 y_3))))
(assert (forall ((x_5 list_0) (y_3 list_0) (x_19 list_0))
	(=>	(and (= x_19 y_3)
			(= x_5 nil_0))
		(x_4 x_19 x_5 y_3))))
(assert (forall ((x_6 list_0) (y_4 list_0) (x_20 list_0) (x_21 Nat_0) (x_22 Bool) (x_23 Nat_0) (x_24 Nat_0) (x_25 Nat_0) (x_26 Bool))
	(=>	(and (not (= x_22 x_26))
			(x_4 x_20 x_6 y_4)
			(length_0 x_21 x_20)
			(even_0 x_22 x_21)
			(length_0 x_23 y_4)
			(length_0 x_24 x_6)
			(x_2 x_25 x_23 x_24)
			(even_0 x_26 x_25))
		false)))
(check-sat)
