(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_1 ) (S_1 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_31 Nat_1) (x_30 Nat_1))
	(=> (= x_31 (S_1 x_30))
	    (unS_1 x_30 x_31))))
(assert (isZ_0 Z_1))
(assert (forall ((x_32 Nat_1))
	(isS_0 (S_1 x_32))))
(assert (forall ((x_33 Nat_1))
	(diseqNat_0 Z_1 (S_1 x_33))))
(assert (forall ((x_34 Nat_1))
	(diseqNat_0 (S_1 x_34) Z_1)))
(assert (forall ((x_35 Nat_1) (x_36 Nat_1))
	(=> (diseqNat_0 x_35 x_36)
	    (diseqNat_0 (S_1 x_35) (S_1 x_36)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_6 Nat_1))
	(add_0 y_6 Z_1 y_6)))
(assert (forall ((x_28 Nat_1) (y_6 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_28 y_6)
	    (add_0 (S_1 r_0) (S_1 x_28) y_6))))
(assert (forall ((y_6 Nat_1))
	(minus_0 Z_1 Z_1 y_6)))
(assert (forall ((x_28 Nat_1) (y_6 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_28 y_6)
	    (minus_0 (S_1 r_0) (S_1 x_28) y_6))))
(assert (forall ((y_6 Nat_1))
	(le_0 Z_1 y_6)))
(assert (forall ((x_28 Nat_1) (y_6 Nat_1))
	(=> (le_0 x_28 y_6)
	    (le_0 (S_1 x_28) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(ge_0 y_6 Z_1)))
(assert (forall ((x_28 Nat_1) (y_6 Nat_1))
	(=> (ge_0 x_28 y_6)
	    (ge_0 (S_1 x_28) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(lt_0 Z_1 (S_1 y_6))))
(assert (forall ((x_28 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_28 y_6)
	    (lt_0 (S_1 x_28) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(gt_0 (S_1 y_6) Z_1)))
(assert (forall ((x_28 Nat_1) (y_6 Nat_1))
	(=> (gt_0 x_28 y_6)
	    (gt_0 (S_1 x_28) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(mult_0 Z_1 Z_1 y_6)))
(assert (forall ((x_28 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_4 Nat_1))
	(=>	(and (mult_0 r_0 x_28 y_6)
			(add_0 z_4 r_0 y_6))
		(mult_0 z_4 (S_1 x_28) y_6))))
(assert (forall ((x_28 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_28 y_6)
	    (div_0 Z_1 x_28 y_6))))
(assert (forall ((x_28 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_4 Nat_1))
	(=>	(and (ge_0 x_28 y_6)
			(minus_0 z_4 x_28 y_6)
			(div_0 r_0 z_4 y_6))
		(div_0 (S_1 r_0) x_28 y_6))))
(assert (forall ((x_28 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_28 y_6)
	    (mod_0 x_28 x_28 y_6))))
(assert (forall ((x_28 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_4 Nat_1))
	(=>	(and (ge_0 x_28 y_6)
			(minus_0 z_4 x_28 y_6)
			(mod_0 r_0 z_4 y_6))
		(mod_0 r_0 x_28 y_6))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_1 (Nat_0) Bool)
(declare-fun isS_1 (Nat_0) Bool)
(assert (forall ((x_39 Nat_0) (x_38 Nat_0))
	(=> (= x_39 (S_0 x_38))
	    (projS_1 x_38 x_39))))
(assert (isZ_1 Z_0))
(assert (forall ((x_40 Nat_0))
	(isS_1 (S_0 x_40))))
(assert (forall ((x_41 Nat_0))
	(diseqNat_1 Z_0 (S_0 x_41))))
(assert (forall ((x_42 Nat_0))
	(diseqNat_1 (S_0 x_42) Z_0)))
(assert (forall ((x_43 Nat_0) (x_44 Nat_0))
	(=> (diseqNat_1 x_43 x_44)
	    (diseqNat_1 (S_0 x_43) (S_0 x_44)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_48 list_0) (x_46 Nat_0) (x_47 list_0))
	(=> (= x_48 (cons_0 x_46 x_47))
	    (head_1 x_46 x_48))))
(assert (forall ((x_48 list_0) (x_46 Nat_0) (x_47 list_0))
	(=> (= x_48 (cons_0 x_46 x_47))
	    (tail_1 x_47 x_48))))
(assert (isnil_0 nil_0))
(assert (forall ((x_49 Nat_0) (x_50 list_0))
	(iscons_0 (cons_0 x_49 x_50))))
(assert (forall ((x_51 Nat_0) (x_52 list_0))
	(diseqlist_0 nil_0 (cons_0 x_51 x_52))))
(assert (forall ((x_53 Nat_0) (x_54 list_0))
	(diseqlist_0 (cons_0 x_53 x_54) nil_0)))
(assert (forall ((x_55 Nat_0) (x_56 list_0) (x_57 Nat_0) (x_58 list_0))
	(=> (diseqNat_1 x_55 x_57)
	    (diseqlist_0 (cons_0 x_55 x_56) (cons_0 x_57 x_58)))))
(assert (forall ((x_55 Nat_0) (x_56 list_0) (x_57 Nat_0) (x_58 list_0))
	(=> (diseqlist_0 x_56 x_58)
	    (diseqlist_0 (cons_0 x_55 x_56) (cons_0 x_57 x_58)))))
(declare-fun drop_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (x_1 Nat_0) (x_2 list_0) (x_9 list_0) (x_10 list_0))
	(=>	(and (= x_9 x_10)
			(drop_0 x_10 z_0 x_2)
			(= x_0 (S_0 z_0))
			(= y_0 (cons_0 x_1 x_2)))
		(drop_0 x_9 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (z_0 Nat_0) (x_11 list_0))
	(=>	(and (= x_11 nil_0)
			(= x_0 (S_0 z_0))
			(= y_0 nil_0))
		(drop_0 x_11 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 list_0) (x_12 list_0))
	(=>	(and (= x_12 y_0)
			(= x_0 Z_0))
		(drop_0 x_12 x_0 y_0))))
(declare-fun barbar_0 (Bool Bool Bool) Bool)
(assert (forall ((x_3 Bool) (y_1 Bool) (x_13 Bool))
	(=>	(and (= x_13 true)
			x_3)
		(barbar_0 x_13 x_3 y_1))))
(assert (forall ((x_3 Bool) (y_1 Bool) (x_14 Bool))
	(=>	(and (= x_14 y_1)
			(not x_3))
		(barbar_0 x_14 x_3 y_1))))
(declare-fun x_4 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_5 Nat_0) (y_2 Nat_0) (x_6 Nat_0) (y_3 Nat_0) (x_15 Bool) (x_16 Bool))
	(=>	(and (= x_15 x_16)
			(x_4 x_16 x_6 y_3)
			(= x_5 (S_0 x_6))
			(= y_2 (S_0 y_3)))
		(x_4 x_15 x_5 y_2))))
(assert (forall ((x_5 Nat_0) (y_2 Nat_0) (x_6 Nat_0) (x_17 Bool))
	(=>	(and (= x_17 false)
			(= x_5 (S_0 x_6))
			(= y_2 Z_0))
		(x_4 x_17 x_5 y_2))))
(assert (forall ((x_5 Nat_0) (y_2 Nat_0) (z_1 Nat_0) (x_18 Bool))
	(=>	(and (= x_18 false)
			(= x_5 Z_0)
			(= y_2 (S_0 z_1)))
		(x_4 x_18 x_5 y_2))))
(assert (forall ((x_5 Nat_0) (y_2 Nat_0) (x_19 Bool))
	(=>	(and (= x_19 true)
			(= x_5 Z_0)
			(= y_2 Z_0))
		(x_4 x_19 x_5 y_2))))
(declare-fun elem_0 (Bool Nat_0 list_0) Bool)
(assert (forall ((x_7 Nat_0) (y_4 list_0) (z_2 Nat_0) (xs_0 list_0) (x_20 Bool) (x_21 Bool) (x_22 Bool) (x_23 Bool))
	(=>	(and (= x_20 x_23)
			(x_4 x_21 x_7 z_2)
			(elem_0 x_22 x_7 xs_0)
			(barbar_0 x_23 x_21 x_22)
			(= y_4 (cons_0 z_2 xs_0)))
		(elem_0 x_20 x_7 y_4))))
(assert (forall ((x_7 Nat_0) (y_4 list_0) (x_24 Bool))
	(=>	(and (= x_24 false)
			(= y_4 nil_0))
		(elem_0 x_24 x_7 y_4))))
(assert (forall ((x_8 Nat_0) (y_5 Nat_0) (z_3 list_0) (x_25 Bool) (x_26 list_0) (x_27 Bool))
	(=>	(and (= x_25 false)
			(= x_27 true)
			(elem_0 x_25 x_8 z_3)
			(drop_0 x_26 y_5 z_3)
			(elem_0 x_27 x_8 x_26))
		false)))
(check-sat)
