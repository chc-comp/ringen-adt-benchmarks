(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_1 ) (S_1 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_29 Nat_1) (x_28 Nat_1))
	(=> (= x_29 (S_1 x_28))
	    (unS_1 x_28 x_29))))
(assert (isZ_0 Z_1))
(assert (forall ((x_30 Nat_1))
	(isS_0 (S_1 x_30))))
(assert (forall ((x_31 Nat_1))
	(diseqNat_0 Z_1 (S_1 x_31))))
(assert (forall ((x_32 Nat_1))
	(diseqNat_0 (S_1 x_32) Z_1)))
(assert (forall ((x_33 Nat_1) (x_34 Nat_1))
	(=> (diseqNat_0 x_33 x_34)
	    (diseqNat_0 (S_1 x_33) (S_1 x_34)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_4 Nat_1))
	(add_0 y_4 Z_1 y_4)))
(assert (forall ((x_26 Nat_1) (y_4 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_26 y_4)
	    (add_0 (S_1 r_0) (S_1 x_26) y_4))))
(assert (forall ((y_4 Nat_1))
	(minus_0 Z_1 Z_1 y_4)))
(assert (forall ((x_26 Nat_1) (y_4 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_26 y_4)
	    (minus_0 (S_1 r_0) (S_1 x_26) y_4))))
(assert (forall ((y_4 Nat_1))
	(le_0 Z_1 y_4)))
(assert (forall ((x_26 Nat_1) (y_4 Nat_1))
	(=> (le_0 x_26 y_4)
	    (le_0 (S_1 x_26) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(ge_0 y_4 Z_1)))
(assert (forall ((x_26 Nat_1) (y_4 Nat_1))
	(=> (ge_0 x_26 y_4)
	    (ge_0 (S_1 x_26) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(lt_0 Z_1 (S_1 y_4))))
(assert (forall ((x_26 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_26 y_4)
	    (lt_0 (S_1 x_26) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(gt_0 (S_1 y_4) Z_1)))
(assert (forall ((x_26 Nat_1) (y_4 Nat_1))
	(=> (gt_0 x_26 y_4)
	    (gt_0 (S_1 x_26) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(mult_0 Z_1 Z_1 y_4)))
(assert (forall ((x_26 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (mult_0 r_0 x_26 y_4)
			(add_0 z_3 r_0 y_4))
		(mult_0 z_3 (S_1 x_26) y_4))))
(assert (forall ((x_26 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_26 y_4)
	    (div_0 Z_1 x_26 y_4))))
(assert (forall ((x_26 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_26 y_4)
			(minus_0 z_3 x_26 y_4)
			(div_0 r_0 z_3 y_4))
		(div_0 (S_1 r_0) x_26 y_4))))
(assert (forall ((x_26 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_26 y_4)
	    (mod_0 x_26 x_26 y_4))))
(assert (forall ((x_26 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_26 y_4)
			(minus_0 z_3 x_26 y_4)
			(mod_0 r_0 z_3 y_4))
		(mod_0 r_0 x_26 y_4))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_1 (Nat_0) Bool)
(declare-fun isS_1 (Nat_0) Bool)
(assert (forall ((x_37 Nat_0) (x_36 Nat_0))
	(=> (= x_37 (S_0 x_36))
	    (projS_1 x_36 x_37))))
(assert (isZ_1 Z_0))
(assert (forall ((x_38 Nat_0))
	(isS_1 (S_0 x_38))))
(assert (forall ((x_39 Nat_0))
	(diseqNat_1 Z_0 (S_0 x_39))))
(assert (forall ((x_40 Nat_0))
	(diseqNat_1 (S_0 x_40) Z_0)))
(assert (forall ((x_41 Nat_0) (x_42 Nat_0))
	(=> (diseqNat_1 x_41 x_42)
	    (diseqNat_1 (S_0 x_41) (S_0 x_42)))))
(declare-fun one_0 (Nat_0) Bool)
(assert (forall ((x_7 Nat_0))
	(=> (= x_7 (S_0 Z_0))
	    (one_0 x_7))))
(declare-fun x_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_8 Nat_0) (x_9 Nat_0))
	(=>	(and (= x_8 (S_0 x_9))
			(x_0 x_9 z_0 y_0)
			(= x_1 (S_0 z_0)))
		(x_0 x_8 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (x_10 Nat_0))
	(=>	(and (= x_10 y_0)
			(= x_1 Z_0))
		(x_0 x_10 x_1 y_0))))
(declare-fun x_2 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_3 Nat_0) (y_1 Nat_0) (z_1 Nat_0) (x_11 Nat_0) (x_12 Nat_0) (x_13 Nat_0))
	(=>	(and (= x_11 x_13)
			(x_2 x_12 z_1 y_1)
			(x_0 x_13 y_1 x_12)
			(= x_3 (S_0 z_1)))
		(x_2 x_11 x_3 y_1))))
(assert (forall ((x_3 Nat_0) (y_1 Nat_0) (x_14 Nat_0))
	(=>	(and (= x_14 Z_0)
			(= x_3 Z_0))
		(x_2 x_14 x_3 y_1))))
(declare-fun fac_0 (Nat_0 Nat_0) Bool)
(assert (forall ((x_4 Nat_0) (y_2 Nat_0) (x_15 Nat_0) (x_16 Nat_0) (x_17 Nat_0))
	(=>	(and (= x_15 x_17)
			(fac_0 x_16 y_2)
			(x_2 x_17 (S_0 y_2) x_16)
			(= x_4 (S_0 y_2)))
		(fac_0 x_15 x_4))))
(assert (forall ((x_4 Nat_0) (x_18 Nat_0))
	(=>	(and (= x_18 (S_0 Z_0))
			(= x_4 Z_0))
		(fac_0 x_18 x_4))))
(declare-fun qfac_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_5 Nat_0) (y_3 Nat_0) (z_2 Nat_0) (x_19 Nat_0) (x_20 Nat_0) (x_21 Nat_0))
	(=>	(and (= x_19 x_21)
			(x_2 x_20 (S_0 z_2) y_3)
			(qfac_0 x_21 z_2 x_20)
			(= x_5 (S_0 z_2)))
		(qfac_0 x_19 x_5 y_3))))
(assert (forall ((x_5 Nat_0) (y_3 Nat_0) (x_22 Nat_0))
	(=>	(and (= x_22 y_3)
			(= x_5 Z_0))
		(qfac_0 x_22 x_5 y_3))))
(assert (forall ((x_6 Nat_0) (x_23 Nat_0) (x_24 Nat_0) (x_25 Nat_0))
	(=>	(and (diseqNat_1 x_23 x_25)
			(fac_0 x_23 x_6)
			(one_0 x_24)
			(qfac_0 x_25 x_6 x_24))
		false)))
(check-sat)
