(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_2 ) (Z_3 (unS_0 Nat_1)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun length_0 (Nat_0 list_0) Bool)
(declare-fun x_1 (list_0 list_0 list_0) Bool)
(assert (forall ((x_33 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_33))))
(assert (forall ((x_34 Nat_0))
	(diseqNat_0 (S_0 x_34) Z_0)))
(assert (forall ((x_35 Nat_0) (x_36 Nat_0))
	(=> (diseqNat_0 x_35 x_36) (diseqNat_0 (S_0 x_35) (S_0 x_36)))))
(assert (forall ((x_5 Nat_0) (y_0 Nat_1) (xs_0 list_0))
	(=> (length_0 x_5 xs_0) (length_0 (S_0 x_5) (cons_0 y_0 xs_0)))))
(assert (length_0 Z_0 nil_0))
(assert (forall ((x_8 list_0) (z_1 Nat_1) (xs_1 list_0) (y_1 list_0))
	(=> (x_1 x_8 xs_1 y_1) (x_1 (cons_0 z_1 x_8) (cons_0 z_1 xs_1) y_1))))
(assert (forall ((x_9 list_0))
	(x_1 x_9 nil_0 x_9)))
(assert (forall ((x_10 list_0) (x_11 Nat_0) (x_12 list_0) (x_13 Nat_0) (x_3 list_0) (y_2 list_0))
	(=> (and (diseqNat_0 x_11 x_13) (x_1 x_10 x_3 y_2) (length_0 x_11 x_10) (x_1 x_12 y_2 x_3) (length_0 x_13 x_12)) false)))
(check-sat)
(get-model)
