(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_28 Nat_0) (x_27 Nat_0))
	(=> (= x_28 (S_0 x_27))
	    (unS_1 x_27 x_28))))
(assert (isZ_0 Z_0))
(assert (forall ((x_29 Nat_0))
	(isS_0 (S_0 x_29))))
(assert (forall ((x_30 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_30))))
(assert (forall ((x_31 Nat_0))
	(diseqNat_0 (S_0 x_31) Z_0)))
(assert (forall ((x_32 Nat_0) (x_33 Nat_0))
	(=> (diseqNat_0 x_32 x_33)
	    (diseqNat_0 (S_0 x_32) (S_0 x_33)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_3 Nat_0))
	(add_0 y_3 Z_0 y_3)))
(assert (forall ((x_25 Nat_0) (y_3 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_25 y_3)
	    (add_0 (S_0 r_0) (S_0 x_25) y_3))))
(assert (forall ((y_3 Nat_0))
	(minus_0 Z_0 Z_0 y_3)))
(assert (forall ((x_25 Nat_0) (y_3 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_25 y_3)
	    (minus_0 (S_0 r_0) (S_0 x_25) y_3))))
(assert (forall ((y_3 Nat_0))
	(le_0 Z_0 y_3)))
(assert (forall ((x_25 Nat_0) (y_3 Nat_0))
	(=> (le_0 x_25 y_3)
	    (le_0 (S_0 x_25) (S_0 y_3)))))
(assert (forall ((y_3 Nat_0))
	(ge_0 y_3 Z_0)))
(assert (forall ((x_25 Nat_0) (y_3 Nat_0))
	(=> (ge_0 x_25 y_3)
	    (ge_0 (S_0 x_25) (S_0 y_3)))))
(assert (forall ((y_3 Nat_0))
	(lt_0 Z_0 (S_0 y_3))))
(assert (forall ((x_25 Nat_0) (y_3 Nat_0))
	(=> (lt_0 x_25 y_3)
	    (lt_0 (S_0 x_25) (S_0 y_3)))))
(assert (forall ((y_3 Nat_0))
	(gt_0 (S_0 y_3) Z_0)))
(assert (forall ((x_25 Nat_0) (y_3 Nat_0))
	(=> (gt_0 x_25 y_3)
	    (gt_0 (S_0 x_25) (S_0 y_3)))))
(assert (forall ((y_3 Nat_0))
	(mult_0 Z_0 Z_0 y_3)))
(assert (forall ((x_25 Nat_0) (y_3 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (mult_0 r_0 x_25 y_3)
			(add_0 z_1 r_0 y_3))
		(mult_0 z_1 (S_0 x_25) y_3))))
(assert (forall ((x_25 Nat_0) (y_3 Nat_0))
	(=> (lt_0 x_25 y_3)
	    (div_0 Z_0 x_25 y_3))))
(assert (forall ((x_25 Nat_0) (y_3 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_25 y_3)
			(minus_0 z_1 x_25 y_3)
			(div_0 r_0 z_1 y_3))
		(div_0 (S_0 r_0) x_25 y_3))))
(assert (forall ((x_25 Nat_0) (y_3 Nat_0))
	(=> (lt_0 x_25 y_3)
	    (mod_0 x_25 x_25 y_3))))
(assert (forall ((x_25 Nat_0) (y_3 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_25 y_3)
			(minus_0 z_1 x_25 y_3)
			(mod_0 r_0 z_1 y_3))
		(mod_0 r_0 x_25 y_3))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_2 (Nat_0 list_0) Bool)
(declare-fun tail_2 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_37 list_0) (x_35 Nat_0) (x_36 list_0))
	(=> (= x_37 (cons_0 x_35 x_36))
	    (head_2 x_35 x_37))))
(assert (forall ((x_37 list_0) (x_35 Nat_0) (x_36 list_0))
	(=> (= x_37 (cons_0 x_35 x_36))
	    (tail_2 x_36 x_37))))
(assert (isnil_0 nil_0))
(assert (forall ((x_38 Nat_0) (x_39 list_0))
	(iscons_0 (cons_0 x_38 x_39))))
(assert (forall ((x_40 Nat_0) (x_41 list_0))
	(diseqlist_0 nil_0 (cons_0 x_40 x_41))))
(assert (forall ((x_42 Nat_0) (x_43 list_0))
	(diseqlist_0 (cons_0 x_42 x_43) nil_0)))
(assert (forall ((x_44 Nat_0) (x_45 list_0) (x_46 Nat_0) (x_47 list_0))
	(=> (diseqNat_0 x_44 x_46)
	    (diseqlist_0 (cons_0 x_44 x_45) (cons_0 x_46 x_47)))))
(assert (forall ((x_44 Nat_0) (x_45 list_0) (x_46 Nat_0) (x_47 list_0))
	(=> (diseqlist_0 x_45 x_47)
	    (diseqlist_0 (cons_0 x_44 x_45) (cons_0 x_46 x_47)))))
(declare-datatypes ((list_1 0)) (((nil_1 ) (cons_1 (head_1 list_0) (tail_1 list_1)))))
(declare-fun diseqlist_1 (list_1 list_1) Bool)
(declare-fun head_3 (list_0 list_1) Bool)
(declare-fun tail_3 (list_1 list_1) Bool)
(declare-fun isnil_1 (list_1) Bool)
(declare-fun iscons_1 (list_1) Bool)
(assert (forall ((x_51 list_1) (x_49 list_0) (x_50 list_1))
	(=> (= x_51 (cons_1 x_49 x_50))
	    (head_3 x_49 x_51))))
(assert (forall ((x_51 list_1) (x_49 list_0) (x_50 list_1))
	(=> (= x_51 (cons_1 x_49 x_50))
	    (tail_3 x_50 x_51))))
(assert (isnil_1 nil_1))
(assert (forall ((x_52 list_0) (x_53 list_1))
	(iscons_1 (cons_1 x_52 x_53))))
(assert (forall ((x_54 list_0) (x_55 list_1))
	(diseqlist_1 nil_1 (cons_1 x_54 x_55))))
(assert (forall ((x_56 list_0) (x_57 list_1))
	(diseqlist_1 (cons_1 x_56 x_57) nil_1)))
(assert (forall ((x_58 list_0) (x_59 list_1) (x_60 list_0) (x_61 list_1))
	(=> (diseqlist_0 x_58 x_60)
	    (diseqlist_1 (cons_1 x_58 x_59) (cons_1 x_60 x_61)))))
(assert (forall ((x_58 list_0) (x_59 list_1) (x_60 list_0) (x_61 list_1))
	(=> (diseqlist_1 x_59 x_61)
	    (diseqlist_1 (cons_1 x_58 x_59) (cons_1 x_60 x_61)))))
(declare-fun x_0 (list_0 list_0 list_0) Bool)
(assert (forall ((x_1 list_0) (y_0 list_0) (z_0 Nat_0) (xs_0 list_0) (x_6 list_0) (x_7 list_0))
	(=>	(and (= x_6 (cons_0 z_0 x_7))
			(x_0 x_7 xs_0 y_0)
			(= x_1 (cons_0 z_0 xs_0)))
		(x_0 x_6 x_1 y_0))))
(assert (forall ((x_1 list_0) (y_0 list_0) (x_8 list_0))
	(=>	(and (= x_8 y_0)
			(= x_1 nil_0))
		(x_0 x_8 x_1 y_0))))
(declare-fun rev_0 (list_0 list_0) Bool)
(assert (forall ((x_2 list_0) (y_1 Nat_0) (xs_1 list_0) (x_9 list_0) (x_10 list_0) (x_11 list_0))
	(=>	(and (= x_9 x_11)
			(rev_0 x_10 xs_1)
			(x_0 x_11 x_10 (cons_0 y_1 nil_0))
			(= x_2 (cons_0 y_1 xs_1)))
		(rev_0 x_9 x_2))))
(assert (forall ((x_2 list_0) (x_12 list_0))
	(=>	(and (= x_12 nil_0)
			(= x_2 nil_0))
		(rev_0 x_12 x_2))))
(declare-fun qrevflat_0 (list_0 list_1 list_0) Bool)
(assert (forall ((x_3 list_1) (y_2 list_0) (xs_2 list_0) (xss_0 list_1) (x_13 list_0) (x_14 list_0) (x_15 list_0) (x_16 list_0))
	(=>	(and (= x_13 x_16)
			(rev_0 x_14 xs_2)
			(x_0 x_15 x_14 y_2)
			(qrevflat_0 x_16 xss_0 x_15)
			(= x_3 (cons_1 xs_2 xss_0)))
		(qrevflat_0 x_13 x_3 y_2))))
(assert (forall ((x_3 list_1) (y_2 list_0) (x_17 list_0))
	(=>	(and (= x_17 y_2)
			(= x_3 nil_1))
		(qrevflat_0 x_17 x_3 y_2))))
(declare-fun revflat_0 (list_0 list_1) Bool)
(assert (forall ((x_4 list_1) (xs_3 list_0) (xss_1 list_1) (x_18 list_0) (x_19 list_0) (x_20 list_0) (x_21 list_0))
	(=>	(and (= x_18 x_21)
			(revflat_0 x_19 xss_1)
			(rev_0 x_20 xs_3)
			(x_0 x_21 x_19 x_20)
			(= x_4 (cons_1 xs_3 xss_1)))
		(revflat_0 x_18 x_4))))
(assert (forall ((x_4 list_1) (x_22 list_0))
	(=>	(and (= x_22 nil_0)
			(= x_4 nil_1))
		(revflat_0 x_22 x_4))))
(assert (forall ((x_5 list_1) (x_23 list_0) (x_24 list_0))
	(=>	(and (diseqlist_0 x_23 x_24)
			(revflat_0 x_23 x_5)
			(qrevflat_0 x_24 x_5 nil_0))
		false)))
(check-sat)
