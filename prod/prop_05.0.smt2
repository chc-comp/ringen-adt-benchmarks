(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_1 ) (S_1 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_21 Nat_1) (x_20 Nat_1))
	(=> (= x_21 (S_1 x_20))
	    (unS_1 x_20 x_21))))
(assert (isZ_0 Z_1))
(assert (forall ((x_22 Nat_1))
	(isS_0 (S_1 x_22))))
(assert (forall ((x_23 Nat_1))
	(diseqNat_0 Z_1 (S_1 x_23))))
(assert (forall ((x_24 Nat_1))
	(diseqNat_0 (S_1 x_24) Z_1)))
(assert (forall ((x_25 Nat_1) (x_26 Nat_1))
	(=> (diseqNat_0 x_25 x_26)
	    (diseqNat_0 (S_1 x_25) (S_1 x_26)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_3 Nat_1))
	(add_0 y_3 Z_1 y_3)))
(assert (forall ((x_18 Nat_1) (y_3 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_18 y_3)
	    (add_0 (S_1 r_0) (S_1 x_18) y_3))))
(assert (forall ((y_3 Nat_1))
	(minus_0 Z_1 Z_1 y_3)))
(assert (forall ((x_18 Nat_1) (y_3 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_18 y_3)
	    (minus_0 (S_1 r_0) (S_1 x_18) y_3))))
(assert (forall ((y_3 Nat_1))
	(le_0 Z_1 y_3)))
(assert (forall ((x_18 Nat_1) (y_3 Nat_1))
	(=> (le_0 x_18 y_3)
	    (le_0 (S_1 x_18) (S_1 y_3)))))
(assert (forall ((y_3 Nat_1))
	(ge_0 y_3 Z_1)))
(assert (forall ((x_18 Nat_1) (y_3 Nat_1))
	(=> (ge_0 x_18 y_3)
	    (ge_0 (S_1 x_18) (S_1 y_3)))))
(assert (forall ((y_3 Nat_1))
	(lt_0 Z_1 (S_1 y_3))))
(assert (forall ((x_18 Nat_1) (y_3 Nat_1))
	(=> (lt_0 x_18 y_3)
	    (lt_0 (S_1 x_18) (S_1 y_3)))))
(assert (forall ((y_3 Nat_1))
	(gt_0 (S_1 y_3) Z_1)))
(assert (forall ((x_18 Nat_1) (y_3 Nat_1))
	(=> (gt_0 x_18 y_3)
	    (gt_0 (S_1 x_18) (S_1 y_3)))))
(assert (forall ((y_3 Nat_1))
	(mult_0 Z_1 Z_1 y_3)))
(assert (forall ((x_18 Nat_1) (y_3 Nat_1) (r_0 Nat_1) (z_1 Nat_1))
	(=>	(and (mult_0 r_0 x_18 y_3)
			(add_0 z_1 r_0 y_3))
		(mult_0 z_1 (S_1 x_18) y_3))))
(assert (forall ((x_18 Nat_1) (y_3 Nat_1))
	(=> (lt_0 x_18 y_3)
	    (div_0 Z_1 x_18 y_3))))
(assert (forall ((x_18 Nat_1) (y_3 Nat_1) (r_0 Nat_1) (z_1 Nat_1))
	(=>	(and (ge_0 x_18 y_3)
			(minus_0 z_1 x_18 y_3)
			(div_0 r_0 z_1 y_3))
		(div_0 (S_1 r_0) x_18 y_3))))
(assert (forall ((x_18 Nat_1) (y_3 Nat_1))
	(=> (lt_0 x_18 y_3)
	    (mod_0 x_18 x_18 y_3))))
(assert (forall ((x_18 Nat_1) (y_3 Nat_1) (r_0 Nat_1) (z_1 Nat_1))
	(=>	(and (ge_0 x_18 y_3)
			(minus_0 z_1 x_18 y_3)
			(mod_0 r_0 z_1 y_3))
		(mod_0 r_0 x_18 y_3))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_1) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_1 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_30 list_0) (x_28 Nat_1) (x_29 list_0))
	(=> (= x_30 (cons_0 x_28 x_29))
	    (head_1 x_28 x_30))))
(assert (forall ((x_30 list_0) (x_28 Nat_1) (x_29 list_0))
	(=> (= x_30 (cons_0 x_28 x_29))
	    (tail_1 x_29 x_30))))
(assert (isnil_0 nil_0))
(assert (forall ((x_31 Nat_1) (x_32 list_0))
	(iscons_0 (cons_0 x_31 x_32))))
(assert (forall ((x_33 Nat_1) (x_34 list_0))
	(diseqlist_0 nil_0 (cons_0 x_33 x_34))))
(assert (forall ((x_35 Nat_1) (x_36 list_0))
	(diseqlist_0 (cons_0 x_35 x_36) nil_0)))
(assert (forall ((x_37 Nat_1) (x_38 list_0) (x_39 Nat_1) (x_40 list_0))
	(=> (diseqNat_0 x_37 x_39)
	    (diseqlist_0 (cons_0 x_37 x_38) (cons_0 x_39 x_40)))))
(assert (forall ((x_37 Nat_1) (x_38 list_0) (x_39 Nat_1) (x_40 list_0))
	(=> (diseqlist_0 x_38 x_40)
	    (diseqlist_0 (cons_0 x_37 x_38) (cons_0 x_39 x_40)))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_1 (Nat_0) Bool)
(declare-fun isS_1 (Nat_0) Bool)
(assert (forall ((x_43 Nat_0) (x_42 Nat_0))
	(=> (= x_43 (S_0 x_42))
	    (projS_1 x_42 x_43))))
(assert (isZ_1 Z_0))
(assert (forall ((x_44 Nat_0))
	(isS_1 (S_0 x_44))))
(assert (forall ((x_45 Nat_0))
	(diseqNat_1 Z_0 (S_0 x_45))))
(assert (forall ((x_46 Nat_0))
	(diseqNat_1 (S_0 x_46) Z_0)))
(assert (forall ((x_47 Nat_0) (x_48 Nat_0))
	(=> (diseqNat_1 x_47 x_48)
	    (diseqNat_1 (S_0 x_47) (S_0 x_48)))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_0 list_0) (y_0 Nat_1) (xs_0 list_0) (x_5 Nat_0) (x_6 Nat_0))
	(=>	(and (= x_5 (S_0 x_6))
			(length_0 x_6 xs_0)
			(= x_0 (cons_0 y_0 xs_0)))
		(length_0 x_5 x_0))))
(assert (forall ((x_0 list_0) (x_7 Nat_0))
	(=>	(and (= x_7 Z_0)
			(= x_0 nil_0))
		(length_0 x_7 x_0))))
(declare-fun x_1 (list_0 list_0 list_0) Bool)
(assert (forall ((x_2 list_0) (y_1 list_0) (z_0 Nat_1) (xs_1 list_0) (x_8 list_0) (x_9 list_0))
	(=>	(and (= x_8 (cons_0 z_0 x_9))
			(x_1 x_9 xs_1 y_1)
			(= x_2 (cons_0 z_0 xs_1)))
		(x_1 x_8 x_2 y_1))))
(assert (forall ((x_2 list_0) (y_1 list_0) (x_10 list_0))
	(=>	(and (= x_10 y_1)
			(= x_2 nil_0))
		(x_1 x_10 x_2 y_1))))
(declare-fun rev_0 (list_0 list_0) Bool)
(assert (forall ((x_3 list_0) (y_2 Nat_1) (xs_2 list_0) (x_11 list_0) (x_12 list_0) (x_13 list_0))
	(=>	(and (= x_11 x_13)
			(rev_0 x_12 xs_2)
			(x_1 x_13 x_12 (cons_0 y_2 nil_0))
			(= x_3 (cons_0 y_2 xs_2)))
		(rev_0 x_11 x_3))))
(assert (forall ((x_3 list_0) (x_14 list_0))
	(=>	(and (= x_14 nil_0)
			(= x_3 nil_0))
		(rev_0 x_14 x_3))))
(assert (forall ((x_4 list_0) (x_15 list_0) (x_16 Nat_0) (x_17 Nat_0))
	(=>	(and (diseqNat_1 x_16 x_17)
			(rev_0 x_15 x_4)
			(length_0 x_16 x_15)
			(length_0 x_17 x_4))
		false)))
(check-sat)
