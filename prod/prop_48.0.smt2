(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_1 ) (S_1 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_30 Nat_1) (x_29 Nat_1))
	(=> (= x_30 (S_1 x_29))
	    (unS_1 x_29 x_30))))
(assert (isZ_0 Z_1))
(assert (forall ((x_31 Nat_1))
	(isS_0 (S_1 x_31))))
(assert (forall ((x_32 Nat_1))
	(diseqNat_0 Z_1 (S_1 x_32))))
(assert (forall ((x_33 Nat_1))
	(diseqNat_0 (S_1 x_33) Z_1)))
(assert (forall ((x_34 Nat_1) (x_35 Nat_1))
	(=> (diseqNat_0 x_34 x_35)
	    (diseqNat_0 (S_1 x_34) (S_1 x_35)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_4 Nat_1))
	(add_0 y_4 Z_1 y_4)))
(assert (forall ((x_27 Nat_1) (y_4 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_27 y_4)
	    (add_0 (S_1 r_0) (S_1 x_27) y_4))))
(assert (forall ((y_4 Nat_1))
	(minus_0 Z_1 Z_1 y_4)))
(assert (forall ((x_27 Nat_1) (y_4 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_27 y_4)
	    (minus_0 (S_1 r_0) (S_1 x_27) y_4))))
(assert (forall ((y_4 Nat_1))
	(le_0 Z_1 y_4)))
(assert (forall ((x_27 Nat_1) (y_4 Nat_1))
	(=> (le_0 x_27 y_4)
	    (le_0 (S_1 x_27) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(ge_0 y_4 Z_1)))
(assert (forall ((x_27 Nat_1) (y_4 Nat_1))
	(=> (ge_0 x_27 y_4)
	    (ge_0 (S_1 x_27) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(lt_0 Z_1 (S_1 y_4))))
(assert (forall ((x_27 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_27 y_4)
	    (lt_0 (S_1 x_27) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(gt_0 (S_1 y_4) Z_1)))
(assert (forall ((x_27 Nat_1) (y_4 Nat_1))
	(=> (gt_0 x_27 y_4)
	    (gt_0 (S_1 x_27) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(mult_0 Z_1 Z_1 y_4)))
(assert (forall ((x_27 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_2 Nat_1))
	(=>	(and (mult_0 r_0 x_27 y_4)
			(add_0 z_2 r_0 y_4))
		(mult_0 z_2 (S_1 x_27) y_4))))
(assert (forall ((x_27 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_27 y_4)
	    (div_0 Z_1 x_27 y_4))))
(assert (forall ((x_27 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_2 Nat_1))
	(=>	(and (ge_0 x_27 y_4)
			(minus_0 z_2 x_27 y_4)
			(div_0 r_0 z_2 y_4))
		(div_0 (S_1 r_0) x_27 y_4))))
(assert (forall ((x_27 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_27 y_4)
	    (mod_0 x_27 x_27 y_4))))
(assert (forall ((x_27 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_2 Nat_1))
	(=>	(and (ge_0 x_27 y_4)
			(minus_0 z_2 x_27 y_4)
			(mod_0 r_0 z_2 y_4))
		(mod_0 r_0 x_27 y_4))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_1 (Nat_0) Bool)
(declare-fun isS_1 (Nat_0) Bool)
(assert (forall ((x_38 Nat_0) (x_37 Nat_0))
	(=> (= x_38 (S_0 x_37))
	    (projS_1 x_37 x_38))))
(assert (isZ_1 Z_0))
(assert (forall ((x_39 Nat_0))
	(isS_1 (S_0 x_39))))
(assert (forall ((x_40 Nat_0))
	(diseqNat_1 Z_0 (S_0 x_40))))
(assert (forall ((x_41 Nat_0))
	(diseqNat_1 (S_0 x_41) Z_0)))
(assert (forall ((x_42 Nat_0) (x_43 Nat_0))
	(=> (diseqNat_1 x_42 x_43)
	    (diseqNat_1 (S_0 x_42) (S_0 x_43)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_47 list_0) (x_45 Nat_0) (x_46 list_0))
	(=> (= x_47 (cons_0 x_45 x_46))
	    (head_1 x_45 x_47))))
(assert (forall ((x_47 list_0) (x_45 Nat_0) (x_46 list_0))
	(=> (= x_47 (cons_0 x_45 x_46))
	    (tail_1 x_46 x_47))))
(assert (isnil_0 nil_0))
(assert (forall ((x_48 Nat_0) (x_49 list_0))
	(iscons_0 (cons_0 x_48 x_49))))
(assert (forall ((x_50 Nat_0) (x_51 list_0))
	(diseqlist_0 nil_0 (cons_0 x_50 x_51))))
(assert (forall ((x_52 Nat_0) (x_53 list_0))
	(diseqlist_0 (cons_0 x_52 x_53) nil_0)))
(assert (forall ((x_54 Nat_0) (x_55 list_0) (x_56 Nat_0) (x_57 list_0))
	(=> (diseqNat_1 x_54 x_56)
	    (diseqlist_0 (cons_0 x_54 x_55) (cons_0 x_56 x_57)))))
(assert (forall ((x_54 Nat_0) (x_55 list_0) (x_56 Nat_0) (x_57 list_0))
	(=> (diseqlist_0 x_55 x_57)
	    (diseqlist_0 (cons_0 x_54 x_55) (cons_0 x_56 x_57)))))
(declare-fun length_0 (Nat_0 list_0) Bool)
(assert (forall ((x_0 list_0) (y_0 Nat_0) (xs_0 list_0) (x_7 Nat_0) (x_8 Nat_0))
	(=>	(and (= x_7 (S_0 x_8))
			(length_0 x_8 xs_0)
			(= x_0 (cons_0 y_0 xs_0)))
		(length_0 x_7 x_0))))
(assert (forall ((x_0 list_0) (x_9 Nat_0))
	(=>	(and (= x_9 Z_0)
			(= x_0 nil_0))
		(length_0 x_9 x_0))))
(declare-fun x_1 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_2 Nat_0) (y_1 Nat_0) (z_0 Nat_0) (x_3 Nat_0) (x_10 Bool) (x_11 Bool))
	(=>	(and (= x_10 x_11)
			(x_1 x_11 z_0 x_3)
			(= x_2 (S_0 z_0))
			(= y_1 (S_0 x_3)))
		(x_1 x_10 x_2 y_1))))
(assert (forall ((x_2 Nat_0) (y_1 Nat_0) (z_0 Nat_0) (x_12 Bool))
	(=>	(and (= x_12 false)
			(= x_2 (S_0 z_0))
			(= y_1 Z_0))
		(x_1 x_12 x_2 y_1))))
(assert (forall ((x_2 Nat_0) (y_1 Nat_0) (x_13 Bool))
	(=>	(and (= x_13 true)
			(= x_2 Z_0))
		(x_1 x_13 x_2 y_1))))
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_4 Nat_0) (y_2 list_0) (z_1 Nat_0) (xs_1 list_0) (x_15 list_0) (x_14 Bool))
	(=>	(and (= x_15 (cons_0 x_4 (cons_0 z_1 xs_1)))
			(= y_2 (cons_0 z_1 xs_1))
			(= x_14 true)
			(x_1 x_14 x_4 z_1))
		(insert_0 x_15 x_4 y_2))))
(assert (forall ((x_4 Nat_0) (y_2 list_0) (z_1 Nat_0) (xs_1 list_0) (x_17 list_0) (x_18 list_0) (x_16 Bool))
	(=>	(and (= x_17 (cons_0 z_1 x_18))
			(insert_0 x_18 x_4 xs_1)
			(= y_2 (cons_0 z_1 xs_1))
			(= x_16 false)
			(x_1 x_16 x_4 z_1))
		(insert_0 x_17 x_4 y_2))))
(assert (forall ((x_4 Nat_0) (y_2 list_0) (x_19 list_0))
	(=>	(and (= x_19 (cons_0 x_4 nil_0))
			(= y_2 nil_0))
		(insert_0 x_19 x_4 y_2))))
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_5 list_0) (y_3 Nat_0) (xs_2 list_0) (x_20 list_0) (x_21 list_0) (x_22 list_0))
	(=>	(and (= x_20 x_22)
			(isort_0 x_21 xs_2)
			(insert_0 x_22 y_3 x_21)
			(= x_5 (cons_0 y_3 xs_2)))
		(isort_0 x_20 x_5))))
(assert (forall ((x_5 list_0) (x_23 list_0))
	(=>	(and (= x_23 nil_0)
			(= x_5 nil_0))
		(isort_0 x_23 x_5))))
(assert (forall ((x_6 list_0) (x_24 list_0) (x_25 Nat_0) (x_26 Nat_0))
	(=>	(and (diseqNat_1 x_25 x_26)
			(isort_0 x_24 x_6)
			(length_0 x_25 x_24)
			(length_0 x_26 x_6))
		false)))
(check-sat)
