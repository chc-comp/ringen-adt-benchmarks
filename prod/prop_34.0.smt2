(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_1 ) (S_1 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_23 Nat_1) (x_22 Nat_1))
	(=> (= x_23 (S_1 x_22))
	    (unS_1 x_22 x_23))))
(assert (isZ_0 Z_1))
(assert (forall ((x_24 Nat_1))
	(isS_0 (S_1 x_24))))
(assert (forall ((x_25 Nat_1))
	(diseqNat_0 Z_1 (S_1 x_25))))
(assert (forall ((x_26 Nat_1))
	(diseqNat_0 (S_1 x_26) Z_1)))
(assert (forall ((x_27 Nat_1) (x_28 Nat_1))
	(=> (diseqNat_0 x_27 x_28)
	    (diseqNat_0 (S_1 x_27) (S_1 x_28)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_1 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_4 Nat_1))
	(add_0 y_4 Z_1 y_4)))
(assert (forall ((x_20 Nat_1) (y_4 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_20 y_4)
	    (add_0 (S_1 r_0) (S_1 x_20) y_4))))
(assert (forall ((y_4 Nat_1))
	(minus_0 Z_1 Z_1 y_4)))
(assert (forall ((x_20 Nat_1) (y_4 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_20 y_4)
	    (minus_0 (S_1 r_0) (S_1 x_20) y_4))))
(assert (forall ((y_4 Nat_1))
	(le_0 Z_1 y_4)))
(assert (forall ((x_20 Nat_1) (y_4 Nat_1))
	(=> (le_0 x_20 y_4)
	    (le_0 (S_1 x_20) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(ge_0 y_4 Z_1)))
(assert (forall ((x_20 Nat_1) (y_4 Nat_1))
	(=> (ge_0 x_20 y_4)
	    (ge_0 (S_1 x_20) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(lt_0 Z_1 (S_1 y_4))))
(assert (forall ((x_20 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_20 y_4)
	    (lt_0 (S_1 x_20) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(gt_0 (S_1 y_4) Z_1)))
(assert (forall ((x_20 Nat_1) (y_4 Nat_1))
	(=> (gt_0 x_20 y_4)
	    (gt_0 (S_1 x_20) (S_1 y_4)))))
(assert (forall ((y_4 Nat_1))
	(mult_1 Z_1 Z_1 y_4)))
(assert (forall ((x_20 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (mult_1 r_0 x_20 y_4)
			(add_0 z_3 r_0 y_4))
		(mult_1 z_3 (S_1 x_20) y_4))))
(assert (forall ((x_20 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_20 y_4)
	    (div_0 Z_1 x_20 y_4))))
(assert (forall ((x_20 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_20 y_4)
			(minus_0 z_3 x_20 y_4)
			(div_0 r_0 z_3 y_4))
		(div_0 (S_1 r_0) x_20 y_4))))
(assert (forall ((x_20 Nat_1) (y_4 Nat_1))
	(=> (lt_0 x_20 y_4)
	    (mod_0 x_20 x_20 y_4))))
(assert (forall ((x_20 Nat_1) (y_4 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_20 y_4)
			(minus_0 z_3 x_20 y_4)
			(mod_0 r_0 z_3 y_4))
		(mod_0 r_0 x_20 y_4))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_1 (Nat_0) Bool)
(declare-fun isS_1 (Nat_0) Bool)
(assert (forall ((x_31 Nat_0) (x_30 Nat_0))
	(=> (= x_31 (S_0 x_30))
	    (projS_1 x_30 x_31))))
(assert (isZ_1 Z_0))
(assert (forall ((x_32 Nat_0))
	(isS_1 (S_0 x_32))))
(assert (forall ((x_33 Nat_0))
	(diseqNat_1 Z_0 (S_0 x_33))))
(assert (forall ((x_34 Nat_0))
	(diseqNat_1 (S_0 x_34) Z_0)))
(assert (forall ((x_35 Nat_0) (x_36 Nat_0))
	(=> (diseqNat_1 x_35 x_36)
	    (diseqNat_1 (S_0 x_35) (S_0 x_36)))))
(declare-fun x_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_7 Nat_0) (x_8 Nat_0))
	(=>	(and (= x_7 (S_0 x_8))
			(x_0 x_8 z_0 y_0)
			(= x_1 (S_0 z_0)))
		(x_0 x_7 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (x_9 Nat_0))
	(=>	(and (= x_9 y_0)
			(= x_1 Z_0))
		(x_0 x_9 x_1 y_0))))
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_2 Nat_0) (y_1 Nat_0) (z_1 Nat_0) (x_3 Nat_0) (x_10 Nat_0) (x_11 Nat_0) (x_12 Nat_0))
	(=>	(and (= x_10 x_12)
			(x_0 x_11 y_1 z_1)
			(mult_0 x_12 x_3 y_1 x_11)
			(= x_2 (S_0 x_3)))
		(mult_0 x_10 x_2 y_1 z_1))))
(assert (forall ((x_2 Nat_0) (y_1 Nat_0) (z_1 Nat_0) (x_13 Nat_0))
	(=>	(and (= x_13 z_1)
			(= x_2 Z_0))
		(mult_0 x_13 x_2 y_1 z_1))))
(declare-fun x_4 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((x_5 Nat_0) (y_2 Nat_0) (z_2 Nat_0) (x_14 Nat_0) (x_15 Nat_0) (x_16 Nat_0))
	(=>	(and (= x_14 x_16)
			(x_4 x_15 z_2 y_2)
			(x_0 x_16 y_2 x_15)
			(= x_5 (S_0 z_2)))
		(x_4 x_14 x_5 y_2))))
(assert (forall ((x_5 Nat_0) (y_2 Nat_0) (x_17 Nat_0))
	(=>	(and (= x_17 Z_0)
			(= x_5 Z_0))
		(x_4 x_17 x_5 y_2))))
(assert (forall ((x_6 Nat_0) (y_3 Nat_0) (x_18 Nat_0) (x_19 Nat_0))
	(=>	(and (diseqNat_1 x_18 x_19)
			(x_4 x_18 x_6 y_3)
			(mult_0 x_19 x_6 y_3 Z_0))
		false)))
(check-sat)
