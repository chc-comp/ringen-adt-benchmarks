(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_1 ) (S_1 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_42 Nat_1) (x_41 Nat_1))
	(=> (= x_42 (S_1 x_41))
	    (unS_1 x_41 x_42))))
(assert (isZ_0 Z_1))
(assert (forall ((x_43 Nat_1))
	(isS_0 (S_1 x_43))))
(assert (forall ((x_44 Nat_1))
	(diseqNat_0 Z_1 (S_1 x_44))))
(assert (forall ((x_45 Nat_1))
	(diseqNat_0 (S_1 x_45) Z_1)))
(assert (forall ((x_46 Nat_1) (x_47 Nat_1))
	(=> (diseqNat_0 x_46 x_47)
	    (diseqNat_0 (S_1 x_46) (S_1 x_47)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_7 Nat_1))
	(add_0 y_7 Z_1 y_7)))
(assert (forall ((x_39 Nat_1) (y_7 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_39 y_7)
	    (add_0 (S_1 r_0) (S_1 x_39) y_7))))
(assert (forall ((y_7 Nat_1))
	(minus_0 Z_1 Z_1 y_7)))
(assert (forall ((x_39 Nat_1) (y_7 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_39 y_7)
	    (minus_0 (S_1 r_0) (S_1 x_39) y_7))))
(assert (forall ((y_7 Nat_1))
	(le_0 Z_1 y_7)))
(assert (forall ((x_39 Nat_1) (y_7 Nat_1))
	(=> (le_0 x_39 y_7)
	    (le_0 (S_1 x_39) (S_1 y_7)))))
(assert (forall ((y_7 Nat_1))
	(ge_0 y_7 Z_1)))
(assert (forall ((x_39 Nat_1) (y_7 Nat_1))
	(=> (ge_0 x_39 y_7)
	    (ge_0 (S_1 x_39) (S_1 y_7)))))
(assert (forall ((y_7 Nat_1))
	(lt_0 Z_1 (S_1 y_7))))
(assert (forall ((x_39 Nat_1) (y_7 Nat_1))
	(=> (lt_0 x_39 y_7)
	    (lt_0 (S_1 x_39) (S_1 y_7)))))
(assert (forall ((y_7 Nat_1))
	(gt_0 (S_1 y_7) Z_1)))
(assert (forall ((x_39 Nat_1) (y_7 Nat_1))
	(=> (gt_0 x_39 y_7)
	    (gt_0 (S_1 x_39) (S_1 y_7)))))
(assert (forall ((y_7 Nat_1))
	(mult_0 Z_1 Z_1 y_7)))
(assert (forall ((x_39 Nat_1) (y_7 Nat_1) (r_0 Nat_1) (z_4 Nat_1))
	(=>	(and (mult_0 r_0 x_39 y_7)
			(add_0 z_4 r_0 y_7))
		(mult_0 z_4 (S_1 x_39) y_7))))
(assert (forall ((x_39 Nat_1) (y_7 Nat_1))
	(=> (lt_0 x_39 y_7)
	    (div_0 Z_1 x_39 y_7))))
(assert (forall ((x_39 Nat_1) (y_7 Nat_1) (r_0 Nat_1) (z_4 Nat_1))
	(=>	(and (ge_0 x_39 y_7)
			(minus_0 z_4 x_39 y_7)
			(div_0 r_0 z_4 y_7))
		(div_0 (S_1 r_0) x_39 y_7))))
(assert (forall ((x_39 Nat_1) (y_7 Nat_1))
	(=> (lt_0 x_39 y_7)
	    (mod_0 x_39 x_39 y_7))))
(assert (forall ((x_39 Nat_1) (y_7 Nat_1) (r_0 Nat_1) (z_4 Nat_1))
	(=>	(and (ge_0 x_39 y_7)
			(minus_0 z_4 x_39 y_7)
			(mod_0 r_0 z_4 y_7))
		(mod_0 r_0 x_39 y_7))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_1 (Nat_0) Bool)
(declare-fun isS_1 (Nat_0) Bool)
(assert (forall ((x_50 Nat_0) (x_49 Nat_0))
	(=> (= x_50 (S_0 x_49))
	    (projS_1 x_49 x_50))))
(assert (isZ_1 Z_0))
(assert (forall ((x_51 Nat_0))
	(isS_1 (S_0 x_51))))
(assert (forall ((x_52 Nat_0))
	(diseqNat_1 Z_0 (S_0 x_52))))
(assert (forall ((x_53 Nat_0))
	(diseqNat_1 (S_0 x_53) Z_0)))
(assert (forall ((x_54 Nat_0) (x_55 Nat_0))
	(=> (diseqNat_1 x_54 x_55)
	    (diseqNat_1 (S_0 x_54) (S_0 x_55)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_59 list_0) (x_57 Nat_0) (x_58 list_0))
	(=> (= x_59 (cons_0 x_57 x_58))
	    (head_1 x_57 x_59))))
(assert (forall ((x_59 list_0) (x_57 Nat_0) (x_58 list_0))
	(=> (= x_59 (cons_0 x_57 x_58))
	    (tail_1 x_58 x_59))))
(assert (isnil_0 nil_0))
(assert (forall ((x_60 Nat_0) (x_61 list_0))
	(iscons_0 (cons_0 x_60 x_61))))
(assert (forall ((x_62 Nat_0) (x_63 list_0))
	(diseqlist_0 nil_0 (cons_0 x_62 x_63))))
(assert (forall ((x_64 Nat_0) (x_65 list_0))
	(diseqlist_0 (cons_0 x_64 x_65) nil_0)))
(assert (forall ((x_66 Nat_0) (x_67 list_0) (x_68 Nat_0) (x_69 list_0))
	(=> (diseqNat_1 x_66 x_68)
	    (diseqlist_0 (cons_0 x_66 x_67) (cons_0 x_68 x_69)))))
(assert (forall ((x_66 Nat_0) (x_67 list_0) (x_68 Nat_0) (x_69 list_0))
	(=> (diseqlist_0 x_67 x_69)
	    (diseqlist_0 (cons_0 x_66 x_67) (cons_0 x_68 x_69)))))
(declare-fun x_0 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (x_2 Nat_0) (y_1 Nat_0) (x_10 Bool) (x_11 Bool))
	(=>	(and (= x_10 x_11)
			(x_0 x_11 x_2 y_1)
			(= x_1 (S_0 x_2))
			(= y_0 (S_0 y_1)))
		(x_0 x_10 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (x_2 Nat_0) (x_12 Bool))
	(=>	(and (= x_12 false)
			(= x_1 (S_0 x_2))
			(= y_0 Z_0))
		(x_0 x_12 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_13 Bool))
	(=>	(and (= x_13 false)
			(= x_1 Z_0)
			(= y_0 (S_0 z_0)))
		(x_0 x_13 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (x_14 Bool))
	(=>	(and (= x_14 true)
			(= x_1 Z_0)
			(= y_0 Z_0))
		(x_0 x_14 x_1 y_0))))
(declare-fun count_0 (Nat_0 Nat_0 list_0) Bool)
(assert (forall ((x_3 Nat_0) (y_2 list_0) (z_1 Nat_0) (xs_0 list_0) (x_16 Nat_0) (x_17 Nat_0) (x_15 Bool))
	(=>	(and (= x_16 (S_0 x_17))
			(count_0 x_17 x_3 xs_0)
			(= y_2 (cons_0 z_1 xs_0))
			(= x_15 true)
			(x_0 x_15 x_3 z_1))
		(count_0 x_16 x_3 y_2))))
(assert (forall ((x_3 Nat_0) (y_2 list_0) (z_1 Nat_0) (xs_0 list_0) (x_19 Nat_0) (x_20 Nat_0) (x_18 Bool))
	(=>	(and (= x_19 x_20)
			(count_0 x_20 x_3 xs_0)
			(= y_2 (cons_0 z_1 xs_0))
			(= x_18 false)
			(x_0 x_18 x_3 z_1))
		(count_0 x_19 x_3 y_2))))
(assert (forall ((x_3 Nat_0) (y_2 list_0) (x_21 Nat_0))
	(=>	(and (= x_21 Z_0)
			(= y_2 nil_0))
		(count_0 x_21 x_3 y_2))))
(declare-fun x_4 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_5 Nat_0) (y_3 Nat_0) (z_2 Nat_0) (x_6 Nat_0) (x_22 Bool) (x_23 Bool))
	(=>	(and (= x_22 x_23)
			(x_4 x_23 z_2 x_6)
			(= x_5 (S_0 z_2))
			(= y_3 (S_0 x_6)))
		(x_4 x_22 x_5 y_3))))
(assert (forall ((x_5 Nat_0) (y_3 Nat_0) (z_2 Nat_0) (x_24 Bool))
	(=>	(and (= x_24 false)
			(= x_5 (S_0 z_2))
			(= y_3 Z_0))
		(x_4 x_24 x_5 y_3))))
(assert (forall ((x_5 Nat_0) (y_3 Nat_0) (x_25 Bool))
	(=>	(and (= x_25 true)
			(= x_5 Z_0))
		(x_4 x_25 x_5 y_3))))
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_7 Nat_0) (y_4 list_0) (z_3 Nat_0) (xs_1 list_0) (x_27 list_0) (x_26 Bool))
	(=>	(and (= x_27 (cons_0 x_7 (cons_0 z_3 xs_1)))
			(= y_4 (cons_0 z_3 xs_1))
			(= x_26 true)
			(x_4 x_26 x_7 z_3))
		(insert_0 x_27 x_7 y_4))))
(assert (forall ((x_7 Nat_0) (y_4 list_0) (z_3 Nat_0) (xs_1 list_0) (x_29 list_0) (x_30 list_0) (x_28 Bool))
	(=>	(and (= x_29 (cons_0 z_3 x_30))
			(insert_0 x_30 x_7 xs_1)
			(= y_4 (cons_0 z_3 xs_1))
			(= x_28 false)
			(x_4 x_28 x_7 z_3))
		(insert_0 x_29 x_7 y_4))))
(assert (forall ((x_7 Nat_0) (y_4 list_0) (x_31 list_0))
	(=>	(and (= x_31 (cons_0 x_7 nil_0))
			(= y_4 nil_0))
		(insert_0 x_31 x_7 y_4))))
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_8 list_0) (y_5 Nat_0) (xs_2 list_0) (x_32 list_0) (x_33 list_0) (x_34 list_0))
	(=>	(and (= x_32 x_34)
			(isort_0 x_33 xs_2)
			(insert_0 x_34 y_5 x_33)
			(= x_8 (cons_0 y_5 xs_2)))
		(isort_0 x_32 x_8))))
(assert (forall ((x_8 list_0) (x_35 list_0))
	(=>	(and (= x_35 nil_0)
			(= x_8 nil_0))
		(isort_0 x_35 x_8))))
(assert (forall ((x_9 Nat_0) (y_6 list_0) (x_36 list_0) (x_37 Nat_0) (x_38 Nat_0))
	(=>	(and (diseqNat_1 x_37 x_38)
			(isort_0 x_36 y_6)
			(count_0 x_37 x_9 x_36)
			(count_0 x_38 x_9 y_6))
		false)))
(check-sat)
