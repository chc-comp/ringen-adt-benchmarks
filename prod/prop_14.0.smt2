(set-logic HORN)
(declare-datatypes ((Nat_1 0)) (((Z_1 ) (S_1 (unS_0 Nat_1)))))
(declare-fun diseqNat_0 (Nat_1 Nat_1) Bool)
(declare-fun unS_1 (Nat_1 Nat_1) Bool)
(declare-fun isZ_0 (Nat_1) Bool)
(declare-fun isS_0 (Nat_1) Bool)
(assert (forall ((x_36 Nat_1) (x_35 Nat_1))
	(=> (= x_36 (S_1 x_35))
	    (unS_1 x_35 x_36))))
(assert (isZ_0 Z_1))
(assert (forall ((x_37 Nat_1))
	(isS_0 (S_1 x_37))))
(assert (forall ((x_38 Nat_1))
	(diseqNat_0 Z_1 (S_1 x_38))))
(assert (forall ((x_39 Nat_1))
	(diseqNat_0 (S_1 x_39) Z_1)))
(assert (forall ((x_40 Nat_1) (x_41 Nat_1))
	(=> (diseqNat_0 x_40 x_41)
	    (diseqNat_0 (S_1 x_40) (S_1 x_41)))))
(declare-fun add_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun minus_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun le_0 (Nat_1 Nat_1) Bool)
(declare-fun ge_0 (Nat_1 Nat_1) Bool)
(declare-fun lt_0 (Nat_1 Nat_1) Bool)
(declare-fun gt_0 (Nat_1 Nat_1) Bool)
(declare-fun mult_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun div_0 (Nat_1 Nat_1 Nat_1) Bool)
(declare-fun mod_0 (Nat_1 Nat_1 Nat_1) Bool)
(assert (forall ((y_6 Nat_1))
	(add_0 y_6 Z_1 y_6)))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1) (r_0 Nat_1))
	(=> (add_0 r_0 x_33 y_6)
	    (add_0 (S_1 r_0) (S_1 x_33) y_6))))
(assert (forall ((y_6 Nat_1))
	(minus_0 Z_1 Z_1 y_6)))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1) (r_0 Nat_1))
	(=> (minus_0 r_0 x_33 y_6)
	    (minus_0 (S_1 r_0) (S_1 x_33) y_6))))
(assert (forall ((y_6 Nat_1))
	(le_0 Z_1 y_6)))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1))
	(=> (le_0 x_33 y_6)
	    (le_0 (S_1 x_33) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(ge_0 y_6 Z_1)))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1))
	(=> (ge_0 x_33 y_6)
	    (ge_0 (S_1 x_33) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(lt_0 Z_1 (S_1 y_6))))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_33 y_6)
	    (lt_0 (S_1 x_33) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(gt_0 (S_1 y_6) Z_1)))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1))
	(=> (gt_0 x_33 y_6)
	    (gt_0 (S_1 x_33) (S_1 y_6)))))
(assert (forall ((y_6 Nat_1))
	(mult_0 Z_1 Z_1 y_6)))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (mult_0 r_0 x_33 y_6)
			(add_0 z_3 r_0 y_6))
		(mult_0 z_3 (S_1 x_33) y_6))))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_33 y_6)
	    (div_0 Z_1 x_33 y_6))))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_33 y_6)
			(minus_0 z_3 x_33 y_6)
			(div_0 r_0 z_3 y_6))
		(div_0 (S_1 r_0) x_33 y_6))))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1))
	(=> (lt_0 x_33 y_6)
	    (mod_0 x_33 x_33 y_6))))
(assert (forall ((x_33 Nat_1) (y_6 Nat_1) (r_0 Nat_1) (z_3 Nat_1))
	(=>	(and (ge_0 x_33 y_6)
			(minus_0 z_3 x_33 y_6)
			(mod_0 r_0 z_3 y_6))
		(mod_0 r_0 x_33 y_6))))
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (projS_0 Nat_0)))))
(declare-fun diseqNat_1 (Nat_0 Nat_0) Bool)
(declare-fun projS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_1 (Nat_0) Bool)
(declare-fun isS_1 (Nat_0) Bool)
(assert (forall ((x_44 Nat_0) (x_43 Nat_0))
	(=> (= x_44 (S_0 x_43))
	    (projS_1 x_43 x_44))))
(assert (isZ_1 Z_0))
(assert (forall ((x_45 Nat_0))
	(isS_1 (S_0 x_45))))
(assert (forall ((x_46 Nat_0))
	(diseqNat_1 Z_0 (S_0 x_46))))
(assert (forall ((x_47 Nat_0))
	(diseqNat_1 (S_0 x_47) Z_0)))
(assert (forall ((x_48 Nat_0) (x_49 Nat_0))
	(=> (diseqNat_1 x_48 x_49)
	    (diseqNat_1 (S_0 x_48) (S_0 x_49)))))
(declare-datatypes ((list_0 0)) (((nil_0 ) (cons_0 (head_0 Nat_0) (tail_0 list_0)))))
(declare-fun diseqlist_0 (list_0 list_0) Bool)
(declare-fun head_1 (Nat_0 list_0) Bool)
(declare-fun tail_1 (list_0 list_0) Bool)
(declare-fun isnil_0 (list_0) Bool)
(declare-fun iscons_0 (list_0) Bool)
(assert (forall ((x_53 list_0) (x_51 Nat_0) (x_52 list_0))
	(=> (= x_53 (cons_0 x_51 x_52))
	    (head_1 x_51 x_53))))
(assert (forall ((x_53 list_0) (x_51 Nat_0) (x_52 list_0))
	(=> (= x_53 (cons_0 x_51 x_52))
	    (tail_1 x_52 x_53))))
(assert (isnil_0 nil_0))
(assert (forall ((x_54 Nat_0) (x_55 list_0))
	(iscons_0 (cons_0 x_54 x_55))))
(assert (forall ((x_56 Nat_0) (x_57 list_0))
	(diseqlist_0 nil_0 (cons_0 x_56 x_57))))
(assert (forall ((x_58 Nat_0) (x_59 list_0))
	(diseqlist_0 (cons_0 x_58 x_59) nil_0)))
(assert (forall ((x_60 Nat_0) (x_61 list_0) (x_62 Nat_0) (x_63 list_0))
	(=> (diseqNat_1 x_60 x_62)
	    (diseqlist_0 (cons_0 x_60 x_61) (cons_0 x_62 x_63)))))
(assert (forall ((x_60 Nat_0) (x_61 list_0) (x_62 Nat_0) (x_63 list_0))
	(=> (diseqlist_0 x_61 x_63)
	    (diseqlist_0 (cons_0 x_60 x_61) (cons_0 x_62 x_63)))))
(declare-fun x_0 (Bool Nat_0 Nat_0) Bool)
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_2 Nat_0) (x_9 Bool) (x_10 Bool))
	(=>	(and (= x_9 x_10)
			(x_0 x_10 z_0 x_2)
			(= x_1 (S_0 z_0))
			(= y_0 (S_0 x_2)))
		(x_0 x_9 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (z_0 Nat_0) (x_11 Bool))
	(=>	(and (= x_11 false)
			(= x_1 (S_0 z_0))
			(= y_0 Z_0))
		(x_0 x_11 x_1 y_0))))
(assert (forall ((x_1 Nat_0) (y_0 Nat_0) (x_12 Bool))
	(=>	(and (= x_12 true)
			(= x_1 Z_0))
		(x_0 x_12 x_1 y_0))))
(declare-fun insert_0 (list_0 Nat_0 list_0) Bool)
(assert (forall ((x_3 Nat_0) (y_1 list_0) (z_1 Nat_0) (xs_0 list_0) (x_14 list_0) (x_13 Bool))
	(=>	(and (= x_14 (cons_0 x_3 (cons_0 z_1 xs_0)))
			(= y_1 (cons_0 z_1 xs_0))
			(= x_13 true)
			(x_0 x_13 x_3 z_1))
		(insert_0 x_14 x_3 y_1))))
(assert (forall ((x_3 Nat_0) (y_1 list_0) (z_1 Nat_0) (xs_0 list_0) (x_16 list_0) (x_17 list_0) (x_15 Bool))
	(=>	(and (= x_16 (cons_0 z_1 x_17))
			(insert_0 x_17 x_3 xs_0)
			(= y_1 (cons_0 z_1 xs_0))
			(= x_15 false)
			(x_0 x_15 x_3 z_1))
		(insert_0 x_16 x_3 y_1))))
(assert (forall ((x_3 Nat_0) (y_1 list_0) (x_18 list_0))
	(=>	(and (= x_18 (cons_0 x_3 nil_0))
			(= y_1 nil_0))
		(insert_0 x_18 x_3 y_1))))
(declare-fun isort_0 (list_0 list_0) Bool)
(assert (forall ((x_4 list_0) (y_2 Nat_0) (xs_1 list_0) (x_19 list_0) (x_20 list_0) (x_21 list_0))
	(=>	(and (= x_19 x_21)
			(isort_0 x_20 xs_1)
			(insert_0 x_21 y_2 x_20)
			(= x_4 (cons_0 y_2 xs_1)))
		(isort_0 x_19 x_4))))
(assert (forall ((x_4 list_0) (x_22 list_0))
	(=>	(and (= x_22 nil_0)
			(= x_4 nil_0))
		(isort_0 x_22 x_4))))
(declare-fun x_5 (Bool Bool Bool) Bool)
(assert (forall ((x_6 Bool) (y_3 Bool) (x_23 Bool))
	(=>	(and (= x_23 y_3)
			x_6)
		(x_5 x_23 x_6 y_3))))
(assert (forall ((x_6 Bool) (y_3 Bool) (x_24 Bool))
	(=>	(and (= x_24 false)
			(not x_6))
		(x_5 x_24 x_6 y_3))))
(declare-fun sorted_0 (Bool list_0) Bool)
(assert (forall ((x_7 list_0) (y_4 Nat_0) (z_2 list_0) (y_5 Nat_0) (xs_2 list_0) (x_25 Bool) (x_26 Bool) (x_27 Bool) (x_28 Bool))
	(=>	(and (= x_25 x_28)
			(x_0 x_26 y_4 y_5)
			(sorted_0 x_27 (cons_0 y_5 xs_2))
			(x_5 x_28 x_26 x_27)
			(= x_7 (cons_0 y_4 z_2))
			(= z_2 (cons_0 y_5 xs_2)))
		(sorted_0 x_25 x_7))))
(assert (forall ((x_7 list_0) (y_4 Nat_0) (z_2 list_0) (x_29 Bool))
	(=>	(and (= x_29 true)
			(= x_7 (cons_0 y_4 z_2))
			(= z_2 nil_0))
		(sorted_0 x_29 x_7))))
(assert (forall ((x_7 list_0) (x_30 Bool))
	(=>	(and (= x_30 true)
			(= x_7 nil_0))
		(sorted_0 x_30 x_7))))
(assert (forall ((x_8 list_0) (x_31 list_0) (x_32 Bool))
	(=>	(and (= x_32 false)
			(isort_0 x_31 x_8)
			(sorted_0 x_32 x_31))
		false)))
(check-sat)
